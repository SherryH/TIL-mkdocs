{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TIL Notes","text":"<p>The notes here are TIL and 15-5 review. Each TIL is a record of what I learnt today. 15-5 is a brief summary of - Completed Activities - Next Priorities - Challenges - Lessons learnt/ Opps for Improvements</p> <p>The format may change along the journey :)</p>"},{"location":"Work/202209130837%20-%20TIL/","title":"202209130837   TIL","text":""},{"location":"Work/202209130837%20-%20TIL/#basic-house-keeping-that-i-overlooked","title":"Basic House Keeping that I overlooked","text":"<ul> <li>Type casting is more error prone. Type assertion is better.</li> <li>Note: Type assertion is just how we normally let compiler know about a type of a variable.</li> <li>Common pitfall: in context declaration with {}</li> </ul> <pre><code>export const MetaAdAccountContext = \n  createContext&lt;MetaAdAccountContextType&gt;\n  ({} as MetaAdAccountContextType);\n</code></pre> <ul> <li>We can simply declare as null</li> </ul> <pre><code>export const MetaAdAccountContext =\ncreateContext&lt;MetaAdAccountContextType | null&gt;(null);\n</code></pre> <ul> <li>When reading from context, do error handling to check whether it is called inside the provider</li> </ul> <pre><code>export const useMetaAdAccountContext = () =&gt; useContext(MetaAdAccountContext);\n\n// With error handling\nexport const useMetaAdAccountContext = (): MetaAdAccountContextType =&gt; {\n  const contextValue = useContext(MetaAdAccountContext);\n  if (contextValue == null) {\n    throw new Error('MetaAdAccountContext was read outside its provider');\n\n  }\n  return contextValue;\n};\n</code></pre>"},{"location":"Work/202209130837%20-%20TIL/#replying-to-support-message","title":"Replying to Support message","text":""},{"location":"Work/202209140953%20-%20TIL/","title":"Observations","text":""},{"location":"Work/202209140953%20-%20TIL/#meta-onboarding-meeting-on-n-on","title":"Meta Onboarding Meeting on n on","text":"<ul> <li>Repeated discussion about the ideal workflow</li> <li>Andrey took out a Miro board to put discussion in words and graphs - like whiteboarding - very helpful </li> <li>Jemi: designers need to know about the operations: partial failure? total failure? we need to know the technical constraints first.</li> <li>Technical Discovery: understand the limitations </li> <li>Github is faster than slack. Find open API yaml file. Find documents available in the endpoints. <ul> <li>github search through org, see what services are available</li> </ul> </li> </ul>"},{"location":"Work/202209140953%20-%20TIL/#andrey-n-jemi-obsevations","title":"Andrey n Jemi obsevations","text":"<ul> <li>Andrey added a few columns: block, tech planning, read for dev - make things visible on board in terms of the status of the tickets </li> <li>Also make things more explicit about the priority of each feature</li> <li>Jemi is more concerned about the tickets that are currently in progress at once</li> </ul>"},{"location":"Work/202209140953%20-%20TIL/#what-i-thought","title":"What I thought","text":"<ul> <li>The team has a unspoken, agreed way of working</li> <li>We never set an explicity WIP limit for the tickets. I feel it might be a bit tricky to limit when some tickets are in review - sometimes just waiting on reviewer but sometimes there are more to change</li> </ul>"},{"location":"Work/202209140953%20-%20TIL/#reflections","title":"Reflections","text":""},{"location":"Work/202209140953%20-%20TIL/#casual-chat-time-for-continual-discussion","title":"Casual chat time for continual discussion","text":"<ul> <li>Sometimes after the formal meeting time, I would ponder a bit and more Qs may come up - if in office, we can easily tap on each other's shoulders, turn the chair around and continue discussing in an informal manner. I feel it will be helpful. </li> <li>How can we replicate this experience in the remote setting?</li> </ul>"},{"location":"Work/202209140953%20-%20TIL/#learning-too-slow","title":"Learning too slow","text":"<ul> <li>I feel I learn too slow, always take me longer to finish off tickets... I am usually hopeful after each round of review, but feeling a bit stupid that there are more things to change and update.. :(</li> <li>I wish I can learn and work faster and write better code effectively</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/","title":"202209151356   TIL","text":""},{"location":"Work/202209151356%20-%20TIL/#understand-api-by-reading-openapi-yaml","title":"Understand API by reading OpenAPI yaml","text":"<ul> <li>Understanding the current API capabilities/ constraints in the Tech Discovery would help designers design executable features, and reduce the rework, rediscussion effort</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#how-to-read-openapi","title":"How to read OpenAPI?","text":"<ul> <li>Github Org search for the used services for the backend repo</li> <li>e.g. for the Meta API, we can check Correos OpenAPI.yaml</li> <li>In line 776, we see adAccount schema definition</li> <li>In line 2178, we see the actual request paths and signatures</li> <li>line 1378 - create connections</li> <li>line 1242 - patch accounts - but no connections?</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#encourage-thorough-tests-smaller-tasks","title":"Encourage thorough tests - smaller tasks","text":"<ul> <li>Tests would be more thorough if the tasks are smaller. Even if the story seems simple, before we start coding, think through</li> <li>Split into task that can be done in 1 day, include tests!</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#lead-and-managers","title":"Lead and Managers","text":"<ul> <li>Process has issues but when I am in for long, sometimes i don't see them</li> <li>Or, I am still learning, struggling with the tech stuff so harder to see the process picture</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#the-pain-is-there-how-to-induce-change","title":"The Pain is there, how to induce change?","text":"<ul> <li>Lead tech planning is painful. Hannu stressed the importance of </li> <li>There are more aspect to it. Jemi's doc explains very nicely</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#how-can-we-come-up-with-a-list-like-this","title":"How can we come up with a list like this?","text":"<ul> <li>What do we need after tech planning? =&gt; API signature</li> <li>After planning, people start working on the tickets. What Qs might people have?<ul> <li>Which ticket can other engineers work on following planning?</li> </ul> </li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#css-the-divider-height-doesnt-work","title":"CSS - The Divider height % doesn't work","text":"<ul> <li>works in px but not in %. </li> <li>=&gt; All its parents, grandparents, great grandparents etc have to have <code>height = 100%</code>!</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#reflection-feeling","title":"Reflection (Feeling)","text":"<ul> <li>A little overwhelmed. so much to learn in every PR!</li> <li>Need to focus!</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#tests-mocking-is-not-straight-forward","title":"Tests Mocking is not straight forward","text":""},{"location":"Work/202209151356%20-%20TIL/#mock-the-internal-method","title":"Mock the Internal Method","text":"<ul> <li>I wanted to mock the internal method in React =&gt; but actually I should just mock the API call</li> <li>Mocking the API call,=&gt;  mock the <code>get</code> method</li> <li>Import the whole package and mock the whole package</li> <li>For mock data, use Factory to build </li> </ul> <pre><code>jest.mock('../../js/lib/api', () =&gt; jest.fn());\napi.get = jest.fn().mockResolvedValue(companies); \n\n// lint complains about updating app.get\n\n</code></pre> <ul> <li>We can also mock single function using <code>spyOn</code></li> </ul> <pre><code>import * as api from '../../js/lib/api';\n\nlet mockGet;\nbeforeAll(() =&gt; {\n  // need to import the mock module with ImportNamedSpecifier\n  mockGet = jest.spyOn(api, 'get');  \n  mockGet.mockResolvedValue(companies);\n});\n\nafterAll(() =&gt; {\n  mockGet.mockRestore();\n});\n</code></pre> <ul> <li>mockImplementation is similar to mockResolvedValue</li> <li>used for mocking functions. </li> </ul> <pre><code>spy = jest\n        .spyOn(reactRouter, 'useNavigate')\n        .mockImplementation(() =&gt; navigate);\n</code></pre> <ul> <li>It is super difficule to implement mocking like: \u274c</li> </ul> <pre><code>jest.mock('../../js/lib/api',()=&gt;{\n  return({\n    get: jest.fn().mockResolvedValue(companies)\n  })\n})\n</code></pre>"},{"location":"Work/202209151356%20-%20TIL/#jestmock-always-failed-prob-cos-hoisting-issue","title":"jest.mock always failed. prob cos 'hoisting' issue?","text":""},{"location":"Work/202209151356%20-%20TIL/#reference-mockdata-inside-jestmock","title":"Reference mockData inside jest.mock","text":"<ul> <li>use jest.spyOn!</li> </ul>"},{"location":"Work/202209151356%20-%20TIL/#double-mock","title":"Double mock","text":"<pre><code>jest.mock('js/lib/api');\n\njest.mocked(api.useFetch).mockImplementation(() =&gt; ({\n  data: mockUsers,\n  isLoading: false,\n  error: undefined,\n  refetchData: () =&gt; {}\n}));\n\n</code></pre> <p>Reference Blog post:  - Mocking Functions and modules with jest - Understanding jest mocks</p>"},{"location":"Work/202209151356%20-%20TIL/#debug-test-mocking-successful-why-not-rendered-in-test","title":"Debug: Test Mocking successful, why not rendered in test?","text":"<ul> <li>The props are all passed in correcly - mocking worked successfully!</li> <li>because eslint errors? =&gt; no, did a simple return and the expected \"test\" is rendered</li> </ul> <pre><code>if (true) {return &lt;div&gt;test&lt;/div&gt;}\n</code></pre> <ul> <li>Tried hardcoding the button text: \"Test Test\" =&gt; rendered ok</li> <li>=&gt; it was originally undefined. only in the second render that it showed</li> <li>=&gt; update the assertion to wait for 2nd render!</li> <li>issue: use <code>findByText</code>  (getBy + waitFor), asked to handle promise...</li> <li><code>const elem = await screen.findBy....</code></li> <li><code>expect(elem).toBeInTheDocument</code></li> <li>OR</li> <li><code>expect(screen.findByText('Smartly.io Academy')).resolves.not.toBeNull();</code></li> </ul>"},{"location":"Work/202209182120%20-%2015-5/","title":"202209182120   15 5","text":""},{"location":"Work/202209182120%20-%2015-5/#this-week-completed-activities-notable-wins-whats-working","title":"This week (completed activities, notable wins, what\u2019s working)","text":"<ul> <li>Completed Summary page</li> <li>Understood the Nested Routes with Outlet that Hannu improved on, with mini codesandbox</li> <li>Understand Jest mocking better: <code>mock</code>, <code>jest.fn</code>, <code>spyOn</code>, it can significant reduce the time I spent in mocking </li> </ul>"},{"location":"Work/202209182120%20-%2015-5/#next-weeks-priorities","title":"Next week\u2019s priorities","text":"<ul> <li>Understand Jemi's PRs, maybe do a mini codesandbox</li> <li>Finish the first Company Switcher ticket</li> <li>Help with the 2nd Company Switcher ticket</li> </ul>"},{"location":"Work/202209182120%20-%2015-5/#challengesroadblocks","title":"Challenges/Roadblocks","text":"<ul> <li>I wish I can work on tickets faster </li> <li>Understanding Jemi's PR would take some effort. I may not have the energy to get to it after work</li> <li></li> </ul>"},{"location":"Work/202209182120%20-%2015-5/#lessons-learnedopps-for-improvement","title":"Lessons Learned/Opps for improvement","text":""},{"location":"Work/202209182120%20-%2015-5/#-jemis-technical-story-planning-doc-is-helpful-i-wonder-next-time-what-qs-we-can-ask-to-make-finer-improvements","title":"- Jemi's Technical Story Planning doc is helpful. I wonder next time,  what Qs we can ask to make finer improvements?","text":""},{"location":"Work/202209191327%20-%20TIL/","title":"202209191327   TIL","text":""},{"location":"Work/202209191327%20-%20TIL/#thunk","title":"Thunk","text":"<ul> <li>a piece of code that does some delayed work</li> <li>returns a function that gets executed later</li> <li>e.g. <code>redux-thunk</code>, thunk in mock</li> </ul> <pre><code>let companies;\njest.mock('../../js/lib/api',()=&gt;{\n  return({\n    get: jest.fn().mockImplementation(() =&gt; Promise.resolve(companies))\n  })\n});\n</code></pre>"},{"location":"Work/202209201115%20-%20TIL/","title":"202209201115   TIL","text":""},{"location":"Work/202209201115%20-%20TIL/#smartly-app-forever-loading","title":"Smartly App forever loading","text":"<pre><code>rm -rf ~/Library/pnpm\n\npnpm store prune\n\n// in root of monorepo\nrm -rf packages/*/dist\nrm -rd packages/*/node_modules\n\n// in packages/frontend\npnpm install --force\npnpm build\n</code></pre> <ul> <li>I tried all the usual drills but it still stayed in the forever loading screen</li> <li>Switching to <code>Incognito</code> mode finally worked and showed errors in the consoles</li> <li>Clearing cache and cookies still didn't work</li> <li>=&gt; maybe try a hard refresh next time?</li> <li>=&gt; Remove potential chrome extensions!!!</li> </ul>"},{"location":"Work/202209201115%20-%20TIL/#css-make-text-input-width-100","title":"CSS: make text input width 100%","text":"<ul> <li>inside the modal, without changing the width of the company, how to make it grow to align with other siblings?</li> <li>Wrapper around everything and set width=100% on wrapper!</li> </ul>"},{"location":"Work/202209201115%20-%20TIL/#levels-of-abstraction","title":"Levels of abstraction","text":"<ul> <li>An abstraction can be a shortform of expressioning a group of other things</li> <li>It can be 1 concept that can be used to express 2 other concepts</li> <li>e.g. <code>map</code> + <code>access property</code> =&gt; <code>pluck</code> . Pluck is an abstraction</li> <li>Inside my JSX array.map, for each individual <code>company</code>, I am computing <code>accountNumberPerCompany</code> and derive <code>plural('account',accountNumberPerCompany)</code> </li> <li>Those can be extracted out into a separate component </li> <li>=&gt; Single Responsibility of the component</li> </ul>"},{"location":"Work/202209201115%20-%20TIL/#ts-helps-code-design","title":"TS helps code design","text":"<ul> <li>When typing gets too ugly, it is a sign that code design is not right</li> <li>Just like when test gets too hard, it is a sign that code smells</li> <li>In my <code>CompanySelector</code>, I have a generic <code>SearchFilter</code>, for which I created a default filter function for filtering through the companies when used in the <code>CompanySelector</code> . The filter function can also be replaced by other functions when needed</li> <li>There is type incompatibility after assigning types to <code>defaultFilterFunction</code> and <code>SearchFilter</code>  because <code>SearchFilter</code> types are more general, more generic than <code>defaultFilterFunction</code>, which was designed for <code>CompanySelector</code>.</li> <li>The <code>defaultFilterFunction</code> should not be default. It should be passed in to <code>SearchFilter</code> when used inside <code>CompanySelector</code> for which it was created.</li> <li>\ud83e\udd2f TS typing can help improving code design because of the different levels of generics in the functions!</li> </ul>"},{"location":"Work/202209201115%20-%20TIL/#good-convention-callback","title":"Good Convention - callback","text":"<ul> <li>When pass in [state, setState], make the callback prop name as <code>onStateChange</code> or <code>onStateClick</code>  depending on the listener</li> <li>Name the callback as the callback, instead of state setter </li> </ul>"},{"location":"Work/202209201115%20-%20TIL/#good-convention-showhide-component","title":"Good Convention  - show/hide component","text":"<ul> <li>A component itself should not care about whether it will show/ hide</li> <li>that is controlled from the parent</li> </ul>"},{"location":"Work/202209211428%20-TIL/","title":"202209211428  TIL","text":""},{"location":"Work/202209211428%20-TIL/#debug-jest-why-text-not-showing-up","title":"Debug Jest - why text not showing up?","text":"<p>See  202209151356 - TIL#Debug Test Mocking successful why not rendered in test</p>"},{"location":"Work/202209211428%20-TIL/#debug-css-adding-icon-screwed-up-alignment","title":"Debug CSS - Adding Icon screwed up alignment","text":"<ul> <li>Original horional alignment of text becomes misaligned after adding Icon</li> <li>Margin and paddings are added for Icon so it is not squashed, but still misaligned</li> <li>the <code>height</code> of the text comes different</li> <li>Orignally they were both 20, after adding Icon, height becomes 24</li> <li>Change Icon Size to be small so that Icon height is 20px!</li> </ul>"},{"location":"Work/202209221332%20-%20TIL/","title":"202209221332   TIL","text":""},{"location":"Work/202209221332%20-%20TIL/#domain-onboarding-ad-account-list","title":"Domain - Onboarding Ad Account List","text":"<ul> <li>To connect to all or some of the available ad accounts under the Business Manager that the authoriser has access to, it is done in the proprietary modal (Snap, Tiktok etc)</li> <li>So the Ad Account list is just the accounts that user has connected with, under the chosen company</li> <li>1 Ad Accound can only be connected with 1 Smartly User even though multiple platform authorizers can have the access to the ad account on the platform</li> <li>In the Proprietary modal, after 1 ad account has been connected with an authorizer, it cannot be connected with another authorizer</li> </ul>"},{"location":"Work/202209221332%20-%20TIL/#why-we-need-a-smartlyuserid-for-account-returned","title":"Why we need a SmartlyUserId for account returned?","text":"<ul> <li>So that we can filter accounts according to the currentUserId === smartlyUserId (authorizer's smartly id) ie. currentUser is the authorizer</li> <li>Else all the accounts of the company get returned. Some may be authorized by other people and we are not interested in those in the current onboarding steps. (We just wanna see the ones we just connected in the proprietary modal!)</li> </ul>"},{"location":"Work/202209221332%20-%20TIL/#useselector","title":"UseSelector","text":"<ul> <li>In Redux, a <code>selector</code> maps <code>state</code> to <code>props</code> and passed into the components</li> <li><code>useSelector</code> subscribes to the redux store, and runs the <code>selector</code> whenever an <code>action</code> is dispatched</li> </ul>"},{"location":"Work/202209221332%20-%20TIL/#redux-first-router-navigation","title":"Redux-First Router Navigation","text":"<ul> <li>On the new react-router-dom pages, navigation to  is simple as we just need to </li> </ul>"},{"location":"Work/202209221332%20-%20TIL/#react-router-dom","title":"React-Router-Dom","text":"<ul> <li>The URL confines to the format <code>/company/:companyId/account/:accoundId</code> </li> <li>Company scoped and Account scoped URL makes it easy to navigate, by changing account or companies on the URL with <code>useNavigate</code> and <code>navigate(newLocation)</code> </li> <li>To check the current page is react-router-dom <code>isInRouterContext &amp;&amp; !hasReduxRoute</code></li> </ul>"},{"location":"Work/202209221332%20-%20TIL/#redux-first-router","title":"Redux First Router","text":"<ul> <li>we can not get the companyId or account id from the path</li> <li>We can get the Redux RouteId (current page route) from <code>useSelector(getLocation)</code></li> <li>To navigate, <code>useDispatch</code>, pass in <code>{type: Route.PAGENAME, payload: {companyId, accountId} }</code> etc</li> </ul>"},{"location":"Work/202209231330%20-TIL/","title":"202209231330  TIL","text":""},{"location":"Work/202209231330%20-TIL/#dev-data-prep-create-new-fb-is-easier","title":"Dev Data Prep: Create New FB is easier","text":"<ul> <li>After all accounts have been connected, we cannot proceed further pass the Pages&amp;App step as there is no account available for connection in the previous step...</li> <li>Disconnect account on Smartly Setting is taking forever</li> <li>Removing the accound or the Business Manager from FB is also a pain</li> <li>Creating a new FB account! Just wait for 1 hour. Much easier! </li> </ul>"},{"location":"Work/202209231330%20-TIL/#react-context-state-saved-in-localstorage","title":"React: Context State saved in localStorage","text":""},{"location":"Work/202209231330%20-TIL/#why-is-this-context-state-not-saved-when-navigating-through-steps","title":"Why is this context state not saved when navigating through steps?","text":""},{"location":"Work/202209261207%20-%2015-5/","title":"202209261207   15 5","text":""},{"location":"Work/202209261207%20-%2015-5/#this-week-completed-activities-notable-wins-whats-working","title":"This week (completed activities, notable wins, what\u2019s working)","text":"<ul> <li>Finished company selector UI</li> <li>Rules on decompose components:<ul> <li>levels of abstraction &gt; 2</li> <li>Move the corresponding hook and the corresponding JSX closer</li> </ul> </li> </ul>"},{"location":"Work/202209261207%20-%2015-5/#next-weeks-priorities","title":"Next week\u2019s priorities","text":"<ul> <li>Release CompanySelector GA</li> <li>Complete the Nested Checkbox list for Meta Onboarding Pages&amp;Apps</li> </ul>"},{"location":"Work/202209261207%20-%2015-5/#challengesroadblocks","title":"Challenges/Roadblocks","text":"<ul> <li>Hard to keep on top of all slack threads</li> </ul>"},{"location":"Work/202209261207%20-%2015-5/#lessons-learnedopps-for-improvement","title":"Lessons Learned/Opps for improvement","text":"<ul> <li>When env stopped working and tried the restart dance, and only working in Incognito mode - Chrome extension may be the culprit!</li> <li>\"Onboarding\" flow can be a confusing/ over loaded term as our \"Onboarding\" period is 90 days. Maybe rename as \"PreOnboarding\" </li> <li>Domain:<ul> <li>Currently the list of adAccounts is associated with the company, not with the authoriser</li> <li>By BE providing the authoriser SmartlyUserId, we can filter and show only the current user authorised adaccounts in the Onboarding</li> </ul> </li> <li>Routing<ul> <li>React-Router-Dom<ul> <li>Get the current company and account Id from URL</li> <li><code>navigate(newLocation)</code></li> <li>To check the current page is react-router-dom <code>isInRouterContext &amp;&amp; !hasReduxRoute</code></li> </ul> </li> <li>rdux-first-route<ul> <li>Hard to get the companyId and accountId from URL. They are in the store</li> <li>We need to use selector to get the current page route <code>useSelector(getLocation)</code></li> <li>To navigate, we dispatch actions to the new route with <code>useDispatch</code> and action  <code>{type: Route.PAGENAME, payload: {companyId, accountId} }</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"Work/202209301020%20-%20TIL/","title":"202209301020   TIL","text":""},{"location":"Work/202209301020%20-%20TIL/#jest-debug-input-type-error","title":"Jest Debug: input type error?","text":"<ul> <li>nothng looks wrong but get type error in the props and error messages like <code>{} ... not assignable, no methods filter, concat...etc</code> </li> <li>most likely forgot to put the input params as a prop object into React function</li> </ul>"},{"location":"Work/202209301020%20-%20TIL/#jest-debug-unable-to-find-role","title":"Jest Debug: \"Unable to find role...\"","text":"<ul> <li>React-testing-library shows the current DOM on page when the assertion fails</li> <li>The strange thing is, although it complains <code>TestingLibraryElementError: Unable to find an accessible element with the role \"checkbox\" and name Pages (3)</code></li> <li>but the element is definitely shown as a list of the checkbox that react-testing-library can find...</li> <li>ok, the error happened in the <code>scree.debug()</code> line... if we don't use <code>screen.debug..</code></li> </ul>"},{"location":"Work/202209301020%20-%20TIL/#simplify-and-make-it-dump-as-possible-to-pass","title":"Simplify and Make it dump as possible to pass","text":"<ul> <li>Using full name text matching - the element can be found~!</li> <li>Problem in my regex..... <code>/Pages (\\d.)/</code></li> <li>it should be <code>/Pages \\(\\d\\)/</code>  =&gt; parenthesis need to be escaped!!</li> </ul>"},{"location":"Work/202209301020%20-%20TIL/#jest-debug-duplicate-items-set","title":"Jest Debug: Duplicate items set","text":"<ul> <li>I think my complex test actually caught a bug yay!</li> <li>When setting state, my existing logic might have set duplicated objects in the state</li> <li>To avoid the duplication:<ul> <li>I was thinking of using <code>Set</code> or <code>Map</code> to force collection unique</li> <li>Map -&gt; array: spread operator <code>[...new Map().values()]</code></li> <li>array of object -&gt; Map:    <code>const kvArray = [[key1, val1],[key2, val2]]   const myMap = new Map(kvArray)   myMap.get('key1') // val1</code></li> </ul> </li> </ul>"},{"location":"Work/202209301020%20-%20TIL/#make-an-array-of-objects-unique","title":"Make an array of objects unique","text":"<pre><code>const transformedArray = myArray.map(obj=&gt;[obj.key, obj.val])\nconst uniqueArray = [...new Map(transformedArray).values()]\n</code></pre>"},{"location":"Work/202209301020%20-%20TIL/#make-the-operation-repeatable-generic-function","title":"Make the operation repeatable (generic function)","text":"<ul> <li>Can be applied to different arrays repeatedly</li> <li>The function name makes the purpose descriptive, improves readability</li> </ul> <pre><code>const makeUniqueList = (myArray, key)=&gt;{\n    const newArray = myArray.map(obj=&gt; [obj[key], obj])\n    return [... new Map(newArray).values()]\n}\n</code></pre>"},{"location":"Work/202209301020%20-%20TIL/#use-ts-generics-in-helper-function","title":"Use TS generics in helper function!","text":"<ul> <li>To pass a generic into an arrow function <code>&lt;T&gt;(input: T[]):T[] =&gt;{}</code></li> <li>Resolve the TS error by using its error msg expectations <code>was expecting... but received...</code></li> </ul>"},{"location":"Work/202209301020%20-%20TIL/#jest-debug-on-screen-checked-item-is-not-the-state","title":"Jest Debug: on screen checked item is not the state!?","text":"<ul> <li>checked using <code>screen.debug</code> for <code>getAllByRole('checkbox', { name: /My App/, checked: true })</code>  =&gt; only 1 elem shows up. It does not show the name or id..</li> <li>So check using <code>checked: false</code> and also only 1 elem shows up??</li> </ul>"},{"location":"Work/202209301020%20-%20TIL/#see-what-is-rendered-by-test","title":"See what is rendered by test","text":"<ul> <li>Purposely get an element not found on page, so that react-testing-library would print out the currently available elements to offer a glance</li> <li>Looks like the filter was not cleared previously?!</li> <li>update use <code>userEvent.clear()</code> and properly cleared input</li> </ul>"},{"location":"Work/202210051441%20-%20TIL/","title":"202210051441   TIL","text":""},{"location":"Work/202210051441%20-%20TIL/#make-use-of-hooks-conditionally","title":"Make use of hooks conditionally","text":"<ul> <li>Hooks cannot be used inside if/else statement conditionally</li> </ul>"},{"location":"Work/202210051441%20-%20TIL/#context-conditionally-disable-companyselector-based-on-route","title":"Context: conditionally disable companySelector based on route","text":"<ul> <li>On navigating to the new path, we want to</li> <li>get the <code>pathname</code>, use either <code>useLocation</code>  (react-router) or <code>useSelector(getLocation)</code>  (redux routes)</li> <li>run <code>pathIsSupport(pathName)</code></li> <li>get <code>true/ false</code> to know whether companySelector is disabled</li> </ul> <pre><code>CompanySelector\n\nif(useInRouterContext()) {\n  // is a react-router path!\n\n  // get the path\n  const {pathName} = useLocation()\n\n  // check if path is supported\n\n} else {\n  // is a redux path\n\n  const {pathName} = useSelector(getLocation())\n}\n</code></pre> <ul> <li>the above won't work as we can't call hooks conditionally</li> </ul>"},{"location":"Work/202210051441%20-%20TIL/#solution-we-render-components-conditionally-and-use-hooks-inside-those-components","title":"Solution: We render components conditionally and use hooks inside those components!","text":"<pre><code>// CompanySelector\n\n&lt;LocationIsSupportedRenderless callback={setIsPathSupported} /&gt;\n\n\n// LocationIsSupportedRenderless\n\nuseInRouterContext() ? (\n  &lt;RouterLocationIsSupportedRenderless {...props} /&gt;\n) : (\n  &lt;ReduxLocationIsSupportedRenderless {...props} /&gt;\n);\n\n// RouterLocationIsSupportedRenderless\nconst {pathName} = useLocation()\n\ncallback(pathIsSupported(pathName)) // wrap in useEffect\n\n\n</code></pre>"},{"location":"Work/202210051441%20-%20TIL/#domain-switch-company","title":"Domain: Switch Company","text":""},{"location":"Work/202210051441%20-%20TIL/#redux-routes","title":"Redux Routes","text":""},{"location":"Work/202210051441%20-%20TIL/#eg-media_library","title":"e.g. MEDIA_LIBRARY","text":"<ul> <li><code>frontend/js/routes/index.ts</code>  define the path</li> <li><code>NavigationHub/data.tsx</code> defines the default routeParams for MEDIA_LIBRARY route. ie the landing view after user navigates <code>libraryId, kindFilter</code> predefined</li> </ul>"},{"location":"Work/202210051441%20-%20TIL/#react-router-dom","title":"React Router Dom","text":""},{"location":"Work/202210051441%20-%20TIL/#eg-user-settings","title":"e.g.  User Settings","text":"<ul> <li><code>/frontend/js/routes/reactRouterRoutes.tsx</code> define the path</li> <li>When changing the location, we simply substitute the <code>companyId</code> in the path</li> </ul>"},{"location":"Work/202210051441%20-%20TIL/#parent-routes-of-concern","title":"Parent Routes of concern","text":"<ul> <li><code>/pivottable /library/media /automation_feeds /workspaces</code> are all redux routes</li> <li><code>route.id</code> is the routes defined like <code>route.COMPANY_PIVOT_TABLES</code></li> <li>on CompanySelector click, swapping companyId and fall back to parent route should be auto handled inside <code>useCompanySelectorReduxFirstRouter</code></li> </ul>"},{"location":"Work/202210051441%20-%20TIL/#bug-mismatch-in-route-type-determination","title":"BUG? mismatch in route type determination","text":"<ul> <li><code>LocationIsSupportedRenderless</code> sugests <code>/pivottable</code> is react-router-dom.. it is still able to get the pathname by <code>useLocation</code> even though it is not a real react-router-dom route.</li> <li><code>useCompanySelector</code> suggests it is redux routes</li> </ul>"},{"location":"Work/202210082251%20-%20TIL/","title":"202210082251   TIL","text":""},{"location":"Work/202210082251%20-%20TIL/#code-refactoring-toggle-an-item","title":"Code Refactoring - Toggle an Item","text":""},{"location":"Work/202210082251%20-%20TIL/#simplify-conditional-returns","title":"Simplify conditional returns","text":"<pre><code>    setSelectedConnections((prevSelections) =&gt;\n      isAlreadySelected\n        ? prevSelections.filter((selection) =&gt; selection.id !== connection.id)\n        : [...prevSelections, connection]\n    );\n</code></pre> <ul> <li>looks clunky to functionise only the return statements</li> <li>looks more sleak to return also the callback function</li> <li>1st intuition: make the conditional as an argument into the callback function</li> <li>2nd (better): put it before callback! <code>conditional</code> is not required in the return statements!</li> </ul> <pre><code>    setSelectedConnections(\n      isAlreadySelected\n        ? (prevSelections) =&gt;\n            prevSelections.filter((selection) =&gt; selection.id !== connection.id)\n        : (prevSelections) =&gt; [...prevSelections, connection]\n    );\n</code></pre> <ul> <li>Give the functions descriptive names</li> </ul> <pre><code>const addItem = (item) =&gt; (prevSelections) =&gt; [...prevSelections, item];\n\nconst removeItem = (item) =&gt; (prevSelections) =&gt;\n  prevSelections.filter((selection) =&gt; selection.id !== item.id);\n\nsetSelectedConnections(\n  isAlreadySelected ? removeItem(connection) : addItem(connection)\n);\n</code></pre> <ul> <li>^ much more beautiful!!</li> <li>We can extract <code>removeItem</code> even further! </li> <li>We can docompose the filter callback into a predicate identity check</li> </ul> <pre><code>const identityPredicate = (a: FacebookConnection) =&gt; (b: FacebookConnection) =&gt;\n  a.id !== b.id &amp;&amp; a.type === b.type;\n\nconst addItem = (item) =&gt; (prevSelections) =&gt; [...prevSelections, item];\n\nconst removeItem = (item) =&gt; (prevSelections) =&gt;\n  prevSelections.filter(identityPredicate(item));\n\nsetSelectedConnections(\n  isAlreadySelected ? removeItem(connection) : addItem(connection)\n);\n\n</code></pre> <ul> <li>and since it is testing for the negating form, we can also make a negating function to verifying it~</li> <li><code>prevSelections.filter(negate(identityPredicate(item)))</code></li> <li>negate input: predicate, output: filter callback</li> <li>our identityPredicate can be changed to test for positives</li> </ul> <pre><code>const negate = (predicate) =&gt; (param) =&gt; !predicate(param);\n\nconst identityPredicate = (a: FacebookConnection) =&gt; (b: FacebookConnection) =&gt;\n  a.id === b.id &amp;&amp; a.type === b.type;\n\nconst addItem =\n  (item: FacebookConnection) =&gt; (prevSelections: FacebookConnection[]) =&gt;\n    [...prevSelections, item];\n\nconst removeItem =\n  (item: FacebookConnection) =&gt; (prevSelections: FacebookConnection[]) =&gt;\n    prevSelections.filter(negate(identityPredicate(item)));\n</code></pre> <ul> <li>We can make the <code>negate</code> function more generetic by spreading the arguments into the function <code>(predicate) =&gt; (...param) =&gt; !predicate(...param);</code></li> </ul>"},{"location":"Work/202210082251%20-%20TIL/#add-types","title":"Add Types","text":"<ul> <li>We can make the <code>predicate</code> function more generic by asserting the inputs only need to have the property <code>id</code> and <code>type</code></li> <li>A predicate is essentially a function that returns a boolean</li> <li>such function type is <code>(...params: unknown[]) =&gt; boolean</code></li> <li>we can define the predicate type <code>P</code> to be such function type <code>&lt;P extends (...params: unknown[]) =&gt; boolean&gt;</code></li> <li>We use <code>unknown</code> instead of <code>any</code>. <code>any</code> is the super type of everything in TS and does not check types. <code>unknown</code> is also a top type but it checks for type safety!</li> <li><code>Parameters</code> is a TS type utility that returns a tuple [] for a function type</li> <li><code>Parameters&lt;P&gt;</code> returns params of the predicate</li> </ul> <pre><code>const negate = &lt;P extends () =&gt; boolean&gt;(predicate: P) =&gt; (...param: Parameters&lt;P&gt;) =&gt; !predicate(...param);\n</code></pre>"},{"location":"Work/202210082251%20-%20TIL/#code-refactoring-toggle-all-items","title":"Code Refactoring: Toggle all Items","text":""},{"location":"Work/202210082251%20-%20TIL/#go-through-similar-process-like-above","title":"Go through similar process like above","text":"<pre><code>  const toggleAll = () =&gt; {\n    if (isFilteredAllSelected) {\n      setSelectedConnections((prevSelections) =&gt;\n        prevSelections.filter((selection) =&gt; selection.type !== connectionType)\n      );\n    } else {\n      setSelectedConnections((prevSelections) =&gt; {\n        const totalSelectedConnections = makeUniqueList(\n          [...prevSelections, ...filteredConnections],\n          'id'\n        );\n        return totalSelectedConnections;\n      });\n    }\n  };\n  ```\n  - We can take out common function `setSelectedConnections` and check the conditional inside\n</code></pre> <p>const toggleAll = () =&gt; {     setSelectedConnections(       isFilteredAllSelected         ? (prevSelections) =&gt;             prevSelections.filter(               (selection) =&gt; selection.type !== connectionType             )         : (prevSelections) =&gt; {             const totalSelectedConnections = makeUniqueList(               [...prevSelections, ...filteredConnections],               'id'             );             return totalSelectedConnections;           }     );   };</p> <pre><code>- Then we can extract `checkAll` and `uncheckAll` logic and give them more descriptive names\n</code></pre> <p>const checkAll = (prevSelections) =&gt; {     const totalSelectedConnections = makeUniqueList(       [...prevSelections, ...filteredConnections],       'id'     );     return totalSelectedConnections;   };</p> <p>const uncheckAll = (prevSelections) =&gt;     prevSelections.filter((selection) =&gt; selection.type !== connectionType);</p> <p>const toggleAll = () =&gt; {     setSelectedConnections(isFilteredAllSelected ? uncheckAll : checkAll);   };</p> <pre><code>\n- Then we can simplify these 2 utils even further like above\n</code></pre> <p>export const negate =  <p> boolean&gt;(predicate: P) =&gt;   (...param: Parameters<p>) =&gt;     !predicate(...param);  export const typePredicate =   (connectionType: ConnectionType) =&gt; (b: Pick) =&gt;     b.type === connectionType;    const checkAll =     (connections: FacebookConnection[]) =&gt;     (prevSelections: FacebookConnection[]) =&gt;       makeUniqueList([...prevSelections, ...connections], 'id');    const uncheckAll = (type) =&gt; (prevSelections: FacebookConnection[]) =&gt;     prevSelections.filter(negate(typePredicate(type)));    const toggleAll = () =&gt; {     setSelectedConnections(       isFilteredAllSelected         ? uncheckAll(connectionType)         : checkAll(filteredConnections)     );  <pre><code>\n#### Bug: An usecase not catered for\n- There was a bug where if user filters, uncheck all, then clears filter =&gt; the filtered out checked items also get unchecked even though they should not have been affected\n- ![Pasted image 20221010110148.png](&lt;images/Pasted image 20221010110148.png&gt;)\n- We only want to uncheck the Page items there were checked and filtered\n- The Page item that was checked and filtered were: \n</code></pre>  preSelection.type === 'page' &amp;&amp; filteredItems.some(item=&gt;item.id === preSelection.id)  <pre><code>- To check if include this preSelected item is included in filteredItems\n- We can create a `set` of filtered IDs and check if the `idSet.has(preSelected.id)`\n- `const idSet = new Set (filteredItems.map(({id}) =&gt; id)`  -&gt; filtered id arrays\n</code></pre>  const uncheckAll =   (type: FacebookConnection['type'], idScope: Set) =&gt;   (prevSelections: FacebookConnection[]) =&gt;     prevSelections.filter(       (selection) =&gt; !(selection.type === type &amp;&amp; idScope.has(selection.id))     );    const toggleAll = () =&gt; {     setSelectedConnections(       isFilteredAllSelected         ? uncheckAll(             connectionType,             new Set(filteredConnections.map(({ id }) =&gt; id))           )         : checkAll(filteredConnections)     );   }; ```"},{"location":"Work/202210101224%20-%20TIL/","title":"202210101224   TIL","text":""},{"location":"Work/202210101224%20-%20TIL/#typescript-tuple-for-checking-array","title":"TypeScript: Tuple for checking Array","text":"<pre><code>const connections:FacebookConnection[] = [{id, name, type..}, {}, {}...]\n\nconst getConnectionType = (connections: FacebookConnection[]) =&gt;\n  connections[0].type;\n\n</code></pre>"},{"location":"Work/202210101224%20-%20TIL/#get-the-connectiontype","title":"Get the connectionType","text":"<ul> <li>We only need to access the 1st connection and check for the type</li> <li>We can have better type inference by making sure there is always at least 1 item in the connection and that item is of type FacebookConnection</li> </ul>"},{"location":"Work/202210101224%20-%20TIL/#tuple-facebookconnection","title":"Tuple: [FacebookConnection]","text":"<ul> <li>The length of the array is defined</li> <li>The type of each element is known</li> </ul>"},{"location":"Work/202210101224%20-%20TIL/#use-tuple-with-array-as-our-type-for-better-inference","title":"Use Tuple with Array as our type for better inference!","text":"<ul> <li>We don't know the length of connections, but we know there is at least 1 item</li> <li><code>myType: [Tuple] &amp; Array[]</code></li> </ul> <pre><code>type ConnectionTypes = {\n  filteredConnections: [FacebookConnection] &amp; FacebookConnection[];\n}\n\nconst getConnectionType = (connections: [FacebookConnection]) =&gt;\n  connections[0].type;\n\n</code></pre>"},{"location":"Work/202210101224%20-%20TIL/#display-list-check-connectionslength-0","title":"Display list: check connections.length &gt; 0","text":"<ul> <li>Before: <code>{connections.length &gt; 0 &amp;&amp; () }</code></li> <li>After: Type Guard! <code>{isNonEmpty(connections) &amp;&amp; ()}</code></li> <li><code>Type Predicate</code> A is B returns a <code>boolean</code> </li> <li>Type Predicate works with functions that return boolean and  helps control flow analysis</li> <li>Type Predicate tells TS the type of the inputs for output to be <code>truthy</code></li> <li>In our case, for returning true, there must at least 1 item in the list so that the List needs to be of the form <code>[T] &amp; T[]</code></li> <li>Type Predicate is <code>list is [T] and T[]</code></li> </ul> <pre><code>The type of isNonEmpty = (list: T[]) =&gt; boolean\n\nThe type of isNonEmpty = &lt;T,&gt;(list: T[]) =&gt; boolean\n\nconst isNonEmpty = &lt;T,&gt;(list:T[]):boolean =&gt; list.length &gt; 0\n\nconst isNonEmpty = &lt;T,&gt;(list: T[]): list is [T] &amp; T[] =&gt; list.length &gt; 0 \n\n</code></pre>"},{"location":"Work/202210101327%20-%2015-5/","title":"202210101327   15 5","text":""},{"location":"Work/202210101327%20-%2015-5/#this-week-completed-activities-notable-wins-whats-working","title":"This week (completed activities, notable wins, what\u2019s working)","text":"<ul> <li>Major refactoring of the ConnectionSelection screen</li> <li>Sleek code thanks for Jemi's help</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#next-priorities","title":"Next priorities","text":"<ul> <li>Merge ConnectionSelection screen</li> <li>Navigation routes redirection</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#challengesroadblocks","title":"Challenges/Roadblocks","text":"<ul> <li>Refactoring is taking a lot longer than I expected</li> <li>Lots of test failures to troubleshoot along the way - which also take sometime</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#lessons-learnedopps-for-improvement","title":"Lessons Learned/Opps for improvement","text":"<ul> <li>Much better code </li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#coding-loop","title":"Coding Loop","text":"<ul> <li>Write simple stupid, duplicated code and fullfill functional requirements</li> <li>Write tests covering all comprehensive scenarios</li> <li>Refactor</li> <li>Check Types</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#refactor-tips","title":"Refactor Tips","text":""},{"location":"Work/202210101327%20-%2015-5/#start-from-root-single-source-of-truth","title":"Start from root: Single Source of Truth","text":"<ul> <li>Check data and ensure there is only 1 state and others derived from it</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#effective-updaters","title":"Effective Updaters","text":"<ul> <li>Update resolvers so that setters can receive prevState to do functional updates like <code>setStateActions</code></li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#colocate-logics-and-uis","title":"Colocate logics and UIs","text":"<ul> <li>Derive the specific states in the component with UI</li> <li>When making changes in future - logics and UI are together!</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#beautiful-functions","title":"Beautiful functions","text":"<ul> <li>Give inner logics descriptive function names</li> <li>If it seems hard to extract inner logics into functions, adjust conditionals</li> <li>Place conditionals where it is easy to extract out inner callback functions</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#map-how-to-make-an-array-of-objects-unique","title":"Map: How to make an array of objects unique?","text":"<ul> <li>every item in a <code>Map</code> is unique</li> <li>Format the objects suitable to be put into a Map</li> </ul> <pre><code>new Map ([[key, value], [key, value]])\n\n// object {id, type, name} -&gt; [key, value]\n// usually\nnewArray = myArray.map(obj =&gt; [id, obj] ) \n\nnew Map(newArray) \n\n</code></pre>"},{"location":"Work/202210101327%20-%2015-5/#set-how-to-check-if-an-array-contains-an-item","title":"Set: How to check if an array contains an item?","text":"<pre><code>.include(), .some(), .filter() all work\n\n.has() from a Set also works\n\nmySet = new Set (myArray.map( ({id}) =&gt; id))\nmySet.has(item.id)\n</code></pre>"},{"location":"Work/202210101327%20-%2015-5/#how-to-use-a-hook-conditionally","title":"How to use a hook conditionally?","text":"<ul> <li>Don't</li> <li>If must, wrap it inside a component</li> </ul>"},{"location":"Work/202210101327%20-%2015-5/#beautiful-typescript","title":"Beautiful Typescript","text":"<ul> <li><code>Paramters&lt;P&gt;</code> returns an array of params of function type <code>P</code></li> <li><code>new Map()</code> takes an argument of <code>Iterable&lt;readonly[string, T]&gt;</code></li> <li>type guard with a combined intersaction union type of tuple and array <code>[L] &amp; L[]</code> can be used to better verify common conditions like <code>items.length &gt; 0</code></li> </ul> <pre><code>isNonEmpty = (list: L[]): list is [L] &amp; L[] = list.length &gt; 0\n\n</code></pre> <ul> <li>Negative comparisons like <code>a!==b</code> can be extracted out of functions - make functions better composable</li> <li>It is a point free functional pattern</li> <li></li> </ul> <pre><code>.filter(a=&gt;a!==b)\n.filter(negate(compare(a))) // more descriptive!\n</code></pre>"},{"location":"Work/202210111349%20-%20TIL/","title":"202210111349   TIL","text":""},{"location":"Work/202210111349%20-%20TIL/#routes-investigation","title":"Routes Investigation","text":""},{"location":"Work/202210111349%20-%20TIL/#currently-pivottable-is-a-redux-page","title":"Currently <code>/pivottable</code>  is a redux page?","text":"<ul> <li>Check if supply the same checks in <code>LocationIsSupportedRenderLEss</code> -&gt; shows as a react-router route</li> </ul>"},{"location":"Work/202210111349%20-%20TIL/#current-company-switch-on-automation_feedsfeedidsetip","title":"Current company switch on /automation_feeds/:feedId/...setip","text":"<ul> <li>Now that this is disabled</li> <li>After enabling it, switching company leads to \"Not Found\"</li> <li>Why?</li> <li>What makes /pivottable works?</li> </ul>"},{"location":"Work/202210111349%20-%20TIL/#flow-observation","title":"Flow Observation","text":"<ul> <li>When a company is switched, <code>navigateToANewCompany</code> is triggered with the <code>companyId</code> and the <code>routeId</code></li> <li>In Automation_Feeds_SetUp, route, when changing route, it required <code>feedId</code> in the action payload too in <code>feedRouteActions.ts</code>, but we only supply <code>companyId</code> as we are changing the company. Instead of making the <code>routeId</code> to be the original <code>AUTOMATION_FEEDS_SETUP</code>, we want it to be the parent route <code>AUTOMATION_FEEDS</code></li> </ul>"},{"location":"Work/202210111349%20-%20TIL/#liquidautocomplete-investigation","title":"LiquidAutocomplete Investigation","text":"<ul> <li>This PR makes a change, which fixed their app issue but causes error:  <code>unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering</code> </li> <li>This happens when we try to update the DOM before the component mounted</li> <li>Validation example works when <code>useSize(textAreaRef)</code></li> <li>Validation example fails when <code>useSize(textAreaRef)</code>, but works <code>useSize(textAreaRef.current)</code></li> <li>monkey patch solution: assign <code>required</code> to <code>isRequired</code> state inside <code>useEffect</code> to make sure it is set after component mounted!</li> </ul>"},{"location":"Work/202210111349%20-%20TIL/#steps-to-monkey-patch-solution","title":"Steps to Monkey Patch Solution","text":"<ul> <li>Google errors and try to formulate reasons and solutions</li> <li>Document things tried and what doesn't work</li> <li>Wrtie a message to the team, about the progress and proposed solution etc</li> <li>^ This is like rubber duck technique \ud83d\udc23</li> <li>Then.... Inspiration comes and \u2728</li> </ul>"},{"location":"Work/202210111349%20-%20TIL/#use-blame-to-find-the-original-pr","title":"Use Blame to find the original PR!","text":""},{"location":"Work/202210131207%20-%20TIL/","title":"202210131207   TIL","text":""},{"location":"Work/202210131207%20-%20TIL/#better-typing-for-react-routes-and-redux-routes","title":"Better typing for React Routes and Redux Routes","text":"<ul> <li>Improved the type definition for <code>FORWARD_PATHS</code> object</li> <li>Intead of <code>originalPath = RouteName | string</code> =&gt; which is essentially just a string</li> <li>Do more concrete typing like</li> </ul> <pre><code>type ReduxPath = {\n  type: 'redux';\n  originalPath: RouteName;\n  forwardPath: RouteName;\n};\n\ntype ReactRouterPath = {\n  type: 'react-router';\n  originalPath: string;\n  forwardPath: string;\n};\n\ntype ForwardPathType = ReduxPath | ReactRouterPath;\n\nexport const FORWARD_PATHS: ForwardPathType[] = [\n</code></pre>"},{"location":"Work/202210131207%20-%20TIL/#type-narrowing","title":"Type Narrowing","text":"<ul> <li>companyRoute flows down from many many levels above, takes the type <code>string | undefined | null</code></li> <li>In our component, we know the companyRoute belongs to <code>Routes</code> enum. e.g. <code>Routes.AUTOMATION</code>, <code>Routes.CAMPAIGN</code> ... and the type is of <code>RouteNames</code></li> <li>To narrow down the companyRoute type in our component, I wrote a type guard</li> </ul> <pre><code>const isCompanyRouteRedux = (\n  companyRoute: string | undefined | null\n): companyRoute is RouteName =&gt; !!companyRoute &amp;&amp; companyRoute in Routes;\n\n// use this inside component\n  if (!isCompanyRouteRedux(companyRoute)) {\n    throw new TypeError(`Wrong redux path passed in: ${companyRoute}`);\n  }\n</code></pre>"},{"location":"Work/202210141412%20-%20TIL/","title":"202210141412   TIL","text":""},{"location":"Work/202210141412%20-%20TIL/#jest-mocking","title":"Jest Mocking","text":"<ul> <li>I had trouble making <code>jest.mock()</code> manual mock work....</li> <li>It was certainly mocking, but the mocked object was <code>undefined</code> ?</li> <li>so I forgot to add the return module name to the return!</li> </ul> <pre><code>// import * as FORWARD_PATHS from './forward.ts'\n\n// undefined mock\njest.mock('./forward.ts',()=&gt;({\n  type:'type1',\n  path: 'path1'\n}))\n\n// correct mock\njest.mock('./forward.ts', ()=&gt;({\n  FORWARD_PATHS: {\n    type: 'type1',\n    path: 'path1'\n  }\n}))\n\n</code></pre>"},{"location":"Work/202210141412%20-%20TIL/#functional-programming-pointfree-functions","title":"Functional Programming - Pointfree functions","text":""},{"location":"Work/202210141412%20-%20TIL/#reading","title":"Reading","text":""},{"location":"Work/202210141412%20-%20TIL/#parse-dont-validate","title":"Parse Dont Validate","text":"<ul> <li>The article is referenced by Hannu when he reasons against saving data in the localStorage and updates with versioning as it may cause the situation where things break in users computer only</li> <li>He proposed using zob for asserting the types while we save the sates in localStorage </li> </ul>"},{"location":"Work/202210141412%20-%20TIL/#main-take-aways","title":"Main take aways","text":"<ul> <li>Enforce the argument datatype. <code>f(x:T):V=&gt;y</code>  Enforce <code>T</code> instead of doing lots of validation for the input. It makes code more efficient and performent.</li> <li>We can use tools like zob to make validators look like parsers and assert specific cases like <code>int: 1&lt; x &lt; 5</code> </li> <li>Type Driven Design - push the respondibility of failure upwards to where the state types start narrowing down. Refer to 202210131207 - TIL#Type Narrowing and 202210101327 - 15-5#Beautiful Typescript</li> </ul>"},{"location":"Work/202210141412%20-%20TIL/#challenges","title":"Challenges","text":"<ul> <li>Writing tests actually take a long time! esp mocking!!!</li> </ul>"},{"location":"Work/202210171238%20-TIL/","title":"202210171238  TIL","text":""},{"location":"Work/202210171238%20-TIL/#smartly-routes","title":"Smartly Routes","text":"<ul> <li>All the redux routes are included under <code>app.bootstrap.ts</code></li> <li><code>ReactRoots</code> wraps the components of some <code>redux</code> and <code>react-router</code> pages</li> <li>For the <code>redux</code> pages defined in <code>js/routes/index</code>, the corresponding components are displayed under <code>react-router-dom</code> . For these redux pages, they would evaluate to be <code>true</code> under the <code>useIsRouterContext()</code> check<ul> <li>These <code>redux</code> pages and <code>react-router</code> pages are contained under the <code>HashRouter</code> from <code>react-router</code> and can use the helper functions like <code>useLocation</code> to get the current path location</li> <li>However, there is a limitation with <code>useParams</code> where these <code>redux</code> routes under <code>react-router</code> contex do not have  access to. These <code>redux routes inside react-router context</code> are placed inside the HashRouter, but they are not placed inside the <code>Route</code> components and therefore have no access to the dynamic params.</li> </ul> </li> <li>In <code>CompanySelectorButton</code>, <code>useParams</code> is used so we need to differentiate the redux routes from the react-router-routes completely. So we use <code>useIsReactRouterRoute</code></li> <li>In <code>RouterLocationIsSupportedRenderless</code>, we only use <code>useLocation</code> so we only need to differentiate the redux routes outside of context, so <code>useInRouterContext</code> is enough</li> <li></li> </ul>"},{"location":"Work/202210171238%20-TIL/#problems","title":"Problems:","text":"<ul> <li>I followed Minna's suggestions for user_settings page - as user_setting and company_setting pages can be found under <code>app.bootstrap.ts</code></li> <li>They are angular routes and routed under redux - I think.</li> <li><code>company.settings</code> and <code>userId</code> user settings pages have angular templates but not mapped to <code>js/routes/components</code> ReactComponents</li> <li>but only <code>Feeds For Automated Ads</code> page is included here. No Automation_Feeds pages.</li> <li><code>AUTOMATION_FEEDS_LIBRARY</code> and <code>AUTOMATION_FEEDS</code> are actually the same page - they are React Components built using redux routes.</li> <li>So they do not appear under <code>app.bootstrap</code> at all as they are not angular pages and routes anyway.</li> </ul>"},{"location":"Work/202210171238%20-TIL/#my-solution","title":"My Solution","text":"<ul> <li>I could verify the redirection <code>userId -&gt; setting</code> using <code>app.bootstrap.ts</code> and remove it from <code>FORWARD_PATHS</code> object</li> <li>However, we still need to keep <code>FORWARD_ROUTES</code> for automation_feeds pages ...?</li> </ul>"},{"location":"Work/202210171238%20-TIL/#smartly-routes-redirection","title":"Smartly Routes Redirection","text":"<ul> <li>For our redirection routes: editUserPanel <code>:userId</code> and automationFeed <code>feeds/:feedsId/setup</code></li> </ul>"},{"location":"Work/202210171238%20-TIL/#edituserpanel","title":"EditUserPanel","text":"<ul> <li>editUserPanel is an Angular route. It is defined under <code>app.bootstrap.ts</code>, it has a template/ controller defined</li> </ul>"},{"location":"Work/202210171238%20-TIL/#move-from-angular-route-to-redux-route","title":"Move from Angular route to redux route","text":"<ul> <li>It was already a React component connected with redux state and hooked to angular route as an interface</li> <li>To remove the angular dependency: remove it from root and component <code>app.bootstrap</code> and <code>ui.bootstrap</code></li> <li>Remove the <code>smartlyReactBridge</code> from the <code>EditUserPanel</code> component</li> <li>Add it to the routes Element Maps in <code>js/routes/components</code></li> <li>The redux routes and components are not placed under react-router <code>&lt;Route&gt;</code> but they are all present under <code>HashRouter</code> inside <code>ReactRoot.tsx</code></li> </ul>"},{"location":"Work/202210171238%20-TIL/#move-from-redux-route-to-react-route","title":"Move from redux route to react route","text":""},{"location":"Work/202210171238%20-TIL/#-","title":"-","text":""},{"location":"Work/202210171238%20-TIL/#automationfeeds","title":"AutomationFeeds","text":"<ul> <li>It is a redux route. </li> <li>Almost all redux routes are under <code>react-router context</code> if they are defined  </li> <li>Create the redirection in the redux thunk: check the location: companyId, feedId. If <code>!feedId</code> then redirect to the parent route</li> </ul>"},{"location":"Work/202210241320%20-%2015-5/","title":"202210241320   15 5","text":""},{"location":"Work/202210241320%20-%2015-5/#this-week-completed-activities-notable-wins-whats-working","title":"This week (completed activities, notable wins, what\u2019s working)","text":"<ul> <li>Completed the Navigation redirections with Minna's help. DUPLO-1803 and DUPLO-1801</li> <li>Really got a chance to deep dive into the Smartly navigation setup using Angular, Redux and React Router routes. </li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#next-priorities","title":"Next priorities","text":"<ul> <li>Meta Onboarding flow</li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#challengesroadblocks","title":"Challenges/Roadblocks","text":"<ul> <li>I really struggled and it took me a long time to complete. I think it was also due to my lack of hands on knowledge in navigation, redux store and the APIs</li> <li>Really appreciate Minna's help and explanation to help unblock me</li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#lessons-learnedopps-for-improvement","title":"Lessons Learned/Opps for improvement","text":"<ul> <li>Many paths can be made into a redux route or a react route depending on how the navigation is done.</li> <li>only the routes saved inside <code>reactRouterRoutes</code> are navigated through react routes</li> <li>but, many redux routes are also under react router context and have access to <code>location = useLocation()</code></li> <li>The redux are also under react router because in <code>js/routes/components</code>, the Redux Routes are mapped with their corresponding React Components and in <code>ReactRoot</code>, either a Redux route component or a React route component is rendered</li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#how-to-navigate-between-redux-page-and-react-pages","title":"How to navigate between Redux page and React pages?","text":"<ul> <li>To Navigate to a Redux page, dispatch the actions</li> <li>To navigate to React Router page, use <code>navigate = useNavigate()</code></li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#create-a-redux-navigation","title":"Create a Redux Navigation","text":"<ul> <li>Define the Route inside <code>js/routes/index.js</code></li> <li>Add the component map into <code>js/routes/components</code></li> <li>Navigate by dispatching actions</li> <li>( Check the util methods available from <code>redux-first-router</code> )</li> <li><code>state.location</code> stores information on path, action payload, action type</li> <li><code>useSelector(getLocation())</code></li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#create-reat-router-navigation","title":"Create Reat Router Navigation","text":"<ul> <li>Define a react Route <code>&lt;Route element={&lt;Component/&gt;} /&gt;</code> and make sure it is placed under a Route inside <code>reactRouterRoutes</code> </li> <li>navigate using <code>navigate = useNavigate()</code></li> </ul>"},{"location":"Work/202210241320%20-%2015-5/#type-driven-development","title":"Type Driven Development","text":"<p>In a scenario, I would like to get the last segment of the url path</p> <pre><code>const viewedUserId: String = location.split('/').pop()  \n</code></pre> <p> - Because we know that  we can always get the userId from the path segment, but <code>split()</code> may return empty array <code>[]</code> in its definition - <code>pop()</code> is a mutable method and TS doesn't support mutation. Any mutable object type must describe its properties as unions of all possible states the object could be in over its lifecycle</p>"},{"location":"Work/202210241320%20-%2015-5/#define-a-nonemptytype-for-the-last-element-in-array","title":"Define a NonEmptyType for the last element in array","text":"<pre><code>type NonEmpty = T[] &amp; [T]\n</code></pre>"},{"location":"Work/202210241320%20-%2015-5/#define-a-type-guard-with-predicate-for-guarding-the-type-as-nonemptytype","title":"Define a Type guard  with predicate for guarding the type as NonEmptyType","text":"<pre><code>const isLastNonEmpty = &lt;T,&gt;(array:T[]):array is NonEmpty =&gt;{\n  // return array[array.length-1] !== undefined;\n  return array.length &gt; 0\n}\n</code></pre>"},{"location":"Work/202210241320%20-%2015-5/#use-the-type-guard-and-nonempty-type-to-assert-that-userid-is-present","title":"Use the Type guard and NonEmpty type to assert that UserId is present","text":"<pre><code>const isLast = (arrays: NonEmpty&lt;T&gt;) =&gt; {\n  return arrays[array.length-1]\n}\n\nconst array = location.split('/')\nlet userId;\nif (isLastNonEmpty(array)){\n  userId = isLast(array)\n}\n</code></pre>"},{"location":"Work/202210241320%20-%2015-5/#prevent-memory-leak","title":"Prevent Memory Leak","text":"<ul> <li>This happens when a side effect finishes after a component is unmounted- e.g. a request is sent when component is mounted but returned after the component is unmounted</li> <li>So we need cleanup functions</li> <li>Or we use a variable e.g. <code>isMounted</code> to control data assignment after side effect comes back</li> <li>IsMount is set to true when component loaded. isMount is set to false when component unmounted. Only enable state assignment when isMount is true.</li> </ul> <pre><code>useEffect(()=&gt;{\n  let isMounted = true;\n  fetchAPI.then(()=&gt;{\n    if (isMounted){\n      setLoading(false) // if data returned after unmounted, no state assignment \n    }\n  })\n  return function cleanup(){\n    isMounted = false\n  }\n},[])\n</code></pre>"},{"location":"Work/202210261302%20-%20TIL/","title":"202210261302   TIL","text":""},{"location":"Work/202210261302%20-%20TIL/#save-meta-accounts","title":"Save Meta Accounts","text":"<ul> <li>Need to call a <code>POST</code> request for saving the Meta Accounts.</li> <li><code>correos</code> API created some fancy interfaces for which I can see the examples for <code>GET</code> but not <code>POST</code></li> <li><code>correos</code> API bascially: <ul> <li><code>fetchEndPoint</code> enriches and executes the <code>endpoint</code> API passed into it</li> <li><code>correos.client.account(accountId).get</code> or <code>correos.client.account.post</code> ...etc all of these are defined in <code>oat-client.generated.ts</code></li> </ul> </li> </ul>"},{"location":"Work/202210271309%20-%20TIL/","title":"202210271309   TIL","text":""},{"location":"Work/202210271309%20-%20TIL/#react-types-jsxelement-reactnode-reactelement","title":"React Types: JSX.Element, ReactNode, ReactElement","text":"<ul> <li>JSX.Element extends from <code>ReactElement</code></li> <li><code>JSX.Element</code> is a <code>ReactElement</code> </li> <li>functional component returns <code>ReactElement | null</code></li> <li>class component render() returns <code>ReactNode</code></li> </ul>"},{"location":"Work/202210271309%20-%20TIL/#reactcomponenttype","title":"React.ComponentType","text":"<pre><code>React.ComponentType&lt;P&gt; = React.FunctionComponent&lt;P&gt; | React.ClassComponent&lt;P&gt;\n</code></pre>"},{"location":"Work/202210271309%20-%20TIL/#plan-summary-multiaccount","title":"Plan: Summary - multiaccount","text":"<ul> <li>The Promise.all(saveAccounts) is done in a separate task \u23ed </li> <li>Smartly UI - custom Header Accordion \u2705</li> <li>UI - kinda \u2705</li> <li>Use Mock data (billingEntities) for happy path \u2705</li> <li>Fixed the validation so that user can proceed when 0 app page connected<ul> <li>=&gt; looks like a conscious change</li> <li>=&gt; update copy? No. The Navigation button \"skip\" will be added later  ### Edge Cases</li> </ul> </li> <li>0 pages 0 apps. 0 Page to be checked later  \u2705  ### Fix Tests</li> <li>Fixed broken tests   ### Fix Types (merge with billingEntities)</li> <li>Before merging, get the types right, so that after merge, nothing more needs to change (next!!)\u261d\ufe0f</li> </ul>"},{"location":"Work/202210311614%20-%20TIL/","title":"202210311614   TIL","text":""},{"location":"Work/202210311614%20-%20TIL/#misc","title":"Misc","text":"<pre><code>const thisRequestIdentity = (requestIdentity.current = {});\n\n// Equals\n\nconst thisRequestIdentity = {};\nrequestIdentity.current = thisRequestIdentity;\n</code></pre>"},{"location":"Work/202210311614%20-%20TIL/#feature-planning","title":"Feature Planning","text":""},{"location":"Work/202210311614%20-%20TIL/#hero-feature-recommender","title":"Hero Feature Recommender","text":"<ul> <li>A planning document with Motivation, Scope for different stages is shared before the meeting and everyone was able to read and left comment before the meeting</li> </ul>"},{"location":"Work/202210311614%20-%20TIL/#key-take-away","title":"Key Take Away","text":"<ul> <li>Devs role is to assess the effort required in the scope and discuss the feasibility to achieve the mission</li> <li>Essentially, Web Application Development has 2 main area: Create the UI and serve the data from it.</li> <li>There are 2 types of state: ==local state ==</li> <li>other global state: they are usually saved and fetched from:<ul> <li>Backend Service </li> <li>URL</li> <li>LocalStorage (not recommended, if data model changes, it will only crash on the users side and not reproducible on our end)</li> </ul> </li> </ul>"},{"location":"Work/202210311614%20-%20TIL/#hero-feature-recommender-scope-1","title":"Hero Feature Recommender Scope 1","text":"<ul> <li>Jemi recognised that the status (try it out / discovered) require more effort to implement<ul> <li>Proposed to have a MVP without this first</li> <li>What is required to save and show this state for individual User?<ul> <li>We need to save this data somewhere, =&gt; create our own service and DB!</li> <li>To explain to product: EPIC LEVEL</li> <li>^ No nitty gritty implementation details. this gives an idea for effort estimation</li> </ul> </li> </ul> </li> <li>Minna recognised the aggregate values: e.g. 325 catalogs connected  - required extra effor<ul> <li> </li> </ul> </li> <li>Pavlo quickly recognised the value of this extra service. Not just for storing the status, but can also fetch and store these other data </li> </ul>"},{"location":"Work/202210311614%20-%20TIL/#inform-designers-of-the-outcome","title":"Inform Designers of the  outcome","text":"<ul> <li>May take a throbber loading time to load</li> <li>Do-able, but another layer of complexity</li> </ul>"},{"location":"Work/202210311614%20-%20TIL/#hero-feature-feature-gate","title":"Hero Feature Feature Gate","text":"<ul> <li>Permissions and Feature Gate</li> <li>Different User roles have different permissions and we need to map the Hero Features with different role.<ul> <li>Currently, I would assume these Hero Features have got the permission checks built in (?) </li> <li>So we just need to add the check in the entry point?</li> </ul> </li> <li>Feature Gate<ul> <li>Platforms are feature gated: What does that mean? Only a particular tiers of clients have access to say Google? (say Tier 1)</li> <li>So we need to </li> <li>Certain features. e.g. Automated Feeds are only available to some Platforms - Meta. If user only onboards with Pinterest, then we don't show this hero feature</li> </ul> </li> </ul>"},{"location":"Work/202210311614%20-%20TIL/#ui-complexity-1","title":"UI: Complexity 1","text":""},{"location":"Work/202210311614%20-%20TIL/#data-fetching-state-complexity-2","title":"Data Fetching + State: Complexity 2","text":""},{"location":"Work/202210311614%20-%20TIL/#other-system-considerations","title":"Other System Considerations","text":"<ul> <li>Platforms</li> <li>User Roles (Permissions)</li> <li>Data Service</li> </ul>"},{"location":"Work/202211011406%20-%20TIL/","title":"202211011406   TIL","text":""},{"location":"Work/202211011406%20-%20TIL/#bundle-size-bloated","title":"Bundle Size Bloated","text":"<ul> <li>My PR somehow has this BundleSize Bloated issue</li> <li></li> <li>Rebase with latest master and run the build again - same issue</li> <li>Googled and checked codebase, use <code>webpack-bundle-analyzer</code> to check the master and my branch bundle size<ul> <li>Install <code>webpack-bundle-analyzer</code> cli and generate the stats file </li> <li><code>pnpm webpack --profile --json &gt; stats.json</code>  pnpm is like npx so i don't need to install <code>webpack</code> separately</li> </ul> </li> </ul>"},{"location":"Work/202211011406%20-%20TIL/#my-plan-of-attack","title":"My Plan of attack","text":"<ul> <li>I could not get <code>webpack-bundle-analyzer</code> working properly</li> <li>Looking at the code and Den's suggestion, the most suspicious culprit is my pump up of the Accordion package... even though that updated change was so minimal too...</li> <li>I was thinking of isolating the problematic commit by either <code>git-bisect</code> or just try the most suspicious import first</li> <li>^BUT, Minna had an even better idea...... =&gt; Merge the import of Accordion package as a separate branch!! </li> <li>It is possible that something went wrong uring the build process and bloated the bundle. Split the commit would be the ideal way to enable the merge!</li> </ul>"},{"location":"Work/202211021306%20-%20TIL/","title":"202211021306   TIL","text":""},{"location":"Work/202211021306%20-%20TIL/#usecallback","title":"useCallback","text":"<ul> <li>Event handler passed into Child, Child would always re-render everytime Parent re-renders even if Child has no other props or states change</li> <li>=&gt; because, Child always receives a new version of event Handler prop from Parent whenever Parent re-renders</li> <li>To make Child only re-renders when there is a real value change in the props, we can wrap eventHandler in useCallback for referential equality</li> </ul>"},{"location":"Work/202211021306%20-%20TIL/#wehn-to-use-usecallback","title":"Wehn to use useCallback","text":"<ul> <li>When this function is to be exported from context and used in multiple places</li> <li>When the function is a dependency to other hooks (e.g. useEffect)</li> <li>When the function has some internal state e.g. throttle or debounced</li> </ul>"},{"location":"Work/202211091614%20-%20TIL/","title":"202211091614   TIL","text":""},{"location":"Work/202211091614%20-%20TIL/#make-async-request","title":"Make Async Request","text":""},{"location":"Work/202211091614%20-%20TIL/#understand-the-api-payloads","title":"Understand the API, payloads","text":"<ul> <li>correos API has a post method, see 202210261302 - TIL#Save Meta Accounts</li> <li>Make code cleaner to create a wrapper function <code>createAccount</code> under <code>js/api/account</code></li> </ul>"},{"location":"Work/202211091614%20-%20TIL/#4-things-in-async-requests","title":"4 Things in Async Requests","text":""},{"location":"Work/202211091614%20-%20TIL/#error-state","title":"Error State","text":""},{"location":"Work/202211091614%20-%20TIL/#loading-state","title":"Loading State","text":""},{"location":"Work/202211091614%20-%20TIL/#cleanup-function","title":"Cleanup function","text":"<ul> <li>Benefit of always calling async function inside useEffect!</li> </ul>"},{"location":"Work/202211091614%20-%20TIL/#fetch-the-connected-accounts-to-display","title":"Fetch the connected accounts to display!","text":""},{"location":"Work/202211091614%20-%20TIL/#define-the-function","title":"Define the function","text":""},{"location":"Work/202211091614%20-%20TIL/#useeffect-for-sideeffect","title":"useEffect for sideEffect","text":"<ul> <li>Define the <code>createAccounts</code> function inside the <code>useEffect hook</code></li> <li>Use <code>isLoading</code> state to control whether to call the <code>createAccounts()</code> inside useEffect</li> </ul>"},{"location":"Work/202211091614%20-%20TIL/#output","title":"Output","text":"<ul> <li>Always export the <code>error</code> <code>loading</code> states as well as the <code>request</code> function</li> </ul> <pre><code>{\n    createAccounts: () =&gt; setAccountsState({ isSubmitting: true }),\n    isCreateAccountsLoading: accountsState.isSubmitting,\n    error: accountsState.error\n  };  \n</code></pre>"},{"location":"Work/202211091614%20-%20TIL/#get-context-state-to-post","title":"Get context state to POST","text":"<ul> <li>The function needs to be defined under the MetaAdAccountWizard</li> <li><code>useWizard</code> needs to have this <code>createAccount</code> method so that it can be called inside <code>handleFinish()</code></li> <li>IT can be passed into <code>useWizard</code> as inputs!!</li> </ul>"},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/","title":"202211111054   TIL n Tech Planning","text":""},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#tech-planning","title":"Tech Planning","text":"<ul> <li>Impact vs Effort</li> <li>Usage </li> <li>Technical facing vs product facing</li> <li>Minna's awesome documentation</li> <li>My steps: <ul> <li>Read the Goals and Scope</li> <li>Write notes and Qs as I think....</li> <li>To implement, what do I need to know?</li> <li>What are the entities / states of interest? (Users/Permissions, Features, Platforms, EntryPoint Links, FeatureGates)</li> <li>What are the pages include:<ul> <li>Angular pages? React pages?</li> <li>Page, Modal? Popover? Drawer?</li> </ul> </li> </ul> </li> </ul>"},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#bug-investigation","title":"Bug Investigation","text":"<ul> <li>This error <code>setFocus</code> is not a function.... in <code>List</code>.</li> <li>Looked into the code, it should not happen as we always pass it in internally. Unless they use the ListStateful where they pass in the props, inc <code>setFocus</code> themselves</li> </ul>"},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#always-check-they-are-using-the-latest-version-of-smartly-ui","title":"Always Check they are using the latest version of Smartly-UI","text":"<ul> <li><code>package.json</code> uses <code>^x.xx.x</code> , the actual version used may be upgraded. To check the actual dependency version used, check lock file.</li> </ul>"},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#always-try-reproducing-the-bug-in-storybook","title":"Always try reproducing the bug in Storybook","text":""},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#write-a-test-to-prevent-the-same-bug-from-appearing","title":"Write a test to prevent the same bug from appearing","text":""},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#jest-debugging","title":"Jest Debugging","text":""},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#error","title":"Error","text":"<p>When trying to run <code>pnpm jest ...spec.tsx</code></p> <pre><code>\u2009ERR_PNPM_RECURSIVE_EXEC_FIRST_FAIL\u2009 Command failed with ENOENT: jest packages/frontend/components/Onboarding/ChannelConnection/FinalizeLink.test.tsx\nspawn jest ENOENT\n</code></pre> <p>When trying to run the jest extension on VSCode, I got </p> <pre><code>Error: Cannot find module '/Users/sherryhsu/Smartly/frontend4/node_modules/.bin/jest'\n    at Module._resolveFilename (node:internal/modules/cjs/loader:995:15)\n    at Module._load (node:internal/modules/cjs/loader:841:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:23:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n</code></pre> <ul> <li>Somehow all of a sudden the jest library cannot be found inside the node_modules</li> <li>I have already cleaned node_modules and <code>pnpm i</code> many times</li> <li>Dont know why - WORKAROUND: install jest globally</li> </ul>"},{"location":"Work/202211111054%20-%20TIL%20n%20Tech%20Planning/#change-vscode-workspace-directory-to-inside","title":"Change VSCode workspace directory to inside","text":""},{"location":"Work/202211111054%20-%20TIL/","title":"202211111054   TIL","text":""},{"location":"Work/202211111054%20-%20TIL/#tech-planning","title":"Tech Planning","text":"<ul> <li>Minna's awesome documentation</li> <li>My steps: <ul> <li>Read the Goals and Scope</li> <li>Write notes and Qs as I think....</li> <li>To implement, what do I need to know?</li> <li>What are the entities / states of interest? (Users/Permissions, Features, Platforms, EntryPoint Links, FeatureGates)</li> </ul> </li> </ul>"},{"location":"Work/202211111054%20-%20TIL/#bug-investigation","title":"Bug Investigation","text":"<ul> <li>This error <code>setFocus</code> is not a function.... in <code>List</code>.</li> <li>Looked into the code, it should not happen as we always pass it in internally. Unless they use the ListStateful where they pass in the props, inc <code>setFocus</code> themselves</li> </ul>"},{"location":"Work/202211111054%20-%20TIL/#always-check-they-are-using-the-latest-version-of-smartly-ui","title":"Always Check they are using the latest version of Smartly-UI","text":"<ul> <li><code>package.json</code> uses <code>^x.xx.x</code> , the actual version used may be upgraded. To check the actual dependency version used, check lock file.</li> </ul>"},{"location":"Work/202211111054%20-%20TIL/#always-try-reproducing-the-bug-in-storybook","title":"Always try reproducing the bug in Storybook","text":""},{"location":"Work/202211111054%20-%20TIL/#write-a-test-to-prevent-the-same-bug-from-appearing","title":"Write a test to prevent the same bug from appearing","text":""},{"location":"Work/202211111054%20-%20TIL/#jest-debugging","title":"Jest Debugging","text":""},{"location":"Work/202211111054%20-%20TIL/#error","title":"Error","text":"<p>When trying to run <code>pnpm jest ...spec.tsx</code></p> <pre><code>\u2009ERR_PNPM_RECURSIVE_EXEC_FIRST_FAIL\u2009 Command failed with ENOENT: jest packages/frontend/components/Onboarding/ChannelConnection/FinalizeLink.test.tsx\nspawn jest ENOENT\n</code></pre> <p>When trying to run the jest extension on VSCode, I got </p> <pre><code>Error: Cannot find module '/Users/sherryhsu/Smartly/frontend4/node_modules/.bin/jest'\n    at Module._resolveFilename (node:internal/modules/cjs/loader:995:15)\n    at Module._load (node:internal/modules/cjs/loader:841:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:23:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n</code></pre> <ul> <li>Somehow all of a sudden the jest library cannot be found inside the node_modules</li> <li>I have already cleaned node_modules and <code>pnpm i</code> many times</li> <li>Dont know why - WORKAROUND: install jest globally</li> </ul>"},{"location":"Work/202211111054%20-%20TIL/#change-vscode-workspace-directory-to-inside","title":"Change VSCode workspace directory to inside","text":""},{"location":"Work/202211161309%20-%20TIL/","title":"202211161309   TIL","text":""},{"location":"Work/202211161309%20-%20TIL/#hero-feature-recommendor-planning","title":"Hero Feature Recommendor Planning","text":""},{"location":"Work/202211161309%20-%20TIL/#duplos-focus-is-on-onboarding","title":"DUPLO's focus is on Onboarding","text":"<ul> <li>Onboarding is essentially to enable the user to easily access to various features in Smartly</li> <li>and Guide them to setup and accomplish their goal, enable them to see the improvements in their ads and sales </li> <li> <p>To easily access to various features:</p> <ul> <li>URL links to various feature pages</li> <li>Examples:<ul> <li>Set up automated ads on Meta</li> <li>Set up Reporting on Snap</li> </ul> </li> <li>States to consider:<ul> <li>ActiveCompany, platforms, adAccounts connected, user permissions, </li> </ul> </li> </ul> </li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#how-would-an-user-see-a-feature","title":"How would an user see a feature?","text":"<ol> <li>the feature is available in a platform<ol> <li>Automated Ads is only available in Meta</li> </ol> </li> <li>the adAccount is connected to the platform <ol> <li>PlatformAndAccountSelector shows up in the NavigationHub</li> </ol> </li> <li>if feature is featuregated, user can see if he/she is in the featuregated TA</li> <li>user role has the permission<ol> <li>Redux store &gt; userPermissions: Gives an array of the roles the user has in a company</li> <li>An user can have multiple roles</li> </ol> </li> </ol>"},{"location":"Work/202211161309%20-%20TIL/#to-easily-access-a-feature-usenavigate","title":"To easily access a feature - useNavigate","text":"<ul> <li>This hook takes in the <code>actionConfig</code>, <code>companyId</code>, <code>platform</code> . The actionConfig maps the platform with the available feature (route). </li> <li>The output is the route data and <code>hasRouteData</code>, tells whether this route (feature) is available in hte given company and platform</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#to-easily-access-a-feature-toolkit","title":"To easily access a feature - Toolkit","text":"<ul> <li>Create a Smartly UI like kit for teams to use and contribute to the Hero Feature Onboarding</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#future-best-practice","title":"Future Best Practice","text":"<ul> <li>There is legacy in the code which we need to keep in mind when planning for future</li> <li>In Stage 1 release, reusing the existing code is the most cost effective approach</li> <li>We should still keep in mind of the future upgrade option/ plan</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#user-permission","title":"User Permission","text":"<ul> <li>UserPermission information is available in the redux store</li> <li>We want to remove the dependencies towards redux. If we need to keep in mind of the future development plan<ul> <li>Deep Dive in Slack, Confluence pages and Google docs</li> </ul> </li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#error-handling-planning","title":"Error Handling Planning","text":"<ul> <li>Error state does require proper planning to show meaningful messages to the users and provide sensible next step!</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#onboarding-wizard-error-handling","title":"Onboarding Wizard Error Handling","text":"<ul> <li>There are many cases that we should consider<ul> <li>Errors for each of the platforms: Meta, Pinterest, Snap..</li> <li>Errors given at different points in Server Side: <ul> <li>Platform rejects<ul> <li>FB rejects</li> <li>v1 rejects</li> </ul> </li> <li>Database rejects</li> </ul> </li> </ul> </li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#what-error-messages-should-we-provide-to-users","title":"What Error Messages should we provide to users?","text":"<ul> <li>The goal here is to connect adAccounts to platforms</li> <li>Potential Results: <ul> <li>Success</li> <li>Failed to connect all adAccounts</li> <li>Failed to connect some adAccounts</li> </ul> </li> <li>User don't really care if the errors come from FB or v1 or DB</li> <li>What we want to do<ul> <li>If error, tell user which accounts failed to connect</li> <li>The error messages from backend associated to these failed accounts</li> </ul> </li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#how-to-show-the-error-messages","title":"How to show the Error Messages","text":"<ul> <li>Dialogue Modal or Banner</li> <li>Redirection to an Error page</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#what-next-steps-do-we-suggest-to-the-users","title":"What next steps do we suggest to the users?","text":"<ul> <li>Explicit instruction on what user needs to do to complete her goal</li> <li>Right redirection: back to the First Step to start again?</li> <li>retry: retry callback()</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#logging","title":"Logging","text":"<ul> <li>Send analytics</li> <li>Error logging</li> </ul>"},{"location":"Work/202211161309%20-%20TIL/#errorboundary-util","title":"ErrorBoundary Util","text":"<ul> <li>SmartlyUI has a ErrorBoundary component!</li> </ul>"},{"location":"Work/202211171649%20-%20TIL/","title":"202211171649   TIL","text":""},{"location":"Work/202211171649%20-%20TIL/#which-service-is-in-charge-of-which-action","title":"Which Service is in charge of which Action?","text":""},{"location":"Work/202211171649%20-%20TIL/#authorization","title":"Authorization","text":"<ul> <li>In Generic Channel Config Wizard, the authorisation API is set in the <code>channelConfig.tsx</code> <ul> <li>Pinterest: usePinterestAccounts</li> <li>Snap, Tiktok: useAdAccounts &gt; useCompanyAccountsFor =&gt; return the accounts already connected to platforms<ul> <li><code>platform.authenticationUrl</code> =&gt; It is a property of PivotPlatform</li> </ul> </li> </ul> </li> </ul>"},{"location":"Work/202211171649%20-%20TIL/#catalogs","title":"Catalogs","text":""},{"location":"Work/202211171649%20-%20TIL/#catalogs-that-were-in-snap-tiktok-but-not-connected-to-smartly","title":"Catalogs that were in Snap/ Tiktok but not connected to Smartly","text":"<ul> <li>Get the information about these Catalogs using <code>Pena</code> (Tiktok, Snap)</li> <li>Pinterest don't have Catalogs</li> </ul>"},{"location":"Work/202211171649%20-%20TIL/#catalogs-that-were-already-connected-to-snap-tiktok","title":"Catalogs that were already connected to Snap/ Tiktok","text":"<ul> <li>Use <code>Snapper / Tikker</code> to connect and disconnect the catalogs</li> </ul>"},{"location":"Work/202211171649%20-%20TIL/#organisationavailablecatalogs-vs-availablecatalogs","title":"OrganisationAvailableCatalogs vs AvailableCatalogs","text":"<ul> <li>in order to use hooks conditionally: <ul> <li>if no organisation set up for company, render no catalog</li> <li>else render catalogs connected to the organisation..</li> <li>These are to do with the <code>Feeds API</code>, which uses  <code>Pena</code> services backend</li> <li><code>js/api/feeds</code> =&gt; We created this util for loading the Feeds API</li> <li>It was never loaded or used in the frontend before!! A lot of leg work that we needed to do!</li> </ul> </li> </ul>"},{"location":"Work/202211181114%20-%20TIL/","title":"202211181114   TIL","text":""},{"location":"Work/202211181114%20-%20TIL/#error-handling-pr-review","title":"Error Handling PR Review","text":"<ul> <li>Promise.all vs Promise.allSettled <ul> <li>Promise.all rejects when 1 promise fails</li> <li>Promise.allSellted reject after all promises complete. We can then get all error messages for each of the failed promises.</li> </ul> </li> </ul>"},{"location":"Work/202211181114%20-%20TIL/#how-do-i-test-dens-pr","title":"How do I test Den's PR?","text":"<ul> <li>Tricky part: It is hard to create a new Meta Business account and ad account on the existing Meta User... </li> <li>Ideal Way:<ul> <li>I create a new Meta Business Business account and ad account</li> <li>I use Redirect to intercept and mock the request</li> </ul> </li> </ul>"},{"location":"Work/202211181114%20-%20TIL/#current-best-way","title":"Current Best Way","text":"<ul> <li>Even if I did create a new Meta account to complete the flow, it will most likely succeed anyway. In order to  test the errors, I will still need to mock anyway</li> <li>The best way to test for the Errors is probably by mocking in the Jest test.</li> <li>According to the API doc, the error messages are of the shape of {message, data} and mock the errors in this format </li> </ul>"},{"location":"Work/202211181114%20-%20TIL/#code-smell-many-dependencies-to-show-error-success-states","title":"Code Smell: Many dependencies to show error/ success states","text":"<ul> <li>In ChannelCard, we want to show the states: all connected, some connected and none connected.</li> <li>We use 2 sources of information to determine the states: <ul> <li>no. accounts returned: 0 or more </li> <li>no. errors: 0 or more</li> </ul> </li> <li>From these 2 sources of info, they result in 4 combinations of states.</li> <li>We should extract these into a hook and use Types to assert these 4 states</li> </ul>"},{"location":"Work/202211181114%20-%20TIL/#how-to-make-it-flexible-to-extending-to-other-platforms","title":"How to make it flexible to extending to other platforms?","text":"<ul> <li>It is not needed at this state as the account connection errors are shown within the steps in other platforms. </li> <li>It may be needed by other platforms in future. So might as well have the extensibility in mind when we build it first go - esp no refactoring cost and easy to change now </li> </ul>"},{"location":"Work/202211181114%20-%20TIL/#making-invalid-states-unrepresentable","title":"Making invalid states unrepresentable","text":"<ul> <li>Check the relevant talks and books like \"Domain Modelling made Functional\"</li> <li>For Now, using TypeScript defining the Types in literal strings to explicitly set possible states</li> </ul>"},{"location":"Work/202211181746%20-%2015-5/","title":"202211181746   15 5","text":""},{"location":"Work/202211181746%20-%2015-5/#this-week-completed-activities-notable-wins-whats-working","title":"This week (completed activities, notable wins, what\u2019s working)","text":"<ul> <li>In order to do PR reviews for Minna's Hero Feature Recommender and Den's Error Handling, I went back and took a deep dive into the Tech planning docs and all the relevent slack conversations and Jira tickets</li> <li>Completed a few small improvements to Onboarding Wizards</li> <li>Finished reviewing the Error Handling PR - proud of the suggestions to make connection status obvious! <ul> <li>Not only did I comment on the coding styles, I also made suggestions to improve the exendibilty - which also simplified the code</li> <li>Also I gave concrete examples to improve the ConnectionStatus and the final refactor looks much clearer! Super happy that I was able to make valuable structure improvement suggestions</li> </ul> </li> </ul>"},{"location":"Work/202211181746%20-%2015-5/#next-priorities","title":"Next priorities","text":"<ul> <li>Tech Planning for the Company Switcher on the Onboarding Navigationbar</li> </ul>"},{"location":"Work/202211181746%20-%2015-5/#challengesroadblocks","title":"Challenges/Roadblocks","text":"<ul> <li>I feel it is taking me a long time to read and process the technical docs and ask Qs. It seems Minna and Den can do that pretty fast</li> <li>I was rushing in completing the small improvement task and pushed out PR before thinking thoroughly. The Challenge is in keeping calm and focused despite I feel I am taking a long time to learn the domain knowledge and have no visible output.</li> </ul>"},{"location":"Work/202211181746%20-%2015-5/#lessons-learnedopps-for-improvement","title":"Lessons Learned/Opps for improvement","text":""},{"location":"Work/202211181746%20-%2015-5/#technical","title":"Technical","text":"<ul> <li>Error Handling!<ul> <li>Making invalid states impossible. Types is a good tool!</li> </ul> </li> <li>Don't rush in coding. Take the time to self review and ask self whether this makes sense. =&gt; else I will need to change again after review anyway</li> <li>Make Async Requests:<ul> <li>useEffect! clean-up function</li> <li>use loading state to control and trigger the function</li> </ul> </li> <li>Urgent Response: HFR became visible to CSM before the release<ul> <li>Minna did a brilliant quick fix to scope it to a test company -&gt; there are many ways of managing releases other than a feature gate, a simple if/else with User Role, Company etc all work</li> <li>The issue is not a real one to customers but just CSM still sees it in impersonation as CSMs are admin...</li> </ul> </li> </ul>"},{"location":"Work/202211181746%20-%2015-5/#non-technical","title":"Non Technical","text":"<ul> <li>Keep calm and focused. When I feel I am not making visible progress on the board, I would feel I am learning / reading too slowly. That stress actually makes it harder for me to have deep focus sometimes</li> <li>It was great having a call with Den to sort out the details about the Error Handling Planning. It made me realise that Minna and Den are able to work on it this effectively because they already spent past few months doing the technical research into the domain and having many conversations with different teams. These are the experiences I was lacking so it will definitely take me more time to bridge the gap. </li> <li>Changing work environment also helps me focus better when working on unfamiliar tasks that require more creative thinking - such as tech planning and reviewing PRs I was not that familair with. I can try going to friends place again when working on these tasks again in future and see if I can focus better than at home </li> </ul>"},{"location":"Work/202211221054%20-%20TIL/","title":"202211221054   TIL","text":""},{"location":"Work/202211221054%20-%20TIL/#featuregates","title":"FeatureGates","text":"<ul> <li>The featurreGate information is stored in the state and also in the activeCompany context</li> <li>The feature gates seem to be abled to be enabled for companies / accounts<ul> <li>individual companies? tiers of companies? how to do?</li> <li>individual accounts? how to do?</li> </ul> </li> <li>For our purpose, we just need to check if featuregates are enabled for this company<ul> <li>Hero features (e.g. workspaces) need to be enabled in featuregates for this company</li> <li>THe platform in which the hero features are in (e.g. Meta or Pinterest) need to be enabled for this company</li> </ul> </li> </ul>"},{"location":"Work/202211221054%20-%20TIL/#herofeature-feature-gates","title":"HeroFeature Feature Gates","text":"<ul> <li>We want the features to show only for the companies that have the features enabled</li> <li>In the admin panel&gt; feature gates. <ul> <li>We can see the feature gates we currently have: <code>enable_workspace</code>, <code>pinterest</code>...</li> <li>Click in, we can see a list of companies that currently have the features enabled</li> <li>In code, <code>activeCompany.feature</code> should return the features that the companies have enabled</li> <li>To restrict Hero Features to those companies enabled the features, we can set up the config data with featureGated features having the property <code>featureGate:[]</code> so that we can control the access</li> </ul> </li> </ul>"},{"location":"Work/202211221054%20-%20TIL/#featuregate-on-platforms","title":"FeatureGate on platforms","text":"<ul> <li><code>usePlatformSelector</code> manages the platform that should be visible to the current company</li> </ul>"},{"location":"Work/202211221054%20-%20TIL/#availableplatforms-vs-allowedplatforms","title":"AvailablePlatforms vs AllowedPlatforms","text":"<ul> <li>On the platform level, the <code>availablePlatform</code>  loops through <code>ChannelIdentifiers</code> checks if <ul> <li> <ol> <li>this desired action (feature. e.g. createCompaign) is avialble on this platform (<code>getNavigationAction</code>)</li> </ol> </li> <li> <ol> <li>if available, check the <code>featureGate</code> and make sure the feature is available to currentCompany</li> </ol> </li> </ul> </li> <li>This other <code>allowedPlatform</code> checkes <code>accountFor</code> <ul> <li><code>accountFor</code> is a map of the platforms that contain accounts for this company</li> <li><code>allowedPlatforms</code> show the platforms that the companies have connected with. ie the platforms for which there are connected accounts!</li> <li>Then, the featureGates for those platforms are checked to make sure the companies that have connected to the platform also have access to that platform feature</li> </ul> </li> <li> </li> </ul>"},{"location":"Work/202211221054%20-%20TIL/#whats-the-difference-between-availableplatforms-and-allowedplatforms","title":"What's the difference between availablePlatforms and allowedPlatforms?","text":"<ul> <li><code>availablePlatforms</code> show the platforms that the features have been made available for, regardless the companies</li> <li><code>allowedPlatforms</code> show the platforms that the companies have connected to and the features have been made available for</li> <li>For Hero Feature Recommender, we care about the platforms that the companies have connected with: <code>allowedPlatforms</code></li> </ul>"},{"location":"Work/202211221054%20-%20TIL/#hero-feature-feature-gate-implementations","title":"Hero Feature Feature Gate Implementations","text":"<ul> <li><code>Automation Feeds</code> page is actually only for Snap!!!</li> <li>If you are on that page, change to a company that does not have Snap connected, you will see the feature gate error!</li> <li><code>Feeds for automated ads</code> is only for Meta Accounts and it is Account Specific </li> <li>In Navigation Hub, we allow users to go to <code>VIEW_FEEDS</code> no matter what platforms they are on. VIEW_FEEDS will let them land on the Automated Feeds page. If they don't have Snap connected then they see an error banner.</li> <li>In Recommendation Hub, we reuse the same <code>useNavigator</code>, it already access the identified <code>js/routes</code> Routes. <ul> <li>There are 2 things to care about <ul> <li> <ol> <li><code>NavigationAction</code> and <code>Routes</code></li> </ol> </li> <li> <ol> <li><code>NavigationAction.VIEW_FEEDS</code> and <code>NavigationAction.VIEW_AUTOMATION_FEEDS</code></li> </ol> </li> <li> <ol> <li><code>Routes.AUTOMATION_FEEDS</code> and <code>Routes.ACCOUNT_AUTOMATION_FEEDS</code></li> </ol> </li> <li>In the <code>useNavigator</code>, the <code>getNavigationAction()</code> returns either <ul> <li>if crossplatform, a route with url -&gt; returns a NavigationActionProp already</li> <li>if platform specific, a NavigationAction, which maps to platform specific actionsConfig and then returns the NavigationActionProp with URL</li> </ul> </li> </ul> </li> </ul> </li> <li>In the Hero Feature Menu or any other Navigation Menu, the cross platform or platform specific links are constructed from the data config files<ul> <li>The Recommender data config file defines the actionConfig <code>NavigationAction.VIEW_AUTOMATION_FEEDS</code></li> <li>It is mapped to <code>Snap</code> and <code>Meta</code> actionsConfig, mapping to the corresponding routes:<ul> <li><code>Routes.AUTOMATION_FEEDS</code> and <code>Routes.ACCOUNT_AUTOMATION_FEEDS</code></li> </ul> </li> </ul> </li> <li> </li> </ul>"},{"location":"Work/202211221054%20-%20TIL/#why-create-navigationactionview_automation_feeds","title":"Why Create  <code>NavigationAction.VIEW_AUTOMATION_FEEDS</code>?","text":"<ul> <li>Previously, we had <code>NavigationAction.VIEW_FEEDS</code> only. It was only mapped to Meta \"Feeds for automated ads\" in SecondaryNavigationStructure</li> <li>This new NavigationAction would enable us to link to either Meta \"Feeds for automated ads\" in Routes.Account_AUTOMATION_FEEDS or Snap \"Automation Feeds\" in Routes.AUTOMATION_FEEDS. </li> </ul>"},{"location":"Work/202211230952%20-%20TIL/","title":"202211230952   TIL","text":""},{"location":"Work/202211230952%20-%20TIL/#misc","title":"Misc","text":"<ul> <li>Routes doe not work well in Mono repo: ask in the engineering chat []</li> </ul>"},{"location":"Work/202211230952%20-%20TIL/#companyselector-feature-planning","title":"CompanySelector Feature Planning","text":"<ul> <li>This seems like a smaller feature not too hard to plan</li> <li>There is a great benefit of sharing the intended approach first <ul> <li>Write on Google doc</li> <li>Look through the code and identify the existing services and modules that can be reused</li> <li>How the code can be structured to create the feature</li> <li>AND =&gt; Minna was able to give me suggestions to make the redirection happen on the Onboarding page instead of in the CampanySelector component!</li> </ul> </li> <li></li> </ul>"},{"location":"Work/202211262025%20-%2015-5/","title":"202211262025   15 5","text":""},{"location":"Work/202211262025%20-%2015-5/#this-week-completed-activities-notable-wins-whats-working","title":"This week (completed activities, notable wins, what\u2019s working)","text":"<ul> <li>Finish the current companySelector tests</li> <li>Do some simple UI updates</li> </ul>"},{"location":"Work/202211262025%20-%2015-5/#next-priorities","title":"Next priorities","text":"<ul> <li>Learn and dig deep into feature gates in order to review Minna's PR on Hero Feature Gates</li> </ul>"},{"location":"Work/202211262025%20-%2015-5/#challengesroadblocks","title":"Challenges/Roadblocks","text":"<ul> <li>Investigated test failure in the wrong direction, but got it figured out with Jemi in the meeting! Also clarified some core React concepts! </li> </ul>"},{"location":"Work/202211262025%20-%2015-5/#lessons-learnedopps-for-improvement","title":"Lessons Learned/Opps for improvement","text":""},{"location":"Work/202211262025%20-%2015-5/#tech-planning","title":"Tech Planning","text":""},{"location":"Work/202211262025%20-%2015-5/#fast-feedback-and-easy-change","title":"Fast Feedback and Easy Change","text":"<ul> <li>This is a very effective way of making sure the tech design for a particular feature is on the right track~<ul> <li>Minna was able to give me the feedback to make change in Onboarding page instead of CompanySelector -&gt;  a fundational change to the approach. Super easy to investigate and change before I wrote any code!! </li> </ul> </li> </ul>"},{"location":"Work/202211262025%20-%2015-5/#hidden-complexity","title":"Hidden Complexity","text":"<ul> <li>Before spiking, it looks pretty straight forward to implment, then...<ul> <li> <ol> <li>The custom_metrics page behaves differently. Somehow it does not get the <code>activeCompany</code> passed in. It looks like an Angular page not yet mapped to redux component yet....  It will be too much effort to convert the page to Redux page. =&gt; Unpleasant UX, but no risk in ignoring this </li> </ol> </li> <li> <ol> <li>Testing the component with 2 levels of Routes. Maybe it is the cause of testing issue??</li> </ol> </li> <li> </li> <li>Hmmm you don't know what you don't know. You need to spike first to really experience it</li> <li>Perhaps, ask Jemi's opinions</li> </ul> </li> </ul>"},{"location":"Work/202211262025%20-%2015-5/#how-to-uncover-hidden-complexity-sooner","title":"How to uncover hidden complexity sooner?","text":""},{"location":"Work/202211262025%20-%2015-5/#always-clarify-assumptions-on-the-doc","title":"Always clarify assumptions on the doc!","text":"<ul> <li>Some of the scenarios were not explicitly specified in the doc, which I thought about and had a reasonable approach</li> <li>But if this is not explicit, people will still ask in the doc</li> <li> </li> <li>SO =&gt; Tag Pavlo about the assumptions made for the scenarios not explicitly covered!</li> </ul>"},{"location":"Work/202211262025%20-%2015-5/#next-time","title":"Next Time","text":""},{"location":"Work/202211281055%20-%20TIL/","title":"202211281055   TIL","text":""},{"location":"Work/202211281055%20-%20TIL/#navigation-jest-test","title":"Navigation Jest Test","text":""},{"location":"Work/202211281055%20-%20TIL/#debug-misunderstanding","title":"Debug misunderstanding!","text":"<ul> <li>All React Components are rendered. E.g. every <code>&lt;Route/&gt;</code> children are rendered. The log <code>I should log</code> will always be logged even though the path is <code>/companies</code> ! </li> <li>The children components are all run and rendered into elements</li> <li>Only the one matching the path would be mounted</li> </ul> <pre><code>  const TestComp = () =&gt; {\n    console.log('i should log');\n    return &lt;div&gt;I am root&lt;/div&gt;;\n  };\n</code></pre> <p>   - The whole functional component is like the render mthod in a calss component. see here  ##### Check if a component is mounted under a Router  - Checking console.log from the component shown is NOT good indication =&gt; all children Routes get rendered anyway  - Testing using a simple Test component to check for the rendering route!</p>"},{"location":"Work/202211281055%20-%20TIL/#warning-message-is-not-the-real-issue","title":"Warning message is not the real issue","text":"<ul> <li>I kept getting the console warning <code>No routes matched location \"/\"</code> and suspected something may be wrong with the renderWithRouter helper.</li> <li>It was a warning, NOT an ERROR! so not the influencer!!</li> </ul>"},{"location":"Work/202211281055%20-%20TIL/#useeffect-compare-companyid","title":"UseEffect compare companyId","text":"<ul> <li>the root cause for my test failure was that the <code>useEffect</code> hook I created for redirection was run onMount as well. </li> <li>In the test, when the component was mounted, because the useEffect hook is also run and user gets redirected straight-away...</li> <li>When I test it in manual testing, this Onboarding page was run and re-rendered multiple times and - my hypothesis is that, even though it may be redirected initially, other states change make the component re-render, and the useEffect hook is not run on rerender. </li> <li>Best way to make it safe is to still do a check inside the useEffect is using <code>usePrevious</code> to compare the companyId again. Not just rely on the dependency check to prevent it from running in the beginning onMount.</li> </ul>"},{"location":"Work/202211281055%20-%20TIL/#assertion-for-test","title":"Assertion for test","text":""},{"location":"Work/202211281055%20-%20TIL/#for-async-promises","title":"For async Promises","text":"<ul> <li>findByText returns a promise. Sometimes in Jest test we may need to wait a bit for the assertion and we can use <code>findByText</code></li> <li><code>resolves.not.toBeNull()</code> == <code>toBeInTheDocument()</code></li> </ul> <pre><code>await expect(\n      screen.findByText('Make your Ads Smarter')\n    ).resolves.not.toBeNull();\n</code></pre>"},{"location":"Work/202211291650%20-%20TIL/","title":"202211291650   TIL","text":""},{"location":"Work/202211291650%20-%20TIL/#tests-for-navigation","title":"Tests for Navigation","text":"<ul> <li>It is very very tricky - because to test the render/ redirect can involve the whole page...</li> <li>Mocking the page and component and debug is very very time consuming...</li> <li>I am glad that I made the decision to skip mocking for the 2 pages: Integration and Users after debugging with Jemi</li> <li>No wonder existing pages are tested with shallow mount..... The full mount required mocking in so many levels -&gt; really time consuming and hard..</li> <li>Maybe discuss with Jemi about learning the internals of Jest testing library and the various mocking functions</li> </ul>"},{"location":"Work/202211291650%20-%20TIL/#feel-very-tired-and-slow-and-incompetent","title":"Feel very tired and slow and incompetent","text":"<ul> <li>I feel I am doing very slowly today.. I was hoping to finish the tests soon but never could.. and I thought I could help with picking up the copies but couldnt</li> <li>IT was like the lullaby language Weinberg mentioned...</li> <li>\"I could get to it soon\" =&gt; actually I bared finished my existing task at the end of the day... not to mention about picking up a new task - despite it may look simple</li> <li>e.g. I thought updating the CTA color would be super simple like a quick win, but no, the current LINKBUTTON does not have the color variant so it still needs to be discussed with the designers to extend the color variant..</li> </ul> <p>TODO: Write a brief summary for today the react dom pages left out thank you sorry didn't get to do the copy looked at the LinkButton cya next week</p> <p>Hello team, sorry I only managed  to finish the CompanySelector PR today with the tests and did not get around to the copy\u2026</p> <p>In resolving issues with Jemi, we noticed that there are 2 pages (Users and Integrations) where the user does not get redirected to the Onboarding page when switching to an onboarding company. They will be redirected to Onboarding when they click on other pages.  Somehow the ActiveCompanyContext returns old activeCompany instead of the new onboardingCompany - even though the right companyId is updated on the url. Since it seems to be a rare case when this issue happens and it can be easily worked around, we decided to leave it out first. Just wanna confirm with you again @Pavlo it is ok!</p>"},{"location":"Work/202211301449%20-%20TIL/","title":"202211301449   TIL","text":""},{"location":"Work/202211301449%20-%20TIL/#review-of-jemis-changes-to-my-pr","title":"Review of Jemi's changes to my PR","text":"<ul> <li>Styling the heading: There was an issue with wrapping h1 over h1. I made a tiny change to be span &gt; h1.... it did not occur to me that h1 was also a block component. So h1&gt;span, or just simply style over the OnboardingHeading component! </li> </ul>"},{"location":"Work/202211301449%20-%20TIL/#writing-the-redirection-tests","title":"Writing the Redirection tests","text":"<ul> <li>I wrote the redirection tests by mimicking the user actions such as 'clicking the companySelector button' to induce the change in the URL. </li> <li>Unfortunately, Jest test is not a e2e test and to test redirection of different pages e2e, it is ideally best using the root component that mounts all the children so that a different children page is mounted on redirection</li> <li>However, it is super hard to mock all the services...</li> <li>Best to keep things small - Jest tests for unit and integration tests</li> <li>Jemi's test basically skips the clicking button action, and just mimics the redirection via the change the activeCompany</li> <li>This is definitely easier to write, with the cost of not representing the real user action, that it will not catch the issue that I found with the existing react-router dom page redirecting back to onboarding - as something is wrong with the passing of <code>activeCompany</code> in the context</li> <li>It is so hard to mock a page... Tried on the Automation Feeds - half of my HP is gone. Weigh up the effort vs benefit before doing mocking on the whole page. </li> <li>Mocking is hard. esp the ones that have not had a working mock in existing tests</li> </ul>"},{"location":"Work/202211301449%20-%20TIL/#what-to-do-next-time","title":"What to do next time?","text":"<ul> <li>It is important to capture concrete user stories with examples to manual test first.</li> <li>In the test planning process, before spiking something, maybe have a quick call with Minna to further clarify, maybe she would also be able to see some upcoming tricky bits</li> <li>Before writing tests, answer the Qs (include in the tech planning doc maybe) :<ul> <li>What are the components to be rendered here?</li> <li>What do we need to mock?</li> <li>Have the components been mocked before in existing tests?</li> <li>What is the effort vs benefit from the mocking? maybe do a unit test approach?</li> </ul> </li> </ul>"},{"location":"Work/202212071646%20-%20TIL/","title":"202212071646   TIL","text":""},{"location":"Work/202212071646%20-%20TIL/#partial-application-with-bind","title":"Partial Application with .bind()","text":""},{"location":"Work/202212071646%20-%20TIL/#real-application-in-billing-entity","title":"Real application in Billing Entity","text":"<p>```   const handleEntitySelection = useCallback(     (adAccountId: string, id?: string) =&gt; {       if (id) {         setSelections((prevEntities) =&gt; ({           ...prevEntities,           [adAccountId]: id         }));       }     },     [setSelections]   );</p> <p>// define another function    onChange: handleEntitySelection.bind(null, adAccount.id)</p> <p>```</p>"},{"location":"Work/202212071646%20-%20TIL/#theory","title":"Theory","text":"<ul> <li>const add = (x, y) =&gt; x+ y</li> <li>if we wanna add <code>2</code>  to another number</li> <li>const add2 = (y) =&gt; 2 + y    OR</li> <li>const add2 = add.bind(null, 2)</li> </ul>"},{"location":"Work/202212081301%20-%20TIL/","title":"202212081301   TIL","text":"<p>Tech Planning Heuristics -Permission / User Roles</p>"},{"location":"Work/202212131257%20-%20TIL/","title":"202212131257   TIL","text":""},{"location":"Work/202212131257%20-%20TIL/#daily-prioritisation","title":"Daily Prioritisation","text":"<ul> <li>Remove all unread messages from slack </li> <li>Schedule / read slack reminders</li> <li>Review Den's PR \u2705</li> <li>Finish the Logic PR for review \u2705</li> <li>Review Minna's PR \u2705</li> <li>Review Jemi's PR  \u2705</li> <li>Update per Den's comment </li> <li>Read the Tiktok Connection Tech Plan</li> <li>Write tests<ul> <li>test if state setter maintains referential identity</li> </ul> </li> <li>Understand the AdLib tix</li> <li>Valentin's KeyWrapper CSS Snippet \u2705 - Duplo-1916 with <code>smartly-ui</code> label</li> </ul>"},{"location":"Work/202212131257%20-%20TIL/#review-the-authenticator-visual-pr","title":"Review the Authenticator Visual PR","text":"<ul> <li>25min<ul> <li>5 min: hypothesis</li> <li>10 min: read PR, write notes</li> <li>10min: note the diff </li> </ul> </li> </ul>"},{"location":"Work/202212131257%20-%20TIL/#if-it-were-me-how-would-i-approach","title":"If it were me, how would I approach?","text":"<ul> <li>Read the existing component</li> <li>Note the behaviours: props (input), renders (output: for identity is present, identity not present and error) and the inner functions</li> </ul>"},{"location":"Work/202212131257%20-%20TIL/#til","title":"TIL","text":""},{"location":"Work/202212131257%20-%20TIL/#usertokenauthenticator","title":"UserTokenAuthenticator","text":"<ul> <li>SUI Message components: We can supply a styled Link component as description</li> <li>BaseButton looks like a link!</li> </ul>"},{"location":"Work/202212131257%20-%20TIL/#icon-sharing-url","title":"Icon Sharing URL","text":"<ul> <li>Save the search text into the URL hash<ul> <li><code>decodeURLComponent</code> =&gt; decode into human readable form</li> <li><code>top.window.location.hash</code> =&gt; to get the hash of the url </li> <li><code>top.window</code> is actually <code>window.top.window</code> where the global object <code>window</code> is the global <code>this</code> and is omitted. </li> </ul> </li> <li><code>searchInput</code> is already used as text for filtering</li> <li>we can syncrhonise it with the hash in url</li> <li><code>searchInput</code>  is set to equal to the url hash <code>#/search=(.*)</code> by  default</li> <li>when <code>searchInput</code> is updated, url hash is also updated<ul> <li>useEffect to update the url hash whenever <code>searchInput</code> is changed </li> </ul> </li> <li>when the icon page is mounted, get the url hash and set <code>searchInput</code> to be the url hash<ul> <li><code>useEffect</code>, when hash changes, set the <code>searchInput</code></li> <li><code>topWindow.addEventListener('hashchange', updateSearch);</code></li> </ul> </li> </ul>"},{"location":"Work/202212131257%20-%20TIL/#to-enable-icon-sharing","title":"To enable Icon Sharing","text":"<ul> <li><code>const setSearchInHash =&gt; void</code>  - set the url hash search param to be searchInput (encoded!)</li> <li><code>const parseSearchFromHash =&gt;decodeURIComponent(hash.match(/search=(.*)))</code> - set the hash URL into human readable form</li> <li><code>useEffect(()=&gt;{},[searchInput])</code>  - 1 useEffect to set the url hash to be searchInput </li> <li><code>useEffect(()=&gt;{},[])</code> - another useEffect to set the searchInput to be url hash. To listen for url hash change, <code>top.window.addEventListener('hashchange', updateSearch)</code>  where updateSearch = setSearchInput(parseSearchFromHash). </li> </ul>"},{"location":"Work/202212141013%20-%20TIL/","title":"202212141013   TIL","text":""},{"location":"Work/202212141013%20-%20TIL/#reflection","title":"Reflection","text":"<ul> <li>I should check the PR review sooner - maybe before pick up each new task, check Slack&gt; Github Apps</li> <li>I want to know what others are going on, but I don't seem to have enough time to review both tech plans...<ul> <li>What do I wish to understand from reviewing the tech plans?</li> <li>What is the Most Important Thing to understand from Tech Plan?</li> <li>What are the blockers that stop me from reading tech plans end to end?</li> </ul> </li> </ul>"},{"location":"Work/202212141013%20-%20TIL/#prioritisation","title":"Prioritisation","text":"<ul> <li>Update per Den's review comment \u2705</li> <li>Update per Minna's comment \u2705</li> <li>Clarify Jemi's PR \u2705</li> <li>Write tests</li> <li>Olu's PR</li> <li>Minna's tech plan: TikTok Connection \u23ed<ul> <li>=&gt; need to create a Tiktok catalog first! </li> </ul> </li> <li>Jemi's tech plan</li> <li>Review Slack Messages \u23ed</li> </ul>"},{"location":"Work/202212141013%20-%20TIL/#til","title":"TIL","text":""},{"location":"Work/202212141013%20-%20TIL/#tiktok-connection-duplo-1822","title":"Tiktok Connection DUPLO-1822","text":""},{"location":"Work/202212141013%20-%20TIL/#why-is-this-so-tricky","title":"why is this so tricky?","text":"<p>10min - Tiktok connection is different from Snap.  - We can view Tiktok catalogs but cannot connect or disconnect</p>"},{"location":"Work/202212141013%20-%20TIL/#how-to-connect","title":"How to connect?","text":"<ul> <li><code>@smartly/feeds-api</code> provides hooks for fetching snap + tiktok catalogs</li> </ul>"},{"location":"Work/202212141013%20-%20TIL/#hands-on-tiktok-catalog-connection","title":"Hands on Tiktok Catalog Connection","text":"<ul> <li>Minna's tech plan has details on how to connect Snap, Tiktok in normal workflow</li> <li>\u274c Cannot create Tiktok Catalog to connect as I am not a Tiktok admin. Asking for </li> </ul>"},{"location":"Work/202212151158%20-%20TIL/","title":"202212151158   TIL","text":""},{"location":"Work/202212151158%20-%20TIL/#reflection","title":"Reflection","text":"<ul> <li>The whole morning is gone: had a meeting with Jemi, review and investigate and change based Minna's comments</li> <li>I felt happy after booking the meeting time with Minna! =&gt; Feels not urgent or necessary but once I do I feel I can learn more and forseeable faster progress!</li> <li>I feel stressed when unsure of mocking the <code>userMetaAdAccountReducer</code>. it returns the state which I just wanted to mock the adAccounts.<ul> <li>=&gt; Ask Jemi's approach</li> <li>=&gt; check other examples. Instead of using <code>MetaAdAccountContextProvider</code> mocking reducer, just <code>&lt;MetaAdAccountContext.Provider</code> and pass in the state</li> </ul> </li> </ul>"},{"location":"Work/202212151158%20-%20TIL/#priorities","title":"Priorities","text":"<ul> <li>tests<ul> <li>current tests 2.5h \u2705</li> <li>rewrite existing tests</li> </ul> </li> <li></li> </ul>"},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/","title":"202301191200   Code Learning Log","text":"<p>As a continuation of practice of directed self-learning of coding from [[202301141431 - \u65b0\u5e74\u65b0\u5e0c\u671b at work]], here is my attempt to keep a Q directed log to keep a record as well as stay focused.</p>"},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/#evaluation-of-the-previous-attempt","title":"Evaluation of the previous attempt \ud83d\ude06","text":""},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/#objective","title":"Objective","text":"<ul> <li>I completed the original mini goal! </li> <li>I did have a mental block ( in the initialFunc  part where I struggled to create clean code to satisfy this requirement)</li> <li>I started on the second task!</li> </ul>"},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/#reflective","title":"Reflective","text":"<p>\ud83d\ude04 - I feel I managed the mental block well because I already told Kaia that I am gonna stay focused! (else I will prob just - try harder~ then got frustrated \ud83d\ude02) - I did it by:     1. Consciously wrote down an ugly working solution even tho i was unhappy with it     2. instead of spending many hours thinking on my own, i wrote down the exact blocking points for me.      3. Then I looked at the solution and see how it works around the blocking points     4. I coded the solution from memory - Now I think about it after 2 days, I am actually proud of what I did!! - This is a big change, and turns out to be effective! :D</p>"},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/#why-was-this-effective","title":"Why was this effective?","text":"<ul> <li>Setting a clear goal, </li> <li>told Kaia about it to hold myself accountable, </li> <li>being with family to have many distractions so it is easy for me to stop, </li> <li>and write down notes so that I can clearly reflect!! \ud83d\ude43</li> <li>I still felt upset and stressed when I was wrapping up the 2nd task at 22:00 as I was hoping I could have done more ( although my goal was just to finish the 1st one)</li> </ul>"},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/#interpretative","title":"Interpretative","text":"<ul> <li>Talking to someone like Kaia about my goal to be small and focused was effective. Although I felt upset and unaccomplished not finishing the 2nd task but I did manage to stop. Looking back now, I am feeling proud :D</li> <li>Preping a short summary to Kaia before sleep - and I automatically put some positive perspective when I typed the message to her \ud83d\ude06\ud83d\ude02 - the habit of appearing positive helps making me feel better!? \ud83e\udd23</li> <li>Being on holiday and not stressed about my current work progress def helps a lot</li> </ul>"},{"location":"Work/202301191200%20-%20Code%20Learning%20Log/#decision","title":"Decision","text":"<ul> <li>Always write a reflection and message to Kaia \ud83d\ude02</li> <li>Always write a clear goal, step by step - even when I think I remember what I wrote before - this helps priming my mind</li> </ul>"},{"location":"Work/202301201108%20-%20Code%20Learning%20Notes/","title":"202301201108   Code Learning Notes","text":""},{"location":"Work/202301201108%20-%20Code%20Learning%20Notes/#single-small-mini-goal","title":"Single Small Mini Goal","text":""},{"location":"Work/202301201108%20-%20Code%20Learning%20Notes/#-create-a-simple-todo-with-this-tweet-example-and-this-blog","title":"- create a simple Todo with this tweet example and this blog","text":""},{"location":"Work/202301201108%20-%20Code%20Learning%20Notes/#code","title":"Code","text":"<ul> <li>here</li> </ul>"},{"location":"Work/202301201108%20-%20Code%20Learning%20Notes/#what-surprised-me","title":"What surprised me","text":"<ul> <li>I am unfamiliar with uncontrolled component!!! <code>&lt;input onChange={} /&gt;</code> can be handled with controlled component. When I wanna get input value only when on buttonClick , then we can get the input value via <code>ref</code> using uncontrolled component pattern</li> <li>Create a simple todo component does not take that long!</li> <li>The reducer <code>(state, action) =&gt; newState</code> can be treated as <code>(preState, newPartialState)=&gt; newState</code> Instead of using <code>switch(action.type)</code> in the reducer, we can actually pass in the updated form value like <code>{title:\"\"}</code> as partialData in the 2nd param!</li> <li>If we wanna access the preState in the dispatcher, <code>typeof action === \"function\"? action(preState): action</code></li> </ul>"},{"location":"Work/202301201109%20-%20Feature%20Learning%20Plan/","title":"202301201109   Feature Learning Plan","text":""},{"location":"Work/202301201109%20-%20Feature%20Learning%20Plan/#onboarding-toolkit","title":"Onboarding Toolkit","text":"<ul> <li>The confluence page</li> <li>The tracking ticket</li> <li></li> </ul>"},{"location":"Work/202301201109%20-%20Feature%20Learning%20Plan/#prerequisite-feature-work","title":"Prerequisite feature work","text":"<ul> <li>Rewrite Card component</li> </ul>"},{"location":"Work/202301201109%20-%20Feature%20Learning%20Plan/#plan-of-attack","title":"Plan of Attack","text":"<ul> <li>Scan through the  Use Case<ul> <li>List the main ideas of the doc</li> <li>Scan through the doc and Try succinctly explain each point with my words</li> <li>List the area that I don't </li> </ul> </li> <li>Read the long slack thread <ul> <li>Analyse the discussion with Qs</li> </ul> </li> </ul>"},{"location":"Work/202301201109-%20Feature%20Learning%20Plan/","title":"Onboarding Toolkit","text":"<ul> <li>The confluence page</li> <li>The tracking ticket</li> <li></li> </ul>"},{"location":"Work/202301201109-%20Feature%20Learning%20Plan/#prerequisite-feature-work","title":"Prerequisite feature work","text":"<ul> <li>Rewrite Card component</li> </ul>"},{"location":"Work/202301201109-%20Feature%20Learning%20Plan/#plan-of-attack","title":"Plan of Attack","text":"<ul> <li>Scan through the  Use Case<ul> <li>List the main ideas of the doc</li> <li>Scan through the doc and Try succinctly explain each point with my words</li> <li>List the area that I don't </li> </ul> </li> <li>Read the long slack thread <ul> <li>Analyse the discussion with Qs</li> </ul> </li> </ul>"},{"location":"Work/202301222131%20-%20Onboarding%20Use%20Case%20Notes/","title":"202301222131   Onboarding Use Case Notes","text":""},{"location":"Work/202301222131%20-%20Onboarding%20Use%20Case%20Notes/#what-heuristics-for-requirements","title":"What heuristics for requirements?","text":"<ul> <li>To provide clear guidance across various features for customers to easily complete a use case, such as setting up a campaign.</li> <li>When designers and PMs present ideas, what are the common areas that we should clarify and consider?</li> </ul>"},{"location":"Work/202301222131%20-%20Onboarding%20Use%20Case%20Notes/#noun","title":"Noun","text":"<ul> <li>Permission / authorisation / feature gate<ul> <li>what permission / authorisation is needed to start the tour?</li> <li>what permision / authorisation level is required for each feature touched? (catalogs/ workspace?)</li> </ul> </li> <li>Users<ul> <li>customers</li> <li>CSM</li> </ul> </li> <li>Tour States<ul> <li>Created, Deleted, </li> <li>Started, Abandoned, Finished, Restarted</li> <li>Visited, not visited (maybe incorporate visited state in the states above, like - \"restarted\")</li> </ul> </li> </ul>"},{"location":"Work/202301222131%20-%20Onboarding%20Use%20Case%20Notes/#verb","title":"Verb","text":"<ul> <li>CRUD (C)<ul> <li>How does a customer start a tour ?</li> <li>How does a CSM create a tour?</li> </ul> </li> <li>Remove (R)<ul> <li>How does a CSM remove a tour?</li> <li>How does a customer stop a tour?</li> </ul> </li> </ul>"},{"location":"Work/202301222131%20-%20Onboarding%20Use%20Case%20Notes/#adjective","title":"Adjective","text":""},{"location":"Work/202301222131%20-%20Onboarding%20Use%20Case%20Notes/#-easy-to-create-to-start-to-follow","title":"- Easy (to create, to start, to follow)","text":""},{"location":"Work/202301222131%20Onboarding%20Use%20Case%20Notes/","title":"What heuristics for requirements?","text":"<ul> <li>To provide clear guidance across various features for customers to easily complete a use case, such as setting up a campaign.</li> <li>When designers and PMs present ideas, what are the common areas that we should clarify and consider?</li> </ul>"},{"location":"Work/202301222131%20Onboarding%20Use%20Case%20Notes/#noun","title":"Noun","text":"<pre><code>- Permission / authorisation / feature gate\n    - what permission / authorisation is needed to start the tour?\n    - what permision / authorisation level is required for each feature touched? (catalogs/ workspace?)\n- Users\n    - customers\n    - CSM\n- Tour States\n    - Created, Deleted, \n    - Started, Abandoned, Finished, Restarted\n    - Visited, not visited (maybe incorporate visited state in the states above, like - \"restarted\")\n</code></pre>"},{"location":"Work/202301222131%20Onboarding%20Use%20Case%20Notes/#verb","title":"Verb","text":"<pre><code>- CRUD (C)\n    - How does a customer start a tour ?\n    - How does a CSM create a tour?\n- Remove (R)\n    - How does a CSM remove a tour?\n    - How does a customer stop a tour?\n</code></pre>"},{"location":"Work/202301222131%20Onboarding%20Use%20Case%20Notes/#adjective","title":"Adjective","text":""},{"location":"Work/202301222131%20Onboarding%20Use%20Case%20Notes/#-easy-to-create-to-start-to-follow","title":"- Easy (to create, to start, to follow)","text":""},{"location":"Work/202301291234%20-%20Compound%20Cards/","title":"202301291234   Compound Cards","text":""},{"location":"Work/202301291234%20-%20Compound%20Cards/#why-do-we-create-compound-cards","title":"Why do we create Compound Cards?","text":"<ul> <li>For Onboarding Toolkit, we have <code>use-case-cards</code> and the current Card component does not enable us to make <code>use-case-cards</code> easily.</li> <li>We create this new Compound Cards to enable creating the <code>use-case-cards</code></li> </ul>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#how-to-quickly-understand-the-thoughts-behind-the-design-and-creation-of-the-compound-cards","title":"How to quickly understand the thoughts behind the design and creation of the Compound Cards?","text":"<ul> <li>There are 2 PRs.</li> <li>Read the comments in the closed PR. See the Problems Jemi spotted</li> <li>Pull the new Compound Cards PR in Code and check</li> </ul>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#what-were-the-problems-jemi-spotted","title":"What were the problems Jemi spotted?","text":""},{"location":"Work/202301291234%20-%20Compound%20Cards/#context-declaration","title":"Context Declaration","text":"<ul> <li>We usually initialise the context to <code>null</code> and pass in the first state later. </li> <li>\u274c</li> </ul> <pre><code>const CompoundCardContext = createContext&lt;CompoundCardContextType&gt;(\n{} as CompoundCardContextType) \n</code></pre> <ul> <li>\u2705 </li> </ul> <pre><code>const CompoundCardContext = createContext&lt;CompoundCardContextType | null&gt;({})\n</code></pre>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#compound-card-code-reading-guiding-qs","title":"Compound Card Code Reading Guiding Qs","text":""},{"location":"Work/202301291234%20-%20Compound%20Cards/#what-are-the-states","title":"What are the states?","text":"<ul> <li>Internal (controlled by component): expanded/closed</li> <li>External (supplied by applications): num of children</li> </ul>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#component-api-heuristics","title":"Component API Heuristics","text":""},{"location":"Work/202301291234%20-%20Compound%20Cards/#controlled-by-product-applications-vs-uncontrolled-set-internally-in-component","title":"Controlled (by product applications) vs Uncontrolled (set internally in component)","text":"<ul> <li>The Compound Card has an internal state: <code>expanded</code> and we provide flexibility for users to control the state by themselves as well as the ease of use that we can manage it by ourselves</li> <li>prop: <code>expanded</code> -&gt; if this prop is supplied, then controlled, else we use our internal state</li> </ul>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#productify-the-common-design-patterns","title":"Productify the common design patterns","text":"<ul> <li>In area (Header) where there is a commonly used: we enable users to insert the text as props  </li> <li>And to preserve flexibility for customisation</li> </ul>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#define-the-compound-component-building-blocks","title":"Define the Compound component building blocks","text":"<ul> <li>Header, Action, Content, Row etc. Provide the layout block with preset CSS for ease of use and standardization of styles. </li> </ul>"},{"location":"Work/202301291234%20-%20Compound%20Cards/#mood","title":"Mood","text":""},{"location":"Work/202301291234%20-%20Compound%20Cards/#procrastination-feels-hard","title":"Procrastination, Feels Hard","text":"<ul> <li>After I noticed that I wanted to procrastinate cos reading the code line by line feels hard work and I may still get lost easily</li> <li>Then I remembered to come up with some guiding Qs to make it easier and fun!</li> </ul>"},{"location":"Work/202301301220%20-%20Intercom%20vs%20In-House%20Product%20Tours/","title":"202301301220   Intercom vs In House Product Tours","text":""},{"location":"Work/202301301220%20-%20Intercom%20vs%20In-House%20Product%20Tours/#read-the-documentations","title":"Read the documentations","text":"<ul> <li>User Journey Services</li> <li>Intercom Product Tours</li> <li>Comparisons</li> </ul>"},{"location":"Work/202301301220%20-%20Intercom%20vs%20In-House%20Product%20Tours/#what-are-must-haves-for-the-solution","title":"What are must haves for the solution?","text":""},{"location":"Work/202301301220%20-%20Intercom%20vs%20In-House%20Product%20Tours/#-testable-can-write-regression-tests-for","title":"- Testable. Can write regression tests for","text":""},{"location":"Work/202301301220%20-%20Intercom%20vs%20In-House%20Product%20Tours/#reflections","title":"Reflections","text":"<ul> <li>It is so hard to understand. I understand the pros and cons of using either approach. However, I will not have the idea about how to do the research </li> <li>I also read the slack thread. When looking at the proposal, such as using Webhooks, or use the Intercom data-attribute-model, I could not help but wanting to dig into &gt; why Webhook is needed? What webhooks are offered by Intercom? How does the data-attribute-model play in the role of the Product Tour?<ul> <li>Is the <code>data-aatribute-model</code> the meta data on each tour? </li> <li>Where would other tour states, information saved?</li> <li>Webhook: a way for an app to subscribe to another app</li> </ul> </li> </ul>"},{"location":"Work/202301301534%20-%20TIL/","title":"202301301534   TIL","text":""},{"location":"Work/202301301534%20-%20TIL/#hannu-improve-tests","title":"Hannu: Improve tests","text":"<ul> <li>Slack thread: Reduce flaky tests!!<ul> <li>Treat warning like errors! No console warnings!</li> <li>Common flaky tests: <ul> <li>async effects not cleaned up (not returned in useEffect. So try accessing the async response after the compound unmount)</li> <li>not use fake timers in tests where app uses timers (e.g. Date)</li> <li>network requests not mocked</li> </ul> </li> </ul> </li> </ul> <pre><code>Warning: An update to SomeComponent inside a test was not wrapped in act(\u2026).\nWhen testing, code that causes React state updates should be wrapped into act(\u2026):\n</code></pre> <ul> <li>Solution         - treat console warning as error. no console warnings jest-fail-on-console         - mock on unmocked tests: msw can mock all requests. and we can use it to catch unmocked requests in tests</li> <li>Track<ul> <li>Hannu has this excellent idea of collecting a set of tests that has uncaught network requests / write console errors/warnings - instead of failing these tests directly</li> <li>Makes it easier to refactor and track the improvement</li> </ul> </li> </ul>"},{"location":"Work/202301301534%20-%20TIL/#drawer-component","title":"Drawer Component","text":"<ul> <li>Only 1 Drawer open at one time<ul> <li>Define what is a drawer<ul> <li>My initial assumption is that only our Onboarding Drawer is The Drawer. But then, the super long Bulk Edit can also be a drawer</li> <li>Always clarify assumption</li> </ul> </li> <li>If we only want 1 open, we need to know if there is another open at the same time<ul> <li>Save the state in context to be shared!!</li> </ul> </li> </ul> </li> <li>Place the drawer whereever they want<ul> <li>Let them anchor somewhere!</li> </ul> </li> <li>Direction of the tooltip!</li> </ul>"},{"location":"Work/202301301534%20-%20TIL/#implement-drawer-against-interface","title":"Implement Drawer against Interface","text":""},{"location":"Work/202301301534%20-%20TIL/#-pr-close-button","title":"- PR - Close Button","text":""},{"location":"Work/202301301534%20-%20TIL/#where-to-get-navigate-usage-stats","title":"Where to get Navigate usage stats?","text":"<ul> <li>To help Editors to see whether implementing main navigation provides value to customers</li> <li>Is there another way to better implement the breakout pattern?<ul> <li>My guess: Sentry to get data?<ul> <li>What event? Dashboard URL?</li> </ul> </li> <li>=&gt; Pavlo: Segment, available on Tableau: <code>navigated_using_hub</code> event, <code>navigated using search</code>, <code>navigated without search</code>. The adoption percentage is over <code>smartly app visit</code></li> <li>slack thread, Navigation Hub Adoption Analysis</li> </ul> </li> </ul>"},{"location":"Work/202301301534%20-%20TIL/#ask-andrey","title":"Ask Andrey","text":"<ul> <li>How did he create the Slack auto updates?</li> <li>Important company update</li> </ul>"},{"location":"Work/202301301534%20-%20TIL/#ask-jemi","title":"Ask Jemi","text":""},{"location":"Work/202301301534%20-%20TIL/#-which-user-journey-involves-company-level","title":"- Which user journey involves company level?","text":""},{"location":"Work/202301301534%20-%20TIL/#remove-linting-error","title":"Remove Linting Error","text":"<p>![[Pasted image 20230130194816.png]]</p>"},{"location":"Work/202301311208%20-%20Drawer%20Component/","title":"202301311208   Drawer Component","text":"<ul> <li>Try Applying the component Heuristics defined in 202301291234 - Compound Cards and see if I can get a clearer picture faster</li> <li>Design</li> </ul>"},{"location":"Work/202301311208%20-%20Drawer%20Component/#what-are-the-states","title":"What are the states?","text":"<ul> <li>Expanded/ Collapsed</li> <li>Tour:</li> <li>Step: current (selected), completed, disabled, (ready and error) =&gt; what are the designs for these 2? how could a step get into an error state?</li> <li>Q: What triggers a step to be in the completed state? Depending on the tour, do we need to modify some product action buttons so that they dispatch the Tour action to mark a step as completed? \ud83e\udd14 but it does not seem scalable... </li> <li>Q: If we have no backend as the first step, how do we start a tour? Do we use a localStorage or cookie to store whether a tour has been started?</li> <li>Draft Example State: </li> <li>Q: Should we have the <code>steps</code> as an array and each array element contains such object?</li> </ul> <pre><code>https://smartlyio.atlassian.net/browse/DUPLO-1959\n\n{\n  userJourneyId: 'reporting_intro',\n  collapsed: false,\n  selected: 'step_id',\n  steps: {\n    step_id: 'completed',\n    other_step: 'ready'\n  }\n}\n</code></pre> <ul> <li> <p>Q: What is implementing drawer against interface?</p> </li> <li> <p>=&gt; If user abandoned the journey, the state is lost</p> </li> <li>=&gt; </li> </ul>"},{"location":"Work/202301311208%20-%20Drawer%20Component/#q-what-is-the-concept-idea-behind-the-creation-of-the-drawer-component","title":"Q: What is the concept / idea behind the creation of the Drawer component?","text":""},{"location":"Work/202301311511%20-%20TIL/","title":"202301311511   TIL","text":""},{"location":"Work/202301311511%20-%20TIL/#ask-smartly-ui","title":"Ask Smartly-UI","text":""},{"location":"Work/202301311511%20-%20TIL/#select","title":"Select","text":"<ul> <li>Lots of tech debt, usually we help by suggesting workarounds using <code>useCombobox</code> </li> </ul>"},{"location":"Work/202301311511%20-%20TIL/#tooltip","title":"Tooltip","text":"<ul> <li>it works by passing the ref into the children via forwardRef. If a child does not accept child (e.g. old Select), we can workaround by wrapping it with <code>div</code></li> </ul>"},{"location":"Work/202301311511%20-%20TIL/#popover-overlay","title":"Popover Overlay","text":"<ul> <li>Hmm trying to understand the problem identified in the thread..</li> <li>Q: So it is by design for the overlap or any elements to bubble up to parents, and up to the applications to stop the event propagation?</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/","title":"202302011243   Popover Close on Click out","text":""},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#typescript-syntax-qs","title":"TypeScript Syntax Qs","text":"<ul> <li>element is NonNullable&lt;<code>MyType</code>&gt; : NonNulable utility-&gt; removing the possibility of <code>undefined</code> or <code>null</code> from MyType and make sure the element is not nullable.</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#pseudocode","title":"Pseudocode","text":"<ul> <li>Attach a <code>click</code> event listener to the <code>document.body</code></li> <li>Detect whether the current click position is outside of the PopOver button, menu<ul> <li>Recurrsion for going from child to Parent to check if the current element belongs to the Popover</li> <li>Do the recussive check inside the listener</li> </ul> </li> </ul> <pre><code>// Check if the current click is outside of the Popover \n\n// the element that is clicked is contained in the event.target\nconst {target} = event  // html element\n\n// check all Popover parents (button, menu, overlay) are not null\n[popBtnRef.current, popMenuRef.current].filter((element): element is NonNullable&lt;HTMLElement&gt; =&gt;(element !== null ))\n\n// The filter function can be extracted\n\nconst isNonNullish = &lt;T,&gt;(\n  maybeNullish: T | null | undefined\n): maybeNullish is T =&gt; maybeNullish != null;\n\n</code></pre> <ul> <li>Close the Popover if it is</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#what-are-some-of-the-current-implementation-on-internet","title":"What are some of the current implementation on internet?","text":"<ul> <li>https://blog.logrocket.com/complete-guide-react-refs/</li> </ul> <pre><code>  useEffect(() =&gt; {\n    document.body.addEventListener(\"click\", onClickOutside);\n    return () =&gt; document.removeEventListener(\"click\", onClickOutside);\n  }, []);\n\n\n // state changes in React is async\n // we want to check that the modalRef.current is still present first\n  const onClickOutside = (e) =&gt; {\n    const element = e.target;\n    if (modalRef.current &amp;&amp; !modalRef.current.contains(element)) {\n      e.preventDefault();\n      e.stopPropagation();\n      onClose();\n    }\n  };\n\n</code></pre>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#what-are-some-things-i-would-like-to-check-in-our-own-implementation","title":"What are some things I would like to check in our own implementation?","text":"<ul> <li>Check for the modalRef.current?</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#v-important","title":"!!!V Important!!!","text":"<ul> <li>Check for multiple handler execution - esp when listen for events bubble up!</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#what-qs-do-i-have-after-reading-jemis-impl","title":"What Qs do I have after reading Jemi's impl?","text":""},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#do-our-popovers-use-the-3-refs-in-the-original-impl-where-are-they","title":"Do our popovers use the 3 refs in the original impl? Where are they?","text":"<ul> <li><code>internalDivAnchorRef</code> - the ref for Popover Overlay</li> <li><code>internalButtonAnchorRef</code> - the ref for the Popover Button</li> <li><code>internalContentRef</code> - the ref for the Popover Menu</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#how-to-set-the-html-elements-to-refs","title":"How to set the HTML elements to refs ?","text":"<pre><code>&lt;Content ref={this.myRef}&gt;\n\n// the element is passed to the ref\n&lt;Content ref={setPopover} /&gt;\n&lt;Content ref={(element)=&gt;{ myRef.current= element }} /&gt;\n</code></pre> <ul> <li>Jemi: Back in my day we didn't have ref objects\u00a0\ud83d\udc74. Refs were always functions:\u00a0<code>(element) =&gt; void</code>. For backwards compatibility refs can be either now. Passing a ref object\u00a0<code>ref</code>\u00a0is functionally and semantically equivalent to passing the function\u00a0<code>(element) =&gt; void (ref.current = element)</code>.</li> </ul>"},{"location":"Work/202302011243%20-%20Popover%20Close%20on%20Click%20out/#existing-way-to-detect-the-clickout","title":"Existing way to detect the clickout","text":"<ul> <li>use an overlay to cover the whole page under the Popover button and menu</li> <li>Sometimes there is a problem where the overlay gets constaining block, so we added another closing strategy to close by listening to the target outside of the Popover DOM</li> </ul>"},{"location":"Work/202302011611%20-%20TIL/","title":"202302011611   TIL","text":""},{"location":"Work/202302011611%20-%20TIL/#dd","title":"dd","text":""},{"location":"Work/202302011611%20-%20TIL/#pp","title":"pp","text":""},{"location":"Work/202302031417%20-%20Visualising%20the%20report/","title":"202302031417   Visualising the report","text":""},{"location":"Work/202302031417%20-%20Visualising%20the%20report/#-this-is-the-first-story-that-implements-the-user-journey-using-the-onboarding-toolkit","title":"- This is the first story that implements the user journey using the Onboarding Toolkit","text":""},{"location":"Work/202302031417%20-%20Visualising%20the%20report/#emotion","title":"Emotion","text":"<ul> <li>I am feeling like procrastinating again as I am a bit lost and unsure of what I do will be the correct way...</li> </ul>"},{"location":"Work/202302031417%20-%20Visualising%20the%20report/#what-smaller-tasks-can-i-break-it-down-to","title":"What smaller tasks can I break it down to?","text":""},{"location":"Work/202302031417%20-%20Visualising%20the%20report/#what-did-jemi-suggest-yesterday","title":"What did Jemi suggest yesterday?","text":"<ul> <li>Think of the tests first. Each test scenario can be generated as a task</li> <li>The states are saved inside the Drawer Context.<ul> <li>state is in the schema that Den is implementing</li> <li>I can create the action creators or selectors, but these are implementation details</li> <li>We can have a button that triggers the user journey tour. When the button is clicked, the journey information is filled in the Drawer context</li> <li></li> </ul> </li> <li>Example tests are:<ul> <li>(assuming there is a button that triggers the user journey and opens the drawer) - onButton click, the Drawer is opened and user journey state is loaded into the context</li> <li>(x) Verify the position of the contextualhelper (x - this is controlled by Popper)</li> <li>For each step, verify each of the 4 Drawer status</li> <li>User can move forward in each step</li> <li>User can move backward in each step</li> <li>(Any Async actions that may be fired in the Drawer?)</li> <li>(What happens when there is an error in the step? What might have triggered it and how can it be resolved?) =&gt; In the end, the states are from the backend. We don't store the error information in the backend. We only show the error in the UI. When you refresh the error will go way. </li> <li>Halfway into the journey, When user clicks away on the same page, the Drawer / contextulhelper closed and reopen to continue the journey</li> <li>Halfway into the journey, When user clicks away on the different page, the Drawer / contextulhelper closed and reopen to continue the journey </li> <li>After journey completes, when user clicks away and reopens the drawer, we can see the completed state (but it is by design that we lose the state information after switching the journey right?)</li> <li></li> </ul> </li> <li>To Do:<ul> <li>Check with the team about the Design. When Design is done, check the exact steps</li> <li>Steps: <ul> <li>Reporting &gt; (Given in the reporting view, Open the Drawer)</li> <li>Table view with graph &gt; </li> <li>Select column &gt; </li> <li>Adjust the time frame &gt; </li> <li>Visualize selected items only &gt; </li> <li>Change graph dimension</li> </ul> </li> <li>We have Drawer and useUserJourney()</li> <li>(Assuming we are using contextulhelp in each step with the Drawer opened)</li> <li>(We gonna put simple copy here and get someone from BobbyTables to update the copies)</li> <li>Investigate how to write tests</li> </ul> </li> </ul>"},{"location":"Work/202302062101%20-%20Tech%20Plan%20Visualising%20Report/","title":"202302062101   Tech Plan Visualising Report","text":""},{"location":"Work/202302062101%20-%20Tech%20Plan%20Visualising%20Report/#current-status","title":"Current Status","text":"<ul> <li>Wrote a list of Qs to clarify in order to have clear requirements</li> <li>Waiting for Pavlo to give answers to proceed</li> </ul>"},{"location":"Work/202302062101%20-%20Tech%20Plan%20Visualising%20Report/#what-next","title":"What next?","text":"<ul> <li>Usually I would wait for requirements to be ready, then create a list of tasks...</li> </ul>"},{"location":"Work/202302062101%20-%20Tech%20Plan%20Visualising%20Report/#what-can-i-do-now","title":"What can I do now?","text":"<ul> <li>I want to spike first, see if it is achievable</li> <li>Then I have a better idea to create sensible tickets, in vertical slices</li> <li>Make reasonable assumptions, allow for easy change when Pavlo answered requirements</li> </ul>"},{"location":"Work/202302062101%20-%20Tech%20Plan%20Visualising%20Report/#what-are-the-reasonable-assumptions","title":"What are the reasonable assumptions?","text":"<ul> <li>We create a button to load the visualisation user journey</li> <li>7 Steps in total ( including the sub steps)</li> <li>No need to go back</li> <li>Auto move forward by clicking the right button</li> </ul>"},{"location":"Work/202302062101%20-%20Tech%20Plan%20Visualising%20Report/#goal","title":"Goal:","text":"<ol> <li>In Frontend, create a button to load the 7 step visualisation in the Reporting page, beside the \"TableViewWithGraph\" button </li> </ol>"},{"location":"Work/202302062122%20-%2015-5/","title":"202302062122   15 5","text":""},{"location":"Work/202302062122%20-%2015-5/#chat-with-minna","title":"Chat with Minna:","text":""},{"location":"Work/202302062122%20-%2015-5/#tech-planning-discovery","title":"Tech Planning: Discovery","text":"<ul> <li>Start with Component: Check if Smartly-UI can be reused<ul> <li>Check with design, see if we can reuse, extend an existing component or create a new one</li> </ul> </li> <li>Start with API endpoints: Check if existing endpoints can be used<ul> <li>Github Search, we can also find out the team in charge. We can then know who to ping</li> </ul> </li> <li>Key: Define a solid set of requirements</li> </ul>"},{"location":"Work/202302062122%20-%2015-5/#how-to-implement","title":"How to implement?","text":"<ul> <li>We do not need to provide implementation details in tech planning</li> <li>But, I may need to do a spike in order to know if something is doable or if my approach is reasonable </li> </ul>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/","title":"202302081539   Tech Plan Visualising Report","text":""},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#something-i-am-puzzled","title":"Something I am puzzled","text":""},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#what-shall-i-do-first","title":"What shall I do first?","text":"<ul> <li>Continue with the spike, but then I will need to make my own context since Den's context is not merged yet</li> <li>Create Jira tickets, detailing what I need to do next</li> <li>Investigate how to do redirection and mount the Drawer onClick</li> </ul>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#what-gives-the-biggest-impact","title":"What gives the biggest impact?","text":"<ul> <li> <p>I can create the Jira tickets first and clarify the requirements first.</p> </li> <li> <p>Minna also wrote her tech planning doc. Check and Learn!</p> </li> </ul>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#so","title":"SO","text":"<ul> <li>I can only ask these detailed Qs after trying to implement a bit. So I will try at least make the first contextualhelper to showup (30min)</li> <li>and move to the next one</li> <li>and have 1 Drawer to be displayed</li> </ul>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#using-drawerrenderer","title":"Using DrawerRenderer","text":"<ul> <li>We have different DrawerRenderer for each of the user journey</li> <li><code>drawerImplementation</code> object is to be created in a common place for storing all the user journeys right? where shall we place it?</li> <li>Contextualhelper: where to put the onClick method for dispatching the event?</li> </ul>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#q-so-we-have-just-1-drawerrenderer","title":"Q: So we have just 1 DrawerRenderer?","text":"<ul> <li>Where is DrawerRenderer used? It is used for rendering the Drawer. Drawer is only rendered in 1 place since we only have 1 Drawer open at one time. and We will pass <code>drawerImplementations</code> into the Renderer. (I think)</li> <li>We define earch userJourneyImplementations alongside each userJourney</li> </ul>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#q-create-a-common-folder-for-containing-userjourneys","title":"Q: Create a common folder for containing userJourneys?","text":""},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#q-create-a-common-place-for-drawerrenderer","title":"Q: Create a common place for DrawerRenderer?","text":"<p>Q:  - there is only a journey and one drawer open at one time - after a contextualhelper is closed, the selectedStepId is null? how do we re-select again? by click on the Drawer(? not clickable) or click the previous step? - best way to structure the code? - DrawerProvider and DrawerRenderer and drawerImplementations dela?</p> <ul> <li>place DrawerRenderer inside ReactRoot(?)</li> <li>Q: about the onClick inside ContextualHelper control</li> <li>PM</li> <li> <p>is it ok to just have the entry point available inside herofeatureRecommender? </p> </li> <li> <p>Drawer Step is currently not clickable - in future they should</p> </li> <li>Pavlo: Drawer step clickable?</li> </ul> <p>A: - open on homepage - open the feature page, then we can start the user journey (e.g. easy in catalogs, but hard in PivotTable) - 3rd option, teams create CTA. that opens the journey - 4th generate links for user journey, - ** value</p> <p>==&gt; Create URLs in the state now! ==&gt; ok the Steps not clickable</p> <p>Things happen  - delete CTA in Reporting since we upgrade product tours - we will feature gate it - no feature gate on user level</p> <p>User Journey enhancement - user roles -  - </p>"},{"location":"Work/202302081539%20-%20Tech%20Plan%20Visualising%20Report/#issue","title":"Issue:","text":"<p>Lots of various build errors!!!!! =o=</p>"},{"location":"Work/202302101548%20-%20User%20Journey%20Impl%2015-5/","title":"202302101548   User Journey Impl 15 5","text":""},{"location":"Work/202302101548%20-%20User%20Journey%20Impl%2015-5/#spike-so-far","title":"Spike so far","text":"<ul> <li>I clarified how to initialise the the Drawer. The starting point and integration is the most confusing part. Once I had some experience and I would understand better and able to have more discussion effectively</li> <li>1st step: Enable the URL association and also lay the ground for DrawerProvider and DrawerRenderer</li> <li>Then, Minna and I can develop specifics of each of the user journey separately</li> </ul>"},{"location":"Work/202302101548%20-%20User%20Journey%20Impl%2015-5/#what-i-noticed","title":"What I noticed..","text":"<ul> <li>Debugging and resolving typing issues can take a long time - even after thorough tech planning with spikes done!<ul> <li>No need to put <code>\" \"</code> around <code>SearchParams</code>!!!</li> </ul> </li> <li>Nested onClick handler is a bad idea (find Minna's quote \"nested interaction is not semantically valid\")</li> <li>Map through the DrawerStep elements should not be the reason for including Title, description in the State data for looping. i.e. State should just include the essential. It should not be dictated by the Drawer display in this case.</li> <li>Associate URL with modal - state does not need to be the only source of truth. Usually it is. In our case, it does not need to be and can just be associated with URL by listening for URL change and create a sideEffect to dispatch an Modal Open Action</li> </ul>"},{"location":"Work/202302101548%20-%20User%20Journey%20Impl%2015-5/#what-i-found","title":"What I found:","text":"<ul> <li>Initially, when unsure whether my idea is good - even with good intention - always ask in slack first before implementing it ( then take a break, planning, writing notes etc while waiting for reply)</li> <li>Maybe getting a google hangout open all the time(?!) or pre-book a slack huddle in the afternoon in advance, even a chat and verbal walkthrough of my intention n plan is good! Then I don't need to wait for long to reply - I know I will have access to good answers soon! :D</li> <li>Pair coding - debug takes a long time - even for straight forward tasks I can get trapped - then someone else can take over to debug - make it so much more effective! :D</li> </ul>"},{"location":"Work/202302171118%20-%20TODO/","title":"202302171118   TODO","text":"<ul> <li>Create all tickets for User Journey: Visualising Report \u2705</li> <li>PR review for Jemi \u2705</li> <li>Update the tech planning page \u2705</li> <li>Update the Jira tickets \u2705</li> <li>Read the comments on the Drawer Foundation URL ticket, make notes </li> <li>Pick up the first task \u2705</li> </ul>"},{"location":"Work/202302201555%20-%20TODO/","title":"202302201555   TODO","text":"<p>TODOs - Read the comments on the Drawer Foundation URL ticket, make notes  - Fix the pnpm build of the frontend repo \u2705</p> <p>Kick Off Notes - Pavlo: Learn from Team Aether how User Invitation flow works - Triggers and Budget Pool has a new designs. We need to estimate if we can help them next Quarter. We need to see how we can help them with creation experience instead of building the features for them - Success Plan research: What success would become on the Home Page so we have better idea - Tatu: more insights for Home Page and more times saved for Sales - 2 aligns: Team Aether and Tatianna on Trigger n Budget Pool - Strategy on Insights: put in stone this week - Pavlo n Qianfei: put more widgets on Homepage. Q to work on other designers on Homepage and Tommi on Creative Insights - Jemi:2 stories to ge things up. Then 1 story per story. Afterwards, backend stuff, depending on the requirements</p>"},{"location":"Work/202302201555%20-%20TODO/#drawer-foundation-url","title":"Drawer Foundation URL","text":"<p>My original Type definition - It is best to define from the smallest modules <code>JourneySteps</code> and compose all the way up to <code>visualisingReportSteps</code> </p> <pre><code>const visualisingReportSteps: Record&lt;string, DrawerStatus&gt; = {\n  openGraph: 'ready',\n  selectColumn: 'disabled',\n  adjustTime: 'disabled',\n  selectSingleRow: 'disabled',\n  toggleAllRows: 'disabled',\n  changeDimension: 'disabled',\n  changeGraphType: 'disabled',\n};\n\nconst visualisingReportInitialState: State = {\n  userJourneyId: 'visualisingReport',\n  steps: visualisingReportSteps,\n  expanded: true,\n  selectedStepId: 'openGraph',\n};\n\nexport type JourneySteps = keyof typeof visualisingReportSteps;\n</code></pre> <p>Jemi recommended</p> <pre><code>export type JourneySteps =\n  | 'openGraph'\n  | 'selectColumn'\n  | 'adjustTime'\n  | 'selectSingleRow'\n  | 'toggleAllRows'\n  | 'changeDimension'\n  | 'changeGraphType';\n\nexport const visualisingReportSteps: Record&lt;\n  JourneySteps,\n  UserJourneyStepStatus\n&gt; = {\n  openGraph: 'ready',\n  selectColumn: 'disabled',\n  adjustTime: 'disabled',\n  selectSingleRow: 'disabled',\n  toggleAllRows: 'disabled',\n  changeDimension: 'disabled',\n  changeGraphType: 'disabled',\n};\n</code></pre> <p>The reason is : - By using <code>Record&lt;string, DrawerStatus&gt;</code> in my original definition, the <code>keyof</code> will narrow down the types into <code>string</code> instead of string literals. Unless in my original type dclaration, I declared the type as </p> <pre><code>const visualisingReportSteps = {\n  openGraph: 'ready',\n  selectColumn: 'disabled',\n  adjustTime: 'disabled',\n  selectSingleRow: 'disabled',\n  toggleAllRows: 'disabled',\n  changeDimension: 'disabled',\n  changeGraphType: 'disabled',\n} satisfies Record&lt;string, DrawerStatus&gt;;\n\n</code></pre>"},{"location":"Work/202302201555%20-%20TODO/#how-is-satisfies-used","title":"How is satisfies used?","text":"<ul> <li>It is useful in the string literal union declarations </li> <li>It can be used to find the exact matching type in the type union</li> <li>For instance, there is a type declaration for <code>Color</code></li> </ul> <pre><code>type Color = string | {r: number, g: number, b: number}\n</code></pre> <ul> <li>If we declare red color the way we normally do...</li> </ul> <pre><code>const red: Color = \"red\"\n</code></pre> <ul> <li>The Typescript type inference will not be able to discern the type of <code>red</code> is a string in the build time </li> </ul> <pre><code>// type casting\n\nconst green = \"green\" as Color\n</code></pre> <ul> <li>Type Casting is not helpful here as it does not narrow down the type futher into a <code>string</code> in the build time. The type of green is still known as <code>Color</code> and TS is unable to suggest string methods when using green in code editor</li> </ul> <pre><code>const blue = \"blue\" satisfies Color\n</code></pre> <ul> <li>Here TS checks whether type in the type union in <code>Color</code> satisfies the <code>blue</code> string, hence it knows blue satisfies <code>string</code> type in the type union in <code>Color</code> . </li> </ul>"},{"location":"Work/202302231615%20-%20TIL/","title":"202302231615   TIL","text":""},{"location":"Work/202302231615%20-%20TIL/#debug-jest-tests","title":"Debug Jest Tests","text":"<ul> <li>Writing tests is very important yet not always straight forward</li> </ul>"},{"location":"Work/202302231615%20-%20TIL/#how-to-verify-existance-of-the-contextual-helper","title":"How to verify existance of the contextual helper?","text":"<ul> <li>I would like to verify the tooltip shows up on user journey initialisation</li> <li>So, the issue was that I mistakenly wrapped the regex with quotes... Partial Matching of the text works with just regex! :D</li> </ul>"},{"location":"Work/202302231615%20-%20TIL/#how-to-debug-faster","title":"How to debug faster","text":"<ul> <li>Get a real person as the rubber duck!! They can usually spot your mistake!</li> </ul>"},{"location":"Work/202302231615%20-%20TIL/#why-not-using-renderwithurl","title":"Why not using renderWithUrl?","text":""},{"location":"Work/202302231615%20-%20TIL/#to-remove-the-dependency-on-other-frontend-components-from-the-tests","title":"To remove the dependency on other frontend components from the tests","text":"<ul> <li>In writing the tests, I am inclined for the tests to mimic the real world scenarios as much as possible, and hence, using <code>renderWithUrl</code> and <code>UserJourneyProvider</code> and <code>UserJourneyRenderer</code> to render the Drawer as well as the Drawer context which the contextual helper depends on</li> <li>However, Jemi draws my attention to the potential issue of double dependency when test is dependent on another frontend component (components/UserJourneys). Should this component (VisualisationToggles) ever be extracted out of frontend, the frontend would import (VisualisationToggles) but VisualisationToggles tests would depend on frontend (components/UserJourneys) and cause double dependencies and would make it fail to compile</li> </ul>"},{"location":"Work/202302231615%20-%20TIL/#create-a-test-wrapper-for-testing-2-separate-components-sharing-the-same-context","title":"Create a test Wrapper for testing 2 separate components sharing the same context","text":"<ul> <li>Create a UserJourneyTestWrapper from the <code>onboarding-toolkit</code> package providing <code>UserJourneyProvider</code> and <code>UserJourneyDrawerRenderer</code>  and accepts the <code>userJourneyId</code> etc into the state and supply it to the children.</li> <li>The cons of this approach is that this is less realistic and provides less confidence. This is the tradeoff we need to make in the unit tests in order to maintain good code boundaries. </li> <li>More realistic tests can be written in e2e tests in future. This can be a good case to explore in future.</li> </ul>"},{"location":"Work/202302231615%20-%20TIL/#note","title":"NOTE","text":""},{"location":"Work/202302231615%20-%20TIL/#when-creating-new-packages-also-provide-useful-test-utils-for-users","title":"When creating new packages, also provide useful test utils for users!","text":""},{"location":"Work/202302241522%20-%20TODO/","title":"202302241522   TODO","text":"<ul> <li>Added a Storybook story for the left prop \u2705</li> <li>Review Minna's PR \u2705</li> <li>Read Slack Chat threads, make a short summary</li> <li>Read Jemi's tech plan on the Jira stories</li> </ul>"},{"location":"Work/202302241522%20-%20TODO/#pr-review-heuristics","title":"PR Review Heuristics","text":"<ul> <li>Understand the main points being tested and investigate </li> <li>API interface - does that make sense?</li> <li>Logics and UI on the same level</li> <li>Types constraint!!</li> </ul>"},{"location":"Work/202302271504%20-%20TIL/","title":"202302271504   TIL","text":""},{"location":"Work/202302271504%20-%20TIL/#generic-type-guards-for-onboarding-toolkit","title":"Generic Type Guards for Onboarding-toolkit","text":"<ul> <li>The key is to make it as generic as possible. </li> <li>The Step statuses are pre-defined as <code>ready | completed | error | disabled</code> . They are good for UserJourneyDrawer. Jemi still wants it to be even more generic to cater for future unforseeable usecases. So he made the default type for UserJourneyDrawer, <code>unknown</code></li> <li></li> </ul>"},{"location":"Work/202302271504%20-%20TIL/#support-qs","title":"Support Qs","text":"<ul> <li>Q: When working on the admin UI, is user protected routes sufficient for security?<ul> <li>There is no code hidden on the frontend side so user protected routes are for convenience purpose rather than for security purpose anyway</li> </ul> </li> </ul>"},{"location":"Work/202302271542%20-%2015-5/","title":"202302271542   15 5","text":""},{"location":"Work/202302271542%20-%2015-5/#best-practices","title":"Best Practices","text":"<ul> <li>Abstract code to keep in mind: Watch out for nested interaction! Nested Interaction is not semantically valid</li> <li>We decide on the information to include in the State based on whats essential, not because of ease of display</li> <li>Type Definition: Start from the smallest and compose into more complex ones</li> <li>Define </li> </ul> <pre><code>// Define the basic data set as Tuple!\nconst journeySteps = ['openGraph', 'selectColumn'] as const\n\n// Get Type from data\nconst JouneySteps = typeof journeySteps [number]\n\n// \n</code></pre>"},{"location":"Work/202302271542%20-%2015-5/#url-and-open-modal","title":"URL and Open Modal","text":"<ul> <li>Either URL acts as the single source of truth to indicate the state that the modal is open</li> <li>OR the URL triggers the side effect to dispatch the action to open the modal. </li> </ul>"},{"location":"Work/202302271542%20-%2015-5/#good-habits-to-retain","title":"Good Habits to retain","text":"<ul> <li>Ask for fast feedbacks or book for meetings in advance so that I can have Qs clarified soooon</li> <li>Overall: Feels good this time! Approach:<ul> <li>Write tech plans and ask clarifying Qs</li> <li>Spike first and get fast feedback for Qs within 1 day</li> <li>Pair working on something new is also great!</li> </ul> </li> </ul>"},{"location":"Work/202303071518%20-%20TODO/","title":"202303071518   TODO","text":"<ul> <li>Figure out Jemi's PR typings : on Thunk</li> <li>Work on Duplo-2012</li> </ul>"},{"location":"Work/202303071518%20-%20TODO/#applymiddleware","title":"ApplyMiddleware","text":""},{"location":"Work/202303071518%20-%20TODO/#what-does-it-do","title":"What does it do?","text":""},{"location":"Work/202303071518%20-%20TODO/#thunk","title":"Thunk","text":""},{"location":"Work/202303071518%20-%20TODO/#what-does-it-do_1","title":"What does it do?","text":""},{"location":"Work/202303071518%20-%20TODO/#_1","title":"202303071518   TODO","text":""},{"location":"Work/202303071518%20-%20TODO/#contextual-helper","title":"Contextual Helper","text":""},{"location":"Work/202303071518%20-%20TODO/#strange-closepopover-does-not-work-in-contextual-helper","title":"Strange: closePopover does not work in Contextual Helper","text":"<ul> <li>The usePopover gives out <code>closePopover</code> method, which, inside Popover component dispatches Popover Actions to close Popover menu</li> <li>However, when using the <code>closePopover</code> method in the Contextual Helper, the Popover component does not close as expected ...</li> </ul>"},{"location":"Work/202303071518%20-%20TODO/#strange","title":"Strange","text":""},{"location":"Work/202303071518%20-%20TODO/#possibly-the-batch-state-transition-issue","title":"Possibly the batch state transition issue","text":"<ul> <li>so my second hook <code>useContextualHelper</code> does not get the updated value <code>isHelperOpen</code> from the first hook</li> <li>What happened was that, there were 2 renders, </li> <li>1st render, <code>isHelperOpenInitial: true, isHelperOpen: false</code></li> <li>2nd render, adfter isHelperOpen is updated, it should be passed into <code>useContextualHelper</code> </li> </ul> <p>``` js</p> <p>const isHelperOpenInitial =     useUserJourney(VISUALISING_REPORT_ID)?.selectedStepId === 'changeDimension';   const [isHelperOpen, setIsHelperOpen] = React.useState(isHelperOpenInitial);   if (isHelperOpenInitial) {   // when isHelperOpenInitial is true, isHelperOpen is still false...     debugger;   }   // can move this line back into component   const { contextualHelperProps } = useContextualHelper({     isOpen: isHelperOpen,   });```</p>"},{"location":"Work/202303160737%20-%20Learning/","title":"202303160737   Learning","text":""},{"location":"Work/202303160737%20-%20Learning/#what-i-want","title":"What I want","text":"<ul> <li>I want to be able to write good code like the Drawer Redux state management or Generic Wizard like Jemi did</li> </ul>"},{"location":"Work/202303160737%20-%20Learning/#what-does-it-comprise-of","title":"What does it comprise of?","text":"<ul> <li>Understanding of the code structure, why certain design decisions are made</li> <li>The structure of each component and file and their relationships</li> <li>Have testability in mind </li> <li>Typescript for geneic util functions</li> <li>Clean, reusable code for achieving certain purpose</li> </ul>"},{"location":"Work/202303160737%20-%20Learning/#what-do-i-want-to-be-able-to-do-now","title":"What do I want to be able to do now?","text":"<ul> <li>Combine some learning of structure of design and coding</li> <li>Can quickly explain with some diagrams about the designs of the Generic Wizard components and the code structure</li> <li>The coding styles enabling this abstraction </li> <li>and the Typescript typing needed to achieve this</li> </ul>"},{"location":"Work/202303160737%20-%20Learning/#some-design-concerns","title":"Some design concerns","text":"<ul> <li>Some of the platforms have very similar APIs and the Onboarding structure. In order to not repeat the code<ul> <li> <ol> <li>We can create Platform agnostic Onboarding Wizard, where we use the same Wizard component for each of the platforms </li> </ol> </li> <li>Pros: We can reuse the Platform agnostic Onboarding Wizard on all platforms, including future new Platforms and just supply them with their own specific congifuration files. It makes future development of new Wizards for new platforms easy</li> <li>Cons: The </li> </ul> </li> </ul>"},{"location":"Work/202303281325%20-%20TIL/","title":"202303281325   TIL","text":""},{"location":"Work/202303281325%20-%20TIL/#composite-stesp","title":"Composite Stesp","text":"<ul> <li>In the contextual helper, previously we had 1 contextual helper matching with 1 step</li> <li>However, it makes more sense semantically that for each semantic step, there would be multiple clicks (contextual helper) guiding the user through the step =&gt; Composite Step</li> </ul>"},{"location":"Work/202303281325%20-%20TIL/#my-initial-idea","title":"My Initial Idea","text":"<ul> <li>To implement the composite step, my initial idea was that we could have a <code>ContextualHelperProvider</code>, that remembers the <code>currentContextualHelper</code>. Basically, for each step, we check if it is a compositeStep or not, if it is a compositeStep, then we check what is the currentContextualHelper.</li> </ul>"},{"location":"Work/202303281325%20-%20TIL/#jemis-idea","title":"Jemi's idea","text":"<ul> <li>To keep track of substeps (currentContextualHelper) insde page, we have <code>duplicate state</code>. =&gt; yes now we need to keep track of <code>currentStepId</code> and <code>currentContextualHelper</code>.</li> <li>Instead of keeping track of the <code>currentContextualHelper</code>, we define <code>priority</code> for the contextual helpers inside each compositeStep.</li> <li>We make sure inside each compositeStep, only the contextual helper with highest priority is open at any one time. like <code>z-index</code>. If the open tooltip with the highest priority changes inside the step, then the open tooltip open is also changed. </li> <li>This way we don't need to keep track of the <code>currentContextualHelper</code>, we just need to pass in the <code>priority</code> number into the contextual helper in the associated anchor element. The priority context automatically determines which one to open based on the priority</li> <li>Jemi's implementation was robost. Apart from the obvious use case:<ul> <li>When CH <code>isOpen</code> is false, it is not open even with higher priority</li> <li>When multiple CH <code>isOpen</code> are true, the one with highest priority is open</li> </ul> </li> <li> <p>He also handles the case where the priority changes, although I dont see how the priority could possibly change as naturally, the later interaction would have a higher priority.</p> <ul> <li>When the priority changes, then the context knows and updates the open CH</li> <li>when there is no priority given, it is shown alongside the the top priority (ie. multiple CH open at one time)</li> <li>when there are CH with same high priority, they are open at the same time</li> <li>Jemi's solution does not distinguish between composite steps or not. His solution does not reset the priority inside each of the compositeStep, instead each userJourney has one set of priority, which also works and make things less complicated.</li> </ul> </li> </ul> <pre><code>const {..., priority} = props \nconst hasPriority = usePriority(priority, isOpenProp);\nconst isOpen = isOpenProp &amp;&amp; hasPriority;\n\n// The contextual helper only shows up when it has the highest priority and set open\n</code></pre>"},{"location":"Work/202303281325%20-%20TIL/#contextualhelpertsx","title":"ContextualHelper.tsx","text":""},{"location":"Work/202303281325%20-%20TIL/#to-learn-jemis-solution","title":"To learn Jemi's solution","text":"<ul> <li>At first I was thinking of rewriting the Register object, but it felt fake that I was merely copying. Then I asked Jemi about his thought process and the sequence of how he implements the code, he said that he implements the <code>usePriority</code> hook first (which makes sense as we could see how this can be used to control the open situation of the Contextual Helper), then the registrar object, then noticed that things are not rerendered inside the object, then he added the rerender method for triggering rerendering.</li> </ul>"},{"location":"Work/202303281325%20-%20TIL/#the-best-way-to-learn","title":"The best way to learn:","text":""},{"location":"Work/202303281325%20-%20TIL/#the-preparation","title":"The preparation","text":"<ul> <li>Morning stretch and exercises!!! Super fresh and clear mind! Perfect </li> <li>When I feel I wanna procrastinate or use phone =&gt; time for break! water or stretch or walk around!</li> </ul>"},{"location":"Work/202303281325%20-%20TIL/#the-work","title":"The work","text":"<ul> <li>Destructure his solution bit by bit, understand what each of those are doing</li> <li>NExt time: should start with the interface <code>usePriority</code> first. Reason about what we want from it and how we can get those information. Make it easier to read the internals of each code methods</li> </ul>"},{"location":"Work/202303281325%20-%20TIL/#what-i-did","title":"What I did","text":"<ul> <li>Had a plan of the simplified version that I am going to make on repl.it</li> <li>Basically I will have 3 plain components printing the values of the <code>priority</code>, <code>isOpen</code> etc on screen</li> <li>To mimic value update for rerender, I added an input control to trigger the update</li> <li> <p>This is the abstract simple way so we don't need to worry about creating the real hard ContextualHelper!</p> </li> <li> <p>I enjoyed the process of having jotted down the things I noticed on Jemi's code and the goal, and try to reproduce the working solution myself -&gt; and only peek into Jemi's solution when I am unsure of syntax or a bit stuck</p> </li> <li>In the process, I noticed that I stored multiple versions of the same thing into the subscribers[] array. I started console logging and change the data structure to Set, or add the <code>rerender</code> identity to the value =&gt; but the duplication is still there!</li> <li>The duplication is removed after I added the <code>unregister</code> method and put <code>register</code> inside <code>useEffect</code> -&gt; which makes so much sense!!! We only want to register the subscriber once for each render of the ContextualHelper. Everytime it rerenders, we will want to tear it down and add it again. So, for each instance of ContextualHelper, we only have 1 corresponding subscriber in the array!</li> </ul>"},{"location":"Work/202303281325%20-%20TIL/#special-things-noted","title":"Special Things noted:","text":"<ul> <li>this.subscribers.unregister.bind(this, subscriber)</li> <li>Assign the same subscriber to  <code>unregister</code> and <code>this.subscribers</code></li> <li>In the <code>unregister</code> method, filter the <code>this.subscribers</code> array to the remaining ones. </li> <li><code>register</code> can return <code>unregister</code> so they can also share the same item (to be subscribed) =&gt;so we register inside <code>useEffect</code></li> <li>using a Set instead of an array will not prevent duplication of item objects. correct <code>unregister</code> will.</li> <li>We don't need a ContextProvider in this case. Just add the Registrar as the default object into <code>createContext</code></li> <li><code>dispatch</code> from <code>useReducer</code> is identical throughout renders. We can use it to check for identity and also force its execution to force rerender</li> <li><code>typeof this.subscribers[number]</code> gives the type of the item inside subscribers[]</li> <li></li> </ul>"},{"location":"Work/202304031655%20-%20TIL%20TypeScript/","title":"202304031655   TIL TypeScript","text":""},{"location":"Work/202304031655%20-%20TIL%20TypeScript/#get-the-keys-of-an-object-as-a-type-union-of-literals","title":"Get the keys of an object as a type (Union of literals)","text":"<pre><code>const columnMetric = {\n  date: 'addDateCategory',\n  performance: 'selectSpend',\n}\n\n// typeof columnMetric gives the type of the object =&gt; \"object\"\n\nkeyof typeof columnMetric // gives Type of Union of string literals 'date', 'performance'\n\n// Check if something belongs to the object properties\n\nconst isPlatformMetric = (label:string): label is keyof typeof columnMetric =&gt;{\n  return Object.keys(columnMetric).includes(label)\n}\n\n\n</code></pre>"},{"location":"Work/202304031655%20-%20TIL%20TypeScript/#make-the-values-satisfy-a-certain-type","title":"Make the values satisfy a certain type","text":""},{"location":"Work/202304031655%20-%20TIL%20TypeScript/#make-the-array-values-of-a-type","title":"Make the Array values of a type","text":"<pre><code>const journeySteps = ['step1', 'step2', 'step3'] as const // readonly array\n\n// take the type from index access types [number]\n// Union of string literals\ntype JourneySteps = typeof journeySteps[number] // 'step1' | 'step2' | 'step3'\n</code></pre>"},{"location":"Work/202304031655%20-%20TIL%20TypeScript/#error","title":"Error","text":"<pre><code>Type 'Record&lt;\"addDateCategory\", UserJourneyStepStatus&gt;' is not assignable to type 'Record&lt;\"addDateCategory\" | \"createNewReport\" | \"createBlankReport\" | \"createReport\" | \"selectDimensions\" | \"addCampaign\" | \"applyChangesToDimension\" | \"selectColumns\" | \"addColumnMetric\" | ... 12 more ... | \"saveReport\", UserJourneyStepStatus&gt;'.\n</code></pre>"},{"location":"Work/202304171532%20TIL%20-%20Jest%20Mock/","title":"202304171532 TIL   Jest Mock","text":""},{"location":"Work/202304171532%20TIL%20-%20Jest%20Mock/#jest-mock-default-export-vs-name-export","title":"Jest Mock: default export vs name export","text":""},{"location":"Work/202304171532%20TIL%20-%20Jest%20Mock/#named-export","title":"Named Export","text":"<p>If we want to mock a function from a named export</p> <pre><code>const store = createStore({})\nstore.dispatch(type, data)\n\n// jest mock\nconst dispatchSpy = jest.spyOn(store, 'dispatch')\n\n</code></pre>"},{"location":"Work/202304171532%20TIL%20-%20Jest%20Mock/#default-export","title":"Default Export","text":"<p>If we are to mock function from default export</p> <pre><code>\nimport { useDispatch } from \"react-redux\";\nconst dispatch = useDispatch();\n\n\n// In Jest test file, to mock dispatch\n\nconst mockDispatch = jest.fn();\njest.spyOn(reactRedux, 'useDispatch').mockReturnValue(mockDispatch);\n\n</code></pre>"},{"location":"Work/202304171532%20TIL%20-%20Jest%20Mock/#debug-jest-test-errors","title":"Debug Jest Test Errors","text":""},{"location":"Work/202304171532%20TIL%20-%20Jest%20Mock/#something-wrong-with-the-rendered-component-not-returned","title":"something wrong with the rendered component not returned","text":"<ul> <li>It could be that one of the mocked components inside was not mocked correctly</li> </ul> <pre><code>// this mock works\njest.mock('../AllViewsProvider', () =&gt; () =&gt; &lt;div&gt;Mock AllViewsProvider&lt;/div&gt;);\n\n// jest.fn cannot mock a React Component\njest.mock('../AllViewsProvider', () =&gt; jest.fn());\n\n</code></pre>"},{"location":"Work/202305031214%20-%20TIL/","title":"202305031214   TIL","text":""},{"location":"Work/202305031214%20-%20TIL/#make-drawer-appear-on-angular-pages","title":"Make Drawer appear on Angular pages","text":""},{"location":"Work/202305031214%20-%20TIL/#current-architecture","title":"Current Architecture","text":"<ul> <li>The Smartly App is served as an Angular app. Some Angular pages are made via Angular code but many are actually made up by React Components and bridged to Angular.</li> <li>The Angular pages and React pages all share the GlobalNavigation bar. The GlobalNavigation is mounted to Angular directly</li> <li>In order for the User Journey Drawer to appear on Angular pages, we can leverage the GlobalNavigation, and put the UserJourneyProvider and UserJourneyRenderer in GlobalNavigation, so that Angular pages also have access to Drawer</li> <li>An Issue with the Angular page is the State. The Drawer state was saved in the React state and the state will be lost when navigating to the Angular pages</li> <li>So there are 2 ways to do it: 1. saved in redux (but redux route is to be deprecated...not sure when) or 2. saved in the sessionStorage</li> <li>Minna adopt the route of saving in the sessionStorage.</li> </ul>"},{"location":"Work/202305031214%20-%20TIL/#2-sources-of-truth","title":"2 Sources of truth?","text":"<ul> <li>Previously we signal the Drawer should happen based on URL. In Angular pages, we don't get the URL update so the information needs to be in session</li> <li>So, we sync the session and React state on every render.</li> <li>We still dispatch actions to alter the React state </li> <li>and we read the values from the session. Read the userJourneyId from session instead of from the URL param</li> </ul>"},{"location":"Work/202305031214%20-%20TIL/#how-to-make-it-happen-in-code","title":"How to make it happen in code?","text":"<ul> <li>create a usePersistJourney hook<ul> <li>it creates</li> </ul> </li> <li>In UserJourneyRenderer<ul> <li>onUserJourneyOpen<ul> <li><code>useEffect</code> hook to check the currentUserJourneyId, prevUserJourneyId</li> <li>and call <code>callback</code></li> </ul> </li> <li>onUserJourneyClose<ul> <li><code>useEffect</code> hook to check the isDrawerClosed, wasDrawerClosed</li> <li>and call <code>callback</code></li> </ul> </li> <li>handleUserJourneyOpen (the callback pas to onUserJourneyOpen hook)<ul> <li>segment send open event</li> <li>dispatch open event, load the drawer initialState</li> <li>load userJourney state in session </li> </ul> </li> <li>handleUserJourneyClose (the callback passed to onUserJourneyClose hook)<ul> <li>segment send Aborted event (if not completed)</li> <li>clear the userJourney from session (the React state is cleared from clicking Cross on Drawer)</li> </ul> </li> </ul> </li> <li>Create a hook: usePersistJourney<ul> <li>on every render, copy from react state to session</li> <li>loadStoredJourney: if there is something in session, always load from session</li> <li>clearStoredJourney: clear session</li> <li>storedJourneyId: indicates whether something is in the session</li> </ul> </li> </ul>"},{"location":"Work/202305051201%20-%20TIL%20Reflection/","title":"202305051201   TIL Reflection","text":""},{"location":"Work/202305051201%20-%20TIL%20Reflection/#planning-meeting","title":"Planning Meeting","text":"<ul> <li>I liked Minna's suggestions and proposals<ul> <li>We should have a tech planning involving all engineers togethers before giving Andrey the estimation</li> <li>We should dedicate a time block for doing the planning work together instead of getting people to do planning in an adhoc manner </li> <li>How to roll out the token changes to the whole frontend app?<ul> <li>I first just thought it is Angelos job for talking to other teams to make sure they check the code the update places etc. It was noy our business &lt;- this kind of mentality limited me so that I didn't think deeper about the ways where the integration work could be carried out so that it is easy for teams to check and Angelos to follow up -&gt; even though it may not be our day to day responsibility, but we can still help and make a significant impact by making the process smoother </li> <li>The development branch approach does make a lot of sense!</li> <li>Next time: I can word my response in a way that takes more ownership - \"It is up to Angelos to push the teams to check and update the colors as they can give some pressure from the company direction. We can make the dev branch and get the dev environment ready for them to check and push the changes in.\" &lt;- mention what we can do to make the process better!</li> </ul> </li> </ul> </li> <li>I still suck as estimation. Thanks Minna for the feedback and I should disect the ticket so that they finish in 1-2days</li> </ul>"},{"location":"Work/202305090958%20-%20TODO/","title":"202305090958   TODO","text":""},{"location":"Work/202305090958%20-%20TODO/#pr-review-support","title":"PR Review &amp; Support","text":"<ul> <li>Thu's PR, check with Duplo' devs<ul> <li>Paired with Minna</li> <li>ToDO: ask Den for review(/)</li> <li>wait for review</li> </ul> </li> <li>Yi's PR, ask Duplo devs to review my changes too. <ul> <li>TODO: check why Select keeps closing.=&gt; Issue with Block? cos in Yi's original PR the Select component opens fine</li> </ul> </li> <li>Yi's PR, why the build breaks?? (/)<ul> <li>Den is awesome. fixed it (/)</li> </ul> </li> </ul>"},{"location":"Work/202305090958%20-%20TODO/#misc","title":"Misc","text":"<ul> <li>create a meeting with Angelos and Duplo about the Block</li> </ul>"},{"location":"Work/202305090958%20-%20TODO/#design-system-planning","title":"Design System Planning","text":"<ul> <li>Figma Link<ul> <li>GOOGLE DOC</li> <li>Future Plan</li> <li>Color update Mapping pic</li> </ul> </li> </ul>"},{"location":"Work/202305090958%20-%20TODO/#todo-tomorrow","title":"TODO tomorrow","text":"<ul> <li>Yi's PR: Select keeps closing when placed inside the <code>label</code> , but we should use Label for select instead of nesting it inside the Block. Create something and propose</li> <li>CrossPlatformReport: Check with Pavlo</li> <li>Scrolling issue </li> </ul>"},{"location":"Work/202305101338%20-%20TODO/","title":"202305101338   TODO","text":"<ul> <li>Yi's PR<ul> <li>Minna is awesome! OK, so nested interactive elements are against accessibility standards</li> <li>It is best to add his Select or Input box by radio directly rather than extending</li> <li>I am so glad I had a quick huddle with Minna!! :D altho I did feel I wasted a bit of time detouring. But I also learnt more about the label stuff! :D</li> <li>The reason we extended the ListItemCheckbox with custom children is that we wanted to allow tags as inline icons. We don't have that case at the moment</li> </ul> </li> <li>=&gt; Retro: read and understand the recommended practice for Radio<ul> <li>Why did I not do it? I used to read and understand the concept that I didnt understand!</li> <li>=&gt; cos I was in a hurry. Thinking I wanted to process it as quickly as possible</li> <li>=&gt; but =&gt; should always take the time to</li> </ul> </li> </ul>"},{"location":"Work/202305101338%20-%20TODO/#support-checklist","title":"Support Checklist","text":"<pre><code>    - Understand their design and motivation\n    - Check the accessibility standard\n    - Check the recommended usage of such widget\n</code></pre> <p>Then I didn't do anything else...</p>"},{"location":"Work/202305101338%20-%20TODO/#todo","title":"TODO","text":"<ul> <li>Apply Jemi's change to Thu's PR</li> <li>Fix the failing build in Thu's PR</li> <li>Block - convince Angelos (/)</li> <li>Scrolling css and CrossPlatformReport redirection</li> </ul>"},{"location":"Work/202305101338%20-%20TODO/#todo_1","title":"TODO","text":"<ul> <li>Replied Yi's PR<ul> <li>Now in a discussion with Minna and Yi. See if we can just get Yi's PR in directly as by complying with the warning. See if we can just go in with Yi's original PR. Else, by restricting the warning. (/)</li> </ul> </li> <li>Thu's PR<ul> <li>Ask for Thu and Minnas review again</li> </ul> </li> <li>Overflow on the Create New Report Contextual Helper<ul> <li>There are currently 2 places where \"Create New Report\" Contextual Helpers are placed<ul> <li>ControlsPlain (Shown when Overflown)</li> <li>ViewsManagementTab (Shown when no Overflown)</li> <li>In TabSelector, when no overflown, ViewsManagementTab is shown</li> <li>The Scrollbar in TabSelector decides whether it is overflowing</li> <li>If overflowing, Scrollbar renders ControlsPlain</li> </ul> </li> <li>My investigation:<ul> <li>The issue is that, when there is no tab overflow, Scrollbar thinks there is and renders the ControlsPlain instead of ViewsManagementTab</li> <li>OverflowingRight is true so the \"&gt;\" Button appears</li> <li>overflowingRight is calculated by useIsOverflowing</li> <li><code>scrollWidth - roundedScrollLeft &gt; offsetWidth</code> these 3 values are derived from barRef, which is a ref for TabScrollSection, a Flexbox</li> </ul> </li> <li>Why Adding the Contextual Helper may change the offsetWidth?<ul> <li><code>const { scrollLeft, offsetWidth, scrollWidth } = element.current;</code></li> <li>these 3 are properties from DOM elements directly</li> </ul> </li> <li>Do an experiment<ul> <li>Without Contextual Helper: <ul> <li>Add console logs to these 3 values and overflowRight</li> <li>Drag the dev panel and see if overflows</li> </ul> </li> <li>With Contextual Helper<ul> <li>Add console logs to these 3 values and overflowRight</li> <li>Drag the dev panel and see if overflows</li> </ul> </li> </ul> </li> <li>=&gt; Still no obvious solution after some spiking and investigation.</li> <li>=&gt; Ask team to look at it together</li> </ul> </li> <li>CrossPlatformReport Navigation<ul> <li>=&gt; Step 1, redirect to the Home page<ul> <li>How was the redirection done for other reports?</li> <li>dispatch action back to the clicked step</li> </ul> </li> <li>=&gt; Step2, </li> </ul> </li> <li></li> </ul>"},{"location":"Work/202305101338%20-%20TODO/#todo_2","title":"TODO","text":"<ul> <li> <ol> <li>Den's PR (/)</li> </ol> </li> <li>Continue Overflow investigation from above<ul> <li>Actually, try attaching the Contextual Helper one level above on the Tab row</li> </ul> </li> <li>Cross Platform Report Navigation</li> <li>Slack Jenny about Internal Referral &lt;10min&gt;</li> <li>Zu Hause booking</li> <li>Write Support Checklist (understand Design, check accessibility standard of that component, check with the team about the concerns)</li> </ul>"},{"location":"Work/202305171236%20-%20TIL%20Principle/","title":"202305171236   TIL Principle","text":""},{"location":"Work/202305171236%20-%20TIL%20Principle/#what-i-learnt-today","title":"What I learnt today","text":"<ul> <li>Always consider Value first</li> <li>Avoid adhoc tasks. </li> </ul>"},{"location":"Work/202305171236%20-%20TIL%20Principle/#scenario","title":"Scenario","text":"<ul> <li>Priya wants some research done on the libraries we could use for achiving drag-drop grids</li> <li>I was not sure how to assess pros and cons as we were not given any further specific criteria</li> <li>I was also easily persuaded to undertake the tasks and timebox it<ul> <li>I was thinking, there are 3 libraries listed already. I can maybe look into the reviews and do a high level checkout of these libraries, their ratings, API conplexity etc and write a brief overview.</li> </ul> </li> <li>I liked Minna's way better - She pushed back this task as there is no clear criteria / use case requirements<ol> <li>it is an adhoc task and we have no visibility as to why this is urgent that we need to change our current work</li> <li>there is no clear criteria by which we can evaluate the libraries with. This feels like a waste of effort</li> <li>She suggests alternatives like asking in the <code>ask-frontend</code> channel to check if someone has done something similar - it was great that Hannu pops in and expressed his concerns about the lack of specific usecase and decided to hop in the decision of locking into one library at this point of time</li> </ol> </li> <li>As software engineers, we need to deliver the values . </li> <li>Don't be afraid to push back and ask for clarification before agreeing to undertake the work</li> <li>So that we can provide REAL values for the company!! :D</li> </ul>"},{"location":"Work/202305171236%20-%20TIL%20Principle/#jemi","title":"Jemi","text":"<ul> <li>Apply the abstract concepts to things I know well - e.g. React components / coding kata</li> <li>Write tests enumeratively: with precondions and actions and results</li> <li>Jemi recommended Dave Farley's Youtube channel </li> </ul>"},{"location":"Work/202305171236%20-%20TIL%20Principle/#ask-jemi-next-time","title":"Ask Jemi Next Time","text":"<ul> <li>I was thinking of using RemedaJS (TS version of Ramda) as TS kata </li> <li>but each function seems really complicated and relied on different support methods. </li> <li>How do I simplify it to be a TS kata that I can get started with??</li> </ul>"},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/","title":"202306231008   ToDo n Meeting Planning","text":""},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#todo","title":"Todo","text":"<ul> <li>Update ticket description: 20min + 10min checking</li> <li>Update the color token to the token Angelos created</li> <li>Brainstorm Meeting format on Monday \u2705<ul> <li>Braindump - my complaints on paper - write as what I thought</li> <li>Think of the format of the meeting<ul> <li>playful, game-wise</li> <li>engaging, make everyone feel taking part, contributing</li> </ul> </li> </ul> </li> <li>Career Planning - discussion with Adam \u2705<ul> <li>the problems I had </li> <li>what I want, my aspiration</li> <li>my doubt</li> </ul> </li> <li>The thunk stuff</li> </ul>"},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#brain-storm-for-monday-meeting","title":"Brain Storm for Monday Meeting","text":"<ul> <li>I had a big rant with Andrey, Jemi and Pavlo. Pavlo was great in reminding me that<ul> <li>We need to pick our own battles</li> <li>Count our arsenals and define strategies and </li> <li>carry them out and pivot</li> </ul> </li> <li>He shared stories about his experiences in choosing when to hop for the next one</li> <li>What he had hoped to have done differently : maybe stay in the battle until the end </li> <li>What he sees in a good manager - the middle management who has direct contact with the executors and also the senior management</li> <li>The senior management can sometimes lose perspectives of the severity of the issues when they hear report problems all the time - because they don't know whether it is getting even more serious and people start losing passions</li> <li>The senior management are all capable people. When they work as a team, they need to cooperate and communicate and make hard decisions and compromise. It is not easy, even for experienced and smart people. Everyone has own ego and opinions.</li> <li>He thinks, inspiring people and motivate people via intrinsic motivation is far more important<ul> <li>start with WHY and</li> <li>make people feel that they contribute to the idea / decide on the direction that you (mgmt) wanna go e.g. with the case of going back to the office</li> <li>DS update : e.g. start with problem definition within the team, share blog articles etc to plant seeds of thoughts</li> </ul> </li> <li>I got really motivated!! apart from complaining - there is perhaps something we can do within our control to shape the environment that we would like to work in!<ul> <li>He helps me recognise I have more resources at my disposal<ul> <li>e.g. I can go with Andrey to his meetings to compliment his lack of FE knowledge?</li> </ul> </li> <li>I can do something about it other than waiting for a new tech lead!</li> </ul> </li> <li>Yes! That totally escaped my mind. Andrey needed help. I know he is in an awkward position being the manager representing us to the meetings without the FE knowledge. but I didn't think of doing anything about it because it was outside of my responsibility. Seeing from the whole team's perspective where we lacked product leadership and technical leadership, maybe with our power combined, we can do something about it together!</li> </ul>"},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#my-frustration","title":"My frustration","text":""},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#no-vision-from-team-duplo","title":"No Vision from Team Duplo","text":"<ul> <li>Lack of leadership to steer the direction formulate what we, the Duplo Team sees and wants for the DS. Getting the design and just do what was told - is not very inspiring. </li> <li>I can do that, but it does not feel right. <ul> <li>e.g. when working on the color alias, i remember theme - is it important? what use case will it be used? if we gonna incorporate the theme, is there any ground work we gonna do in advance together?</li> <li>ALSO, I didn't pay too much attention thinking about release and adoption. Because the management is going to put that as a priority for adoption. They will do it. I don't feel I own it so I didn't dive in the details as I expect others like Ron they probably have thought about it. If there are problems with teams migrating to SUI v5 or v6, then they need to figure it out. But then, actually Team Duplo is implementing it so we will need to help troubleshoot those issues </li> </ul> </li> <li>We may not have all the answers immediately to provide designs with the feedback straight away in the meeting, but </li> <li>Was there no attempts of delivering the values or visions?<ul> <li>yes there were attempts, like they did in the fancy ppt</li> <li>It didn't click or inspire or make me feel included at all</li> </ul> </li> </ul>"},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#ineffective-communication","title":"Ineffective Communication","text":"<ul> <li>We have been having regular weekly meeting with Angelos and Daily everyday</li> <li>But we still had this huge misalignment<ul> <li>what the release should look like</li> <li>what is needed before we start development in order to have release confidence </li> </ul> </li> <li>Something annoys me<ul> <li>We start doing investigation on what design wants without knowing why</li> <li>e.g. Design decided that we are going to start a whole new DS without considering technical feasibility and now we have 2 UI Kits and SmartlyUI from Dev does not match with UI Kit from Design.</li> <li>We may not know enough to make the right technical call, we make mistakes, at least we as a team thought and discusses about it together and made our best attempt</li> </ul> </li> <li>Something that made me uneasy<ul> <li>What kind of issues we might encounter after the migration? (by reading the code I can't yet tell what the impact may look like)</li> <li>How much effort is it likely to take to have it resolved?</li> </ul> </li> </ul>"},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#how-to-open-the-discussion","title":"How to open the discussion","text":"<ul> <li>\"I had a big rant in retro. I had another big rant with Andrey and Pavlo last week. I am not someone who likes complain. I don't complain often, but this time I have been complaining quite a bit and feeling very frustrated working on DS. So I would like to have this conversations with you. Pavlo was very good that he inspired me to realise that, maybe there is something within our capability that we can do about it\"</li> <li>\"Here I think, perhaps we can have a dialogue. I was ranting a lot but in retro but I think not everyone was in a retro mode as it was also a team day preparing for events. I want to hear what you guys were thinking too.\"</li> <li></li> <li>I was frustrated due to lack of Vision from Team Duplo, Ineffective Communication</li> <li> <p>I also have expectations that were not met. </p> </li> <li> <p>\"I feel our meetings are not effective. I feel we need to have more conversations. Not Meetings. e.g. I have expectations for Andrey as team lead, but I believe he is also struggling.\"</p> </li> <li> <p>I wonder, if we can change our meeting format so that we can notice and align the </p> </li> <li> <p>If there is one thing that you could change about Daily format, what would it be?</p> </li> <li> <p>Share the problems that I see at the moment</p> </li> <li>Engage others to speak what problems they experience or if they feel the same way?</li> <li>Some changes we can implement <ul> <li>Ask 1 Kaizen problem: what would be the one thing that you wish could be different? What can we do about it together?</li> </ul> </li> </ul>"},{"location":"Work/202306231008%20-%20ToDo%20n%20Meeting%20Planning/#tools","title":"Tools","text":"<ul> <li>Miro Board? For visualisation with just a white board</li> </ul>"},{"location":"Work/202306241339%20-%20Learn%20Thunk/","title":"202306241339   Learn Thunk","text":""},{"location":"Work/202306241339%20-%20Learn%20Thunk/#redux-subscriber-observer-pattern","title":"Redux - Subscriber (Observer) Pattern","text":"<ul> <li>Redux is implemented using the Pub/Sub Pattern (Observer Pattern)</li> <li>That pattern is commonly used when we would like to subscribe to some changes. e.g. when the state is changed, we would like the UI to rerender. So we would like the render function to subscribe to the store, listen to the store.</li> <li>This pattern is commonly used in frontend as we would like the UI to listen to the state changes and update accordingly</li> <li>The mechanism of this pattern is that, there is an internal store of state. There is a publisher (dispatcher) that makes updates to the state. There is a subscribe function that adds other listeners (e.g. render) functions internally and call the listeners when state is changed.</li> <li><code>state, dispatcher, subscriber</code> are defined together. Due to closure, the dispatcher and subscriber have access to the state and each other. </li> <li>It enables the decoupled usages in the applications where <code>dispatcher</code> and <code>subscriber</code> can be called anywhere in the application but still have access to the state and can update accordingly</li> </ul>"},{"location":"Work/202306241339%20-%20Learn%20Thunk/#contextual-helper-priority-another-sub-pub-pattern","title":"Contextual Helper Priority - Another Sub Pub Pattern","text":"<ul> <li>This is also implemented in the Contextual Helper with Priority level in Smartly UI. When the UI changes and the Contextual Helpers on the page are updated, we would like to review them one by one to determine which contextual helper should be open now</li> <li>The state is a list of the contextual helpers currently on the page</li> <li>state: <code>[subscribers]</code> </li> <li>method: register function, that register <code>subscriber = {priority, rerender}</code>  the rerender function. </li> <li>So basically, when a contextual helper is on the page (UI change), then a <code>subscribe</code> of that contextual helper is added to the state. Everytime the list is updated, either from register or unregister, we will update the UI according to the latest priority list to determine which Contextual Helper should be displayed</li> <li>ie. When register or unregister is called, that contextual helper needs to be rerendered. </li> </ul> <pre><code>const [,rerender] = useReducer(()=&gt;({}),{})\n</code></pre>"},{"location":"Work/202306241339%20-%20Learn%20Thunk/#redux-thunk-example","title":"Redux Thunk Example","text":"<ul> <li>I wrote a blog post years ago about the Thunk...</li> <li>A Redux Thunk is a Redux middleware, it has the signature of <code>({ getState, dispatch }) =&gt; next =&gt; action =&gt; {}</code></li> <li>Basically, a thunk receives a <code>getstate, dispatch</code> from the applyMiddleware function, and returns another function <code>next =&gt; action =&gt; {}</code></li> </ul> <pre><code>    ({ dispatch, getState }) =&gt;\n    next =&gt;\n    action =&gt; {\n      // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n      // If this \"action\" is really a function, call it and return the result.\n      if (typeof action === 'function') {\n        // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n        return action(dispatch, getState)\n      }\n\n      // Otherwise, pass the action down the middleware chain as usual\n      return next(action)\n    }\n</code></pre>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/","title":"202306301526   Script for dependency checking","text":""},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#motivation","title":"Motivation","text":"<ul> <li>For Design System Migration, one of the harder part is to migrate the custom components and repos that still use an older version of SUI. Now We are on SUI5.x but For repos that are still on SUI 3.x and 4.x, it poses a risk to the DS migration</li> <li>We need to understand how many repos still depend on the old SUI and the obstacles that prevented the teams to update to the latest SUI</li> </ul>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#methods","title":"Methods","text":"<ul> <li>Following the pnpm-lock file in Frontend repo to track for the packages  // Jemi's example Example of dependency tracking</li> <li>Text search\u00a0<code>@smartly/tokens/3</code>\u00a0finds the installation. Copy version.  </li> <li>text search for\u00a0<code>'@smartly/tokens': 3.113.1_5gmf44wh7eu5myllprwccqvqie</code>\u00a0finds dependents. Pick one as an example:\u00a0<code>@smartly/button/3.113.1_w2bf6tsmpojz6yvlz3yaqqr2a4</code> </li> <li>Follow the dependency chain with a couple more searches:\u00a0<code>@smartly/button': 3.113.1_w2bf6tsmpojz6yvlz3yaqqr2a4</code>,\u00a0<code>@smartly/query-builder': 3.113.1_w2bf6tsmpojz6yvlz3yaqqr2a4</code>.This gives us the following graph<code>@smartly/pinterest-campaign-wizard/14.0.1</code> \u00a0=&gt;\u00a0<code>@smartly/query-builder/3.113.1</code>\u00a0=&gt;\u00a0<code>@smartly/button/3.113.1</code>\u00a0=&gt;\u00a0<code>@smartly/tokens/3.113.1</code>I happen to know\u00a0<code>@smartly/pinterest-campaign-wizard</code>\u00a0is in the\u00a0pinterest-campaign-management\u00a0repository. If I didn't I'd have to search our GitHub for a repository. In the\u00a0package.json\u00a0of\u00a0<code>pinterest-campaign-wizard</code>\u00a0we see the dependency definition that needs to change.</li> </ul>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#initial-approach","title":"Initial Approach","text":"<pre><code>&gt; in pnpm-lock file, search for\u00a0\n\n'@smartly/tokens': ~3  \n'@smartly/tokens': ^3\n\n'@smartly/tokens': ~4\n\n'@smartly/tokens': ^4  \n=&gt; no results\n</code></pre> <ul> <li>Search for <code>'@smartly/tokens': 3</code></li> <li>=&gt; 15 results for the package</li> <li>=&gt; Tracing the results up the recursively yield a few different repos that still use version 3 of the tokens</li> </ul>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#script-for-exhaustive-search","title":"Script for exhaustive search","text":"<ul> <li>It is tiring the prone to negligence from manual search</li> <li>I want to write a script to do that</li> <li>I want an easy way to debug and see the errors as I write the script</li> </ul>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#1-write-a-node-script-that-reads-pnpm-lock-file","title":"1. Write a Node script that reads pnpm-lock file","text":""},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#key-learnings","title":"Key Learnings","text":""},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#understand-the-context-of-the-data","title":"Understand the context of the data","text":"<ul> <li>Always, always take the time to understand the data and the context </li> <li>and simply the data input to the very essential</li> <li>=&gt; this would save heaps of time down the road</li> </ul>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#recursion-is-only-1-direction","title":"Recursion is only 1 direction!","text":""},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#and-traversing-the-object-up-down-is-2-directions","title":"and Traversing the object up &amp; down is 2 directions","text":""},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#and-continuously-searching-for-parent-ancestors-is-another-recursion-loop","title":"and Continuously searching for parent, ancestors is another recursion/ loop","text":""},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#and-going-through-all-occurrences-is-another-loop","title":"and going through all occurrences is another loop!","text":"<ul> <li>I have a rough idea that recursion is the key. The insights into these inner workings became apparent after I started working and debugging through the problem.</li> </ul>"},{"location":"Work/202306301526%20-%20Script%20for%20dependency%20checking/#how-can-i-notice-these-sooner-and-earlier","title":"How can I notice these sooner and earlier?","text":"<ul> <li>More detailed pseudocode with exact input and output. </li> <li>Also write code at the same time to support it</li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/","title":"202309071113   Global Navigation Tech Investigation","text":""},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#goal","title":"Goal","text":"<ul> <li>Update the Global Nav bar with a New Design as part of the work of DS revamp</li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#my-idea","title":"My Idea","text":""},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#take-a-button","title":"Take a Button","text":"<ul> <li>Move it from SUI to a package inside monorepo (/packages/sui-button)</li> <li>Replace the inner HTML with Radix Button</li> <li>Style with Tailwind, using the default tokens</li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#step-by-step","title":"Step by Step","text":""},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#11-sept","title":"11 Sept","text":"<ul> <li>Talked to Hannu:<ul> <li>We want to place packages on the root level. <code>packages/ui-v2/button</code></li> <li>There should be no <code>package.json</code> in <code>ui-v2</code> level to avoid complexity</li> <li>We also don't want to depend on relative linting config. In case, people change the linting config outside and invalidate the linting inside the packages.</li> <li>Have separate tasks for: <ul> <li>Removing the package.json from the <code>ui-v2</code> level</li> <li>Updating the linting configs (more strict), and make the ts-config package isolated </li> <li>Create visual-regression tests for the packages</li> <li></li> </ul> </li> </ul> </li> <li>Todo:<ul> <li>Move <code>ui-v2</code> under <code>packages/</code> again and make sure <code>pnpm i</code> <code>pnpm build</code> runs</li> <li>Change the tsconfig back to the original one, to make the linting rule pass and pnpm build pass</li> </ul> </li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#notes","title":"Notes","text":"<ul> <li>mv ui-v2 back to under <code>packages/</code></li> <li>Remove the <code>dist</code>, <code>node_modules</code> inside <code>packages/ui-v2/button</code></li> <li>run <code>pnpm i</code></li> <li>=&gt; missing peer dependencies issues for <code>button</code> dependencies like <code>inline-spinner</code>, <code>tokens</code>. These peer dependencies were not installed here. </li> <li>Idea of peer dependencies: Plugins (SmartlyUI) and Host package (frontend) may depend on the same libraries (react, styled-components). </li> <li>So, in <code>ui-v2</code>, we are using the package.json with peerDependencies from Example_Package. So it looks good. In <code>packages/ui-v2/button</code>  , peerDependencies are also declared so it looks good. The complaints are about the button's dependencies: icons, tokens etc.<ul> <li>This issue was not there when the path directory is <code>ui-v2/button</code>. </li> <li>Maybe need to add some configuration like npm <code>workspaces</code> </li> <li>What is workspace? =&gt; The packages inside will get symlinked to the node_modules of the current working dir</li> <li>In pnpm, a workspace must have a <code>pnpm-workspace.yaml</code> at root</li> <li>In npm, a workspace is defined in <code>package.json</code></li> </ul> </li> <li>=&gt; BUT, I already defined workspace <code>packages/ui-v2</code> inside <code>pnpm-workspace.yaml</code> </li> </ul> <p>Another Approach - I will create an example-package under <code>packages/smartly-ui</code> - Make sure it builds with <code>pnpm i</code> and <code>pnpm build</code> - Then copy and paste button src over</p>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#07-sept","title":"07 Sept","text":"<ul> <li>Looked into Migration instructions. The SUI components look like many packages inside a monorepo, but looking at the individual component like Button. Button depends on <code>icons: 5.121.0</code> instead of <code>icons: workspace:</code> - so it is depending on specific package versions.</li> <li>To make the packages colocate together in the file tree, I gave it a temporary naming: ui-button</li> <li>Run the command in SUI repo to split the <code>package/button</code> folder into a branch <code>git subtree split -P packages/&lt;package name&gt; -b monorepo-migration</code></li> <li>Run the commend in Frontend repo to push the split package in the branch into a new package  <code>git subtree add --prefix packages/&lt;package name&gt; git@github.com:smartlyio/&lt;repository&gt;.git monorepo-migration</code></li> <li>=&gt; NOW we have <code>packages/ui-button</code> in Frontend!</li> <li>=&gt; Pedro prefers to have <code>packages/ui-v2/button</code> , <code>packages/ui-v2/tokens</code> . Copy the files from <code>example-package</code> to be the root of <code>ui-v2</code></li> <li>=&gt; Instead of moving all SUI in monorepo all at once, lets keep the ones in monorepo with new styling to avoid confusion </li> <li>=&gt; NOW, we have <code>packages/ui-v2/button</code> in the Frontend! </li> <li>Export button component to the root of ui-v2 package</li> <li>install the dependencies that <code>button</code> package needs by <code>pnpm i</code></li> <li>=&gt; ALL monorepo packages are built!! </li> <li>=&gt; BUT, the button package dependencies are not pulled down..</li> <li>=&gt; ok, I can move the button/ dependencies to ui-v2 dependencies as they can be shared with other components when they get slowly moved </li> <li>=&gt; make the files like <code>ui-v2/button/Button.tsx</code></li> <li><code>pnpm reinstall</code> <code>pnpm build</code></li> <li>=&gt; Build Error!!</li> <li>=&gt; Pedro wants to be able to build individual packages so that external repos dont need to import all</li> <li>=&gt; modify the tsconfig.json and tsconfig.build.json files</li> <li>Check docs: Turborepo workspaces</li> <li>In <code>pnpm-workspace.yaml</code>, add <code>ui-v2/**</code></li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#concerns","title":"Concerns","text":"<ul> <li>How to reserve the Jest snapshot testing and visual regression testing after the migration?<ul> <li>Configure it inside of each package</li> </ul> </li> <li>Make the package available for repos outside of mono-repo</li> <li>The outside repo should be able to import specific component packages <code>ui-v2/button</code>, instead of all inside <code>ui-v2</code></li> <li>Fix CI</li> <li>Check over all package.json commands and make sure <code>**</code> are taken care of to cover this nested repo</li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#investigate-later","title":"Investigate later","text":"<ul> <li>OR actually, we can migrate the whole SUI over to Frontend all together  - but we need to make sure all the devDependencies in SUI root are also present in Frontend Root. </li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#q-what-were-the-reasons-and-tickets-that-sui-couldnt-be-moved-to-monorepo","title":"Q: What were the reasons and tickets that SUI couldn't be moved to monorepo","text":"<ol> <li>Jest 27 -&gt; 29 upgrade. We resolved issues to upgrade SUI to Jest 29. Compatible with frontend Jest 29!</li> <li>https://github.com/smartlyio/smartly-ui/pull/3709</li> <li>https://smartlyio.atlassian.net/browse/DUPLO-2140</li> </ol>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#tech-investigation-todo","title":"Tech Investigation TODO:","text":""},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#migrate-the-button-package-to-frontend","title":"Migrate the button package to frontend","text":"<pre><code>git subtree add --prefix packages/&lt;package name&gt; git@github.com:smartlyio/&lt;repository&gt;.git master\n</code></pre>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#other-components","title":"Other Components:","text":"<ul> <li>Button: Icon, Tokens, (Tooltip?), inlineSpinner(?),</li> <li>Others to breakdown: Dropdown, Input, List,</li> </ul>"},{"location":"Work/202309071113%20-%20Global%20Navigation%20Tech%20Investigation/#past-lesson","title":"Past lesson","text":"<ul> <li>Design created a whole new set of components separately, with new style and capability, and want to use them to replace the existing ones in the system <ul> <li>super risky<ul> <li>=&gt; because the app is super complex </li> <li>We don't have dedicated QA engineers for testing</li> <li>Our automated tests cover only functional changes, not UI changes</li> <li>and even if we ask dev teams to test, there are bound to be some pages that were missed out. </li> </ul> </li> <li>requires lots of work, long feedback loop. <ul> <li>The Smartly UI packages are out side of monorepo. We need to publish alpha packages first before and update the SUI consumption in all packages in monorepo</li> <li>Since teams make constant releases, there will be constant merge conflicts to resolve</li> <li>When teams contribute to SUI improvements, SUI need to be updated as well and alpha packages republished</li> <li>pnpm build failures, duped packages, build bundle grow too much</li> </ul> </li> </ul> </li> </ul> <p>Race Conditions:  https://github.com/smartlyio/frontend/pull/20797</p>"},{"location":"Work/Homework%20AST%20Types/","title":"Homework AST Types","text":""},{"location":"Work/Homework%20AST%20Types/#homework","title":"Homework","text":"<ul> <li>Given Typescript AST type definitions</li> <li>Use the AST explorer to create each of the types</li> </ul>"},{"location":"Work/Homework%20AST%20Types/#what-is-ast","title":"What is ast?","text":"<ul> <li>AST: Abstract Syntax Tree</li> <li>It is a JS object</li> <li>It contains the tree representing the source</li> <li>We use ECMAScript parsers to read the code and parse the code into a structured tree object, AST.</li> <li>For TypeScript, we use the TypeScript Parsers</li> </ul>"},{"location":"Work/Homework%20AST%20Types/#references","title":"References","text":"<ul> <li>Estree</li> <li>ESDoc</li> <li></li> </ul>"},{"location":"Work/Homework%20AST%20Types/#typescript","title":"Typescript","text":""},{"location":"Work/Homework%20AST%20Types/#genericsort-genericsearch","title":"GenericSort GenericSearch","text":"<p>See the TS Playground</p> <p>Rambda When: Add types</p> <pre><code>type ParamType&lt;U,V&gt; = U | V;\n\ntype RetultsType&lt;T, A extends T ,V&gt; = A extends A ? V : A \n\n\n// const when = &lt;T,A extends T,V&gt;(predicate: (param: T) =&gt; param is A) =&gt; (callback: (param: A) =&gt; V) =&gt;...\n</code></pre> <p>Playground Link</p>"},{"location":"Work/Nested%20Routes/","title":"Nested Routes","text":""},{"location":"Work/Nested%20Routes/#nested-routes","title":"Nested Routes","text":"<ul> <li>In the PR, when creating <code>renderWithRouter</code> test utils, there was an issue with navigation that it does not support navigation, I had to wrap it with a base Route <code>renderWithRouterAndBaseRoute</code> for testing navigation</li> <li>Looking at Hannu's PR, it was because in the Onboarding nested route implementation, we didn't use  and instead we used <code>&lt;Route path=\"*\" /&gt;</code> to capture all routes. </li> </ul>"},{"location":"Work/Nested%20Routes/#how-does-nested-route-work","title":"How does Nested Route work?","text":"<ul> <li>Only got the nested routes woking in the <code>WithOutlet.js</code> example</li> <li>In App.js, we enable replacing root route with <code>/withOutlet</code></li> <li>WithOutlet has a nested route. It contains <code>&lt;Routes&gt;&lt;Route path=\"/innerOutlet/*\" &gt;</code> That Route will retain the WithOutlet rendered html and place the children elements inside the Outlet area. The Route path specifies the next path to the children element, the * is important as it will allow the next grandchildren path to be captured. To navigate and show the children, the  Link to path needs to contain the whole url destination path, not just the nested relative path</li> <li>We can have multiple levels of the nested Routes. </li> <li>In InnerOutlet, we can further define nested routes and have the children elements shown where Outlet is placed.  </li> </ul>"},{"location":"Work/Power%20of%20Block/","title":"Power of Block","text":""}]}